package tech.codegarage.quotes.model;

import android.util.Log;

import com.kannan.glazy.GlazyCard;
import com.kannan.glazy.views.GlazyImageView;
import com.reversecoder.library.storage.SessionManager;
import com.reversecoder.library.util.AllSettingsManager;

import org.litepal.crud.DataSupport;

import java.util.ArrayList;
import java.util.List;

import tech.codegarage.quotes.R;
import tech.codegarage.quotes.interfaces.DataInputListener;

import static tech.codegarage.quotes.application.QuoteApp.getGlobalContext;
import static tech.codegarage.quotes.util.AllConstants.SESSION_DATA_APP_DATA_BUILDER;
import static tech.codegarage.quotes.util.AllConstants.SESSION_QUOTE_OF_THE_DAY;

public class AppDataHandler {

    private static String TAG = AppDataHandler.class.getSimpleName();
    public static DataInputListener mDataInputListener = null;

    /**************
     * Data input *
     **************/
    public static ArrayList<AppDataBuilder> initAllQuotes(DataInputListener dataInputListener) {
        Log.d(TAG, "TAG-initAllQuotes-1");
        mDataInputListener = dataInputListener;
        ArrayList<AppDataBuilder> appDataBuilders = new ArrayList<>();
        Log.d(TAG, "TAG-initAllQuotes-2");

        appDataBuilders.addAll(inputQuoteAtoI(mDataInputListener));
        Log.d(TAG, "TAG-initAllQuotes-3");
        appDataBuilders.addAll(inputQuoteJtoZ(mDataInputListener));
        Log.d(TAG, "TAG-initAllQuotes-4");

        DataAppDataBuilder dataAppDataBuilder = new DataAppDataBuilder(appDataBuilders);
        Log.d(TAG, "TAG-initAllQuotes-5");
        SessionManager.setStringSetting(getGlobalContext(), SESSION_DATA_APP_DATA_BUILDER, DataAppDataBuilder.convertFromObjectToString(dataAppDataBuilder));
        Log.d(TAG, "TAG-initAllQuotes-6");

        return appDataBuilders;
    }

    private static ArrayList<AppDataBuilder> inputQuoteAtoI(DataInputListener dataInputListener) {
        ArrayList<AppDataBuilder> appDataBuilders = new ArrayList<AppDataBuilder>();
        Log.d(TAG, "TAG-inputQuoteAtoI-1");

        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.APJ_ABDUL_KALAM.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Teaching is a very noble profession that shapes the character, caliber, and future of an individual. If the people remember me as a good teacher, that will be the biggest honour for me.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.TEACHER.getTag())
                                .addLitePalTags(EnumTag.CHARACTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We should not give up and we should not allow the problem to defeat us.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.DEFEAT.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let us sacrifice our today so that our children can have a better tomorrow.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.TODAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you want to shine like a sun, first burn like a sun.", false, true))
                                .addLitePalTags(EnumTag.SUN.getTag())
                                .addLitePalTags(EnumTag.SHINE.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If a country is to be corruption free and become a nation of beautiful minds, I strongly feel there are three key societal members who can make a difference. They are the father, the mother and the teacher.", false, true))
                                .addLitePalTags(EnumTag.FAMILY.getTag())
                                .addLitePalTags(EnumTag.BEAUTIFUL.getTag())
                                .addLitePalTags(EnumTag.FATHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To succeed in your mission, you must have single-minded devotion to your goal.", false, true))
                                .addLitePalTags(EnumTag.GOAL.getTag())
                                .addLitePalTags(EnumTag.MISSION.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Look at the sky. We are not alone. The whole universe is friendly to us and conspires only to give the best to those who dream and work.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never stop fighting until you arrive at your destined place - that is, the unique you. Have an aim in life, continuously acquire knowledge, work hard, and have perseverance to realise the great life.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.PERSEVERANCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Science is a beautiful gift to humanity; we should not distort it.", false, true))
                                .addLitePalTags(EnumTag.BEAUTIFUL.getTag())
                                .addLitePalTags(EnumTag.SCIENCE.getTag())
                                .addLitePalTags(EnumTag.GIFT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The bird is powered by its own life and by its motivation.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.BIRD.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        Log.d(TAG, "TAG-inputQuoteAtoI-2");
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ALBERT_CAMUS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't walk behind me; I may not lead. Don't walk in front of me; I may not follow. Just walk Autumn is a second spring when every leaf is a flower.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.FLOWER.getTag())
                                .addLitePalTags(EnumTag.SPRING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't walk behind me; I may not lead. Don't walk in front of me; I may not follow. Just walk beside me and be my friend.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.WALK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Blessed are the hearts that can bend; they shall never be broken.", false, true))
                                .addLitePalTags(EnumTag.MOVING_ON.getTag())
                                .addLitePalTags(EnumTag.BLESSED.getTag())
                                .addLitePalTags(EnumTag.BROKEN.getTag())
                                .buildQuotes()
                        )

                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The only way to deal with an unfree world is to become so absolutely free that your very existence is an act of rebellion.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.FREE.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In the depth of winter I finally learned that there was in me an invincible summer.", false, true))
                                .addLitePalTags(EnumTag.WINTER.getTag())
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man without ethics is a wild beast loosed upon this world.", false, true))
                                .addLitePalTags(EnumTag.MAN.getTag())
                                .addLitePalTags(EnumTag.ETHICS.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You will never be happy if you continue to search for what happiness consists of. You will never live if you are looking for the meaning of life.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Integrity has no need of rules.", false, true))
                                .addLitePalTags(EnumTag.INTEGRITY.getTag())
                                .addLitePalTags(EnumTag.RULES.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Real generosity toward the future lies in giving all to the present.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.GIVING.getTag())
                                .addLitePalTags(EnumTag.GENEROSITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The evil that is in the world almost always comes of ignorance, and good intentions may do as much harm as malevolence if they lack understanding.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ARISTOTLE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is during our darkest moments that we must focus to see the light.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.LIGHT.getTag())
                                .addLitePalTags(EnumTag.FOCUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Quality is not an act, it is a habit.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.QUALITY.getTag())
                                .addLitePalTags(EnumTag.HABIT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The roots of education are bitter, but the fruit is sweet.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.ROOTS.getTag())
                                .addLitePalTags(EnumTag.SWEET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is the mark of an educated mind to be able to entertain a thought without accepting it.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Excellence is an art won by training and habituation. We do not act rightly because we have virtue or excellence, but we rather have those because we have acted rightly. We are what we repeatedly do. Excellence, then, is not an act but a habit.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.TRAINING.getTag())
                                .addLitePalTags(EnumTag.EXCELLENCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Pleasure in the job puts perfection in the work.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.JOB.getTag())
                                .addLitePalTags(EnumTag.PERFECTION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no great genius without some touch of madness.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.GENIUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Love is composed of a single soul inhabiting two bodies.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LOVE_IS.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The one exclusive sign of thorough knowledge is the power of teaching.", false, true))
                                .addLitePalTags(EnumTag.TEACHER.getTag())
                                .addLitePalTags(EnumTag.KNOWLEDGE.getTag())
                                .addLitePalTags(EnumTag.POWER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The worst form of inequality is to try to make unequal things equal.", false, true))
                                .addLitePalTags(EnumTag.EQUALITY.getTag())
                                .addLitePalTags(EnumTag.INEQUALITY.getTag())
                                .addLitePalTags(EnumTag.TRY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.AUDREY_HEPBURN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing is impossible, the word itself says 'I'm possible'!", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The beauty of a woman must be seen from in her eyes, because that is the doorway to her heart, the place where love resides.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.EYES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For beautiful eyes, look for the good in others; for beautiful lips, speak only words of kindness; and for poise, walk with the knowledge that you are never alone.", false, true))
                                .addLitePalTags(EnumTag.KINDNESS.getTag())
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.BEAUTIFUL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The most important thing is to enjoy your life - to be happy - it's all that matters.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .addLitePalTags(EnumTag.BE_HAPPY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The beauty of a woman is not in a facial mode but the true beauty in a woman is reflected in her soul. It is the caring that she lovingly gives the passion that she shows. The beauty of a woman grows with the passing years.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.PASSION.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I believe in pink. I believe that laughing is the best calorie burner. I believe in kissing, kissing a lot. I believe in being strong when everything seems to be going wrong. I believe that happy girls are the prettiest girls. I believe that tomorrow is another day and I believe in miracles.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.DAY.getTag())
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The best thing to hold onto in life is each other. ", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The beauty of a woman is not in the clothes she wears, the figure that she carries or the way she combs her hair.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.HAIR.getTag())
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I believe in manicures. I believe in overdressing. I believe in primping at leisure and wearing lipstick. I believe in pink. I believe happy girls are the prettiest girls. I believe that tomorrow is another day, and... I believe in miracles.", false, true))
                                .addLitePalTags(EnumTag.DAY.getTag())
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .addLitePalTags(EnumTag.TOMORROW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let's face it, a nice creamy chocolate cake does a lot for a lot of people; it does for me.", false, true))
                                .addLitePalTags(EnumTag.FOOD.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.CAKE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ABRAHAM_LINCOLN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If this is coffee, please bring me some tea; but if this is tea, please bring me some coffee.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.COFFEE.getTag())
                                .addLitePalTags(EnumTag.TEA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Character is like a tree and reputation like a shadow. The shadow is what we think of it; the tree is the real thing.", false, true))
                                .addLitePalTags(EnumTag.CHARACTER.getTag())
                                .addLitePalTags(EnumTag.TREE.getTag())
                                .addLitePalTags(EnumTag.SHADOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am a slow walker, but I never walk back.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.WALK.getTag())
                                .addLitePalTags(EnumTag.SLOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My dream is of a place and a time where America will once again be seen as the last best hope of earth.", false, true))
                                .addLitePalTags(EnumTag.HOPE.getTag())
                                .addLitePalTags(EnumTag.TIME.getTag())
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be sure you put your feet in the right place, then stand firm.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.STAND.getTag())
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You cannot escape the responsibility of tomorrow by evading it today.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.TODAY.getTag())
                                .addLitePalTags(EnumTag.TOMORROW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No man has a good enough memory to be a successful liar.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.MAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All that I am, or hope to be, I owe to my angel mother.", false, true))
                                .addLitePalTags(EnumTag.HOPE.getTag())
                                .addLitePalTags(EnumTag.MOTHER.getTag())
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nearly all men can stand adversity, but if you want to test a man's character, give him power.", false, true))
                                .addLitePalTags(EnumTag.CHARACTER.getTag())
                                .addLitePalTags(EnumTag.ADVERSITY.getTag())
                                .addLitePalTags(EnumTag.MAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("America will never be destroyed from the outside. If we falter and lose our freedoms, it will be because we destroyed ourselves.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.AMERICA.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ALDOUS_HUXLEY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is only one corner of the universe you can be certain of improving, and that's your own self.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.SELF.getTag())
                                .addLitePalTags(EnumTag.UNIVERSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There are things known and there are things unknown, and in between are the doors of perception.", false, true))
                                .addLitePalTags(EnumTag.PERCEPTION.getTag())
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.DOORS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The secret of genius is to carry the spirit of the child into old age, which means never losing your enthusiasm.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.AGE.getTag())
                                .addLitePalTags(EnumTag.CHILD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("After silence, that which comes nearest to expressing the inexpressible is music.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.SILENCE.getTag())
                                .addLitePalTags(EnumTag.EXPRESSING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To travel is to discover that everyone is wrong about other countries.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.WRONG.getTag())
                                .addLitePalTags(EnumTag.DISCOVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Experience is not what happens to you; it's what you do with what happens to you.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Facts do not cease to exist because they are ignored.", false, true))
                                .addLitePalTags(EnumTag.FACTS.getTag())
                                .addLitePalTags(EnumTag.EXIST.getTag())
                                .addLitePalTags(EnumTag.BECAUSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The more powerful and original a mind, the more it will incline towards the religion of solitude.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.POWERFUL.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All gods are homemade, and it is we who pull their strings, and so, give them the power to pull ours.", false, true))
                                .addLitePalTags(EnumTag.POWER.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.GOD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A democracy which makes or even effectively prepares for modern, scientific war must necessarily cease to be democratic. No country can be really well prepared for modern war unless it is governed by a tyrant, at the head of a highly trained and perfectly obedient bureaucracy.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ALEXANDER_HAMILTON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Learn to think continentally.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.LEARN.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Real liberty is neither found in despotism or the extremes of democracy, but in moderate governments.", false, true))
                                .addLitePalTags(EnumTag.DEMOCRACY.getTag())
                                .addLitePalTags(EnumTag.LIBERTY.getTag())
                                .addLitePalTags(EnumTag.REAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In framing a government which is to be administered by men over men, the great difficulty lies in this: you must first enable the government to control the governed; and in the next place, oblige it to control itself.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getTag())
                                .addLitePalTags(EnumTag.MEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A promise must never be broken.", false, true))
                                .addLitePalTags(EnumTag.BROKEN.getTag())
                                .addLitePalTags(EnumTag.PROMISE.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's not tyranny we desire; it's a just, limited, federal government.", false, true))
                                .addLitePalTags(EnumTag.GOVERNMENT.getTag())
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .addLitePalTags(EnumTag.TYRANNY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I never expect to see a perfect work from an imperfect man.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.MAN.getTag())
                                .addLitePalTags(EnumTag.PERFECT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think the first duty of society is justice.", false, true))
                                .addLitePalTags(EnumTag.JUSTICE.getTag())
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.FIRST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A well adjusted person is one who makes the same mistake twice without getting nervous.", false, true))
                                .addLitePalTags(EnumTag.MISTAKE.getTag())
                                .addLitePalTags(EnumTag.NERVOUS.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Unless your government is respectable, foreigners will invade your rights; and to maintain tranquillity, it must be respectable - even to observe neutrality, you must have a strong government.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is a certain enthusiasm in liberty, that makes human nature rise above itself, in acts of bravery and heroism.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.LIBERTY.getTag())
                                .addLitePalTags(EnumTag.RISE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ALEXANDER_POPE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The greatest magnifying glasses in the world are a man's own eyes when they look upon his own person.", false, true))
                                .addLitePalTags(EnumTag.EYES.getTag())
                                .addLitePalTags(EnumTag.LOOK.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Fools rush in where angels fear to tread.", false, true))
                                .addLitePalTags(EnumTag.ANGELS.getTag())
                                .addLitePalTags(EnumTag.TREAD.getTag())
                                .addLitePalTags(EnumTag.WHERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All nature is but art unknown to thee.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.THEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No one should be ashamed to admit they are wrong, which is but saying, in other words, that they are wiser today than they were yesterday.", false, true))
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.ASHAMED.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No woman ever hates a man for being in love with her, but many a woman hate a man for being a friend to her.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.EVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Teach me to feel another's woe, to hide the fault I see, that mercy I to others show, that mercy show to me.", false, true))
                                .addLitePalTags(EnumTag.TEACH.getTag())
                                .addLitePalTags(EnumTag.SHOW.getTag())
                                .addLitePalTags(EnumTag.ANOTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Charms strike the sight, but merit wins the soul.", false, true))
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.STRIKE.getTag())
                                .addLitePalTags(EnumTag.WINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("On life's vast ocean diversely we sail. Reasons the card, but passion the gale.", false, true))
                                .addLitePalTags(EnumTag.OCEAN.getTag())
                                .addLitePalTags(EnumTag.REASONS.getTag())
                                .addLitePalTags(EnumTag.GALE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To be angry is to revenge the faults of others on ourselves.\n", false, true))
                                .addLitePalTags(EnumTag.ANGER.getTag())
                                .addLitePalTags(EnumTag.REVENGE.getTag())
                                .addLitePalTags(EnumTag.ANGRY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To err is human; to forgive, divine.", false, true))
                                .addLitePalTags(EnumTag.FORGIVENESS.getTag())
                                .addLitePalTags(EnumTag.FORGIVE.getTag())
                                .addLitePalTags(EnumTag.ERR.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ARNOLD_SCHWARZENEGGER.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The worst thing I can be is the same as everybody else. I hate that.", false, true))
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .addLitePalTags(EnumTag.WORST_THING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's simple, if it jiggles, it's fat.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.SIMPLE.getTag())
                                .addLitePalTags(EnumTag.FAT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Bodybuilding is much like any other sport. To be successful, you must dedicate yourself 100% to your training, diet and mental approach.", false, true))
                                .addLitePalTags(EnumTag.FITNESS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Help others and give something back. I guarantee you will discover that while public service improves the lives and the world around you, its greatest reward is the enrichment and new meaning it will bring your own life.", false, true))
                                .addLitePalTags(EnumTag.BRING.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .addLitePalTags(EnumTag.IMPROVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The mind is the limit. As long as the mind can envision the fact that you can do something, you can do it, as long as you really believe 100 percent.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.YOU_CAN_DO_IT.getTag())
                                .addLitePalTags(EnumTag.FACT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The future is green energy, sustainability, renewable energy.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.GREEN.getTag())
                                .addLitePalTags(EnumTag.RENEWABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Milk is for babies. When you grow up you have to drink beer.", false, true))
                                .addLitePalTags(EnumTag.GROW.getTag())
                                .addLitePalTags(EnumTag.GROW_UP.getTag())
                                .addLitePalTags(EnumTag.MILK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For me life is continuously being hungry. The meaning of life is not simply to exist, to survive, but to move ahead, to go up, to achieve, to conquer.", false, true))
                                .addLitePalTags(EnumTag.CONQUER.getTag())
                                .addLitePalTags(EnumTag.SURVIVE.getTag())
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Just remember, you can't climb the ladder of success with your hands in your pockets.", false, true))
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.CLIMB.getTag())
                                .addLitePalTags(EnumTag.LADDER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Strength does not come from winning. Your struggles develop your strengths. When you go through hardships and decide not to surrender, that is strength.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.HARDSHIPS.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BARACK_OBAMA.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Change will not come if we wait for some other person or some other time. We are the ones we've been waiting for. We are the change that we seek.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.WAIT.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I see Americans of every party, every background, every faith who believe that we are stronger together: black, white, Latino, Asian, Native American; young, old; gay, straight; men, women, folks with disabilities, all pledging allegiance under the same proud flag to this big, bold country that we love. That's what I see. That's the America I know!", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We need to reject any politics that targets people because of race or religion. This isn't a matter of political correctness. It's a matter of understanding what makes us strong. The world respects us not just for our arsenal; it respects us for our diversity and our openness and the way we respect every faith.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.POLITICAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let us remember we are all part of one American family. We are united in common values, and that includes belief in equality under the law, basic respect for public order, and the right of peaceful protest.", false, true))
                                .addLitePalTags(EnumTag.VALUES.getTag())
                                .addLitePalTags(EnumTag.UNITED.getTag())
                                .addLitePalTags(EnumTag.PART.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you're walking down the right path and you're willing to keep walking, eventually you'll make progress.", false, true))
                                .addLitePalTags(EnumTag.PATH.getTag())
                                .addLitePalTags(EnumTag.WALKING.getTag())
                                .addLitePalTags(EnumTag.RIGHT_PATH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If the people cannot trust their government to do the job for which it exists - to protect them and to promote their common welfare - all else is lost.\n", false, true))
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.THEM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The future rewards those who press on. I don't have time to feel sorry for myself. I don't have time to complain. I'm going to press on.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Money is not the only answer, but it makes a difference.", false, true))
                                .addLitePalTags(EnumTag.MONEY.getTag())
                                .addLitePalTags(EnumTag.ANSWER.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("America isn't Congress. America isn't Washington. America is the striving immigrant who starts a business, or the mom who works two low-wage jobs to give her kid a better life. America is the union leader and the CEO who put aside their differences to make the economy stronger.", false, true))
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.CONGRESS.getTag())
                                .addLitePalTags(EnumTag.WORKS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("After a century of striving, after a year of debate, after a historic vote, health care reform is no longer an unmet promise. It is the law of the land.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.STRIVING.getTag())
                                .addLitePalTags(EnumTag.HISTORIC.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BEN_SHAPIRO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("During the Great Depression, levels of crime actually dropped. During the 1920s, when life was free and easy, so was crime. During the 1930s, when the entire American economy fell into a government-owned alligator moat, crime was nearly non-existent. During the 1950s and 1960s, when the economy was excellent, crime rose again.", false, true))
                                .addLitePalTags(EnumTag.ALLIGATOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Socialism violates at least three of the Ten Commandments: It turns government into God, it legalizes thievery and it elevates covetousness. Discussions of income inequality, after all, aren't about prosperity but about petty spite. Why should you care how much money I make, so long as you are happy?", false, true))
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .addLitePalTags(EnumTag.INCOME.getTag())
                                .addLitePalTags(EnumTag.LEAST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Distrust of government isn't baseless cynicism. It's realism.", false, true))
                                .addLitePalTags(EnumTag.REALISM.getTag())
                                .addLitePalTags(EnumTag.DISTRUST.getTag())
                                .addLitePalTags(EnumTag.CYNICISM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Matt Damon's anti-fracking diatribe was funded by the royal family of the United Arab Emirates.", false, true))
                                .addLitePalTags(EnumTag.FAMILY.getTag())
                                .addLitePalTags(EnumTag.UNITED.getTag())
                                .addLitePalTags(EnumTag.MATT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Capitalism requires individual responsibility and accountability. People are seen as atomized units in a capitalist system - they are either useful, or they are not. They are not seen racially or ethnically or religiously. They consume and they produce, and those are their only relevant characteristics.", false, true))
                                .addLitePalTags(EnumTag.SEEN.getTag())
                                .addLitePalTags(EnumTag.CONSUME.getTag())
                                .addLitePalTags(EnumTag.UNITS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The story of Detroit's bankruptcy was simple enough: Allow capitalism to grow the city, campaign against income inequality, tax the job creators until they flee, increase government spending in order to boost employment, promise generous pension plans to keep people voting for failure. Rinse, wash and repeat.", false, true))
                                .addLitePalTags(EnumTag.CITY.getTag())
                                .addLitePalTags(EnumTag.INCOME.getTag())
                                .addLitePalTags(EnumTag.ALLOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Socialism has no moral justification whatsoever; poor people are not morally superior to rich people, nor are they owed anything by rich people simply because of their lack of success. Charity is not a socialist concept - it is a religious one, an acknowledgment of God's sovereignty over property, a sovereignty the Left utterly rejects.", false, true))
                                .addLitePalTags(EnumTag.MORAL.getTag())
                                .addLitePalTags(EnumTag.RELIGIOUS.getTag())
                                .addLitePalTags(EnumTag.CONCEPT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every so often, we all gaze into the abyss. It's a depressing fact of life that eventually the clock expires; eventually the sand in the hourglass runs out. It's the leaving behind of everything that matters to us that hurts the most.", false, true))
                                .addLitePalTags(EnumTag.FACT.getTag())
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.EVENTUALLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Socialism states that you owe me something simply because I exist. Capitalism, by contrast, results in a sort of reality-forced altruism: I may not want to help you, I may dislike you, but if I don't give you a product or service you want, I will starve. Voluntary exchange is more moral than forced redistribution.", false, true))
                                .addLitePalTags(EnumTag.DISLIKE.getTag())
                                .addLitePalTags(EnumTag.FORCED.getTag())
                                .addLitePalTags(EnumTag.STARVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Freedom of speech and thought matters, especially when it is speech and thought with which we disagree. The moment the majority decides to destroy people for engaging in thought it dislikes, thought crime becomes a reality.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.DESTROY.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BENJAMIN_DISRAELI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A great city, whose image dwells in the memory of man, is the type of some great idea. Rome represents conquest; Faith hovers over the towers of Jerusalem; and Athens embodies the pre-eminent quality of the antique world, Art.", false, true))
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.CITY.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Power has only one duty - to secure the social welfare of the People.", false, true))
                                .addLitePalTags(EnumTag.POWER.getTag())
                                .addLitePalTags(EnumTag.SOCIAL.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never apologize for showing feeling. When you do so, you apologize for the truth.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.FEELING.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The secret of success is constancy to purpose.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS_IS.getTag())
                                .addLitePalTags(EnumTag.CONSTANCY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Like all great travellers, I have seen more than I remember, and remember more than I have seen.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.I_REMEMBER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Youth is a blunder; Manhood a struggle, Old Age a regret.", false, true))
                                .addLitePalTags(EnumTag.REGRET.getTag())
                                .addLitePalTags(EnumTag.MANHOOD.getTag())
                                .addLitePalTags(EnumTag.OLD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nurture your minds with great thoughts. To believe in the heroic makes heroes.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.HEROES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Seeing much, suffering much, and studying much, are the three pillars of learning.", false, true))
                                .addLitePalTags(EnumTag.STUDYING.getTag())
                                .addLitePalTags(EnumTag.SEEING.getTag())
                                .addLitePalTags(EnumTag.PILLARS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never complain and never explain.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.EXPLAIN.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Courage is fire, and bullying is smoke.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.FIRE.getTag())
                                .addLitePalTags(EnumTag.SMOKE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BENJAMIN_FRANKLIN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Without freedom of thought, there can be no such thing as wisdom - and no such thing as public liberty without freedom of speech.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.PUBLIC.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Early to bed and early to rise makes a man healthy, wealthy and wise.", false, true))
                                .addLitePalTags(EnumTag.HEALTH.getTag())
                                .addLitePalTags(EnumTag.WISE.getTag())
                                .addLitePalTags(EnumTag.BED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Either write something worth reading or do something worth writing.", false, true))
                                .addLitePalTags(EnumTag.READING.getTag())
                                .addLitePalTags(EnumTag.WRITING.getTag())
                                .addLitePalTags(EnumTag.EITHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("By failing to prepare, you are preparing to fail.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.PREPARE.getTag())
                                .addLitePalTags(EnumTag.FAIL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Wine is constant proof that God loves us and loves to see us happy.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .addLitePalTags(EnumTag.CONSTANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We are all born ignorant, but one must work hard to remain stupid.", false, true))
                                .addLitePalTags(EnumTag.KNOWLEDGE.getTag())
                                .addLitePalTags(EnumTag.WORK_HARD.getTag())
                                .addLitePalTags(EnumTag.STUPID.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Well done is better than well said.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Without continual growth and progress, such words as improvement, achievement, and success have no meaning.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.ACHIEVEMENT.getTag())
                                .addLitePalTags(EnumTag.WORDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Tell me and I forget. Teach me and I remember. Involve me and I learn.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.FORGET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("An investment in knowledge pays the best interest.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.INTEREST.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BERTRAND_RUSSELL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I would never die for my beliefs because I might be wrong.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Science is what you know, philosophy is what you don't know.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getTag())
                                .addLitePalTags(EnumTag.PHILOSOPHY.getTag())
                                .addLitePalTags(EnumTag.KNOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Men are born ignorant, not stupid. They are made stupid by education.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.STUPID.getTag())
                                .addLitePalTags(EnumTag.MADE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The only thing that will redeem mankind is cooperation.", false, true))
                                .addLitePalTags(EnumTag.MANKIND.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The world is full of magical things patiently waiting for our wits to grow sharper.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.GROW.getTag())
                                .addLitePalTags(EnumTag.MAGICAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Fear is the main source of superstition, and one of the main sources of cruelty. To conquer fear is the beginning of wisdom.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.CRUELTY.getTag())
                                .addLitePalTags(EnumTag.SOURCES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The fact that an opinion has been widely held is no evidence whatever that it is not utterly absurd.", false, true))
                                .addLitePalTags(EnumTag.FACT.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.UTTERLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The trouble with the world is that the stupid are cocksure and the intelligent are full of doubt.", false, true))
                                .addLitePalTags(EnumTag.STUPID.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.TROUBLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("War does not determine who is right - only who is left.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.LEFT.getTag())
                                .addLitePalTags(EnumTag.DETERMINE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The good life is one inspired by love and guided by knowledge.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.INSPIRED.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BEYONCE_KNOWLES.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If everything was perfect, you would never learn and you would never grow.", false, true))
                                .addLitePalTags(EnumTag.GROW.getTag())
                                .addLitePalTags(EnumTag.PERFECT.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Who I am on stage is very, very different to who I am in real life.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.STAGE.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I can never be safe; I always try and go against the grain. As soon as I accomplish one thing, I just set a higher goal. That's how I've gotten to where I am.", false, true))
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .addLitePalTags(EnumTag.SOON.getTag())
                                .addLitePalTags(EnumTag.GOTTEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think it's healthy for a person to be nervous. It means you care - that you work hard and want to give a great performance. You just have to channel that nervous energy into the show.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Whenever I'm confused about something, I ask God to reveal the answers to my questions, and he does.", false, true))
                                .addLitePalTags(EnumTag.REVEAL.getTag())
                                .addLitePalTags(EnumTag.ANSWERS.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I feel like you get more bees with honey. But that doesn't mean I don't get frustrated in my life. My way of dealing with frustration is to shut down and to think and speak logically.", false, true))
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.SHUT.getTag())
                                .addLitePalTags(EnumTag.FRUSTRATED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I always treat myself to one meal on Sundays when I can have whatever I want. Usually it's pizza, which is my favorite indulgence.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.INDULGENCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I get nervous when I don't get nervous. If I'm nervous I know I'm going to have a good show.", false, true))
                                .addLitePalTags(EnumTag.NERVOUS.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .addLitePalTags(EnumTag.GET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I hold a lot of things in. I'm always making sure everybody is okay. I usually don't rage; I usually don't curse. So for me, it's a great thing to be able to scream and say whatever I want.", false, true))
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .addLitePalTags(EnumTag.SCREAM.getTag())
                                .addLitePalTags(EnumTag.HOLD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There's my personal life, my sensitive side, and then me as a performer, sexy and energised and fun.", false, true))
                                .addLitePalTags(EnumTag.SEXY.getTag())
                                .addLitePalTags(EnumTag.SIDE.getTag())
                                .addLitePalTags(EnumTag.PERFORMER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BILL_GATES.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The first rule of any technology used in a business is that automation applied to an efficient operation will magnify the efficiency. The second is that automation applied to an inefficient operation will magnify the inefficiency.", false, true))
                                .addLitePalTags(EnumTag.TECHNOLOGY.getTag())
                                .addLitePalTags(EnumTag.EFFICIENCY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Research shows that there is only half as much variation in student achievement between schools as there is among classrooms in the same school. If you want your child to get the best education possible, it is actually more important to get him assigned to a great teacher than to a great school.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.YOUR_CHILD.getTag())
                                .addLitePalTags(EnumTag.HALF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We all need people who will give us feedback. That's how we improve.", false, true))
                                .addLitePalTags(EnumTag.FEEDBACK.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Your most unhappy customers are your greatest source of learning.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.UNHAPPY.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The advance of technology is based on making it fit in so that you don't really even notice it, so it's part of everyday life.", false, true))
                                .addLitePalTags(EnumTag.PART.getTag())
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .addLitePalTags(EnumTag.BASED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The Internet is becoming the town square for the global village of tomorrow.", false, true))
                                .addLitePalTags(EnumTag.SQUARE.getTag())
                                .addLitePalTags(EnumTag.BECOMING.getTag())
                                .addLitePalTags(EnumTag.TOWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Information technology and business are becoming inextricably interwoven. I don't think anybody can talk meaningfully about one without the talking about the other.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.BECOMING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's fine to celebrate success but it is more important to heed the lessons of failure.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.FINE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Technology is just a tool. In terms of getting the kids working together and motivating them, the teacher is the most important.", false, true))
                                .addLitePalTags(EnumTag.TECHNOLOGY.getTag())
                                .addLitePalTags(EnumTag.THEM.getTag())
                                .addLitePalTags(EnumTag.MOTIVATING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Success is a lousy teacher. It seduces smart people into thinking they can't lose.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.SMART_PEOPLE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BILLY_GRAHAM.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Racial prejudice, anti-Semitism, or hatred of anyone with different beliefs has no place in the human mind or heart.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.RACIAL.getTag())
                                .addLitePalTags(EnumTag.BELIEFS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Make sure of your commitment to Jesus Christ, and seek to follow Him every day. Don't be swayed by the false values and goals of this world, but put Christ and His will first in everything you do.", false, true))
                                .addLitePalTags(EnumTag.VALUES.getTag())
                                .addLitePalTags(EnumTag.EVERY_DAY.getTag())
                                .addLitePalTags(EnumTag.SWAYED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When wealth is lost, nothing is lost; when health is lost, something is lost; when character is lost, all is lost.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.UNHAPPY.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("God proved His love on the Cross. When Christ hung, and bled, and died, it was God saying to the world, 'I love you.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.EASTER.getTag())
                                .addLitePalTags(EnumTag.CHRIST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think that the Bible teaches that homosexuality is a sin, but the Bible also teaches that pride is a sin, jealousy is a sin, and hate is a sin, evil thoughts are a sin. So I don't think that homosexuality should be chosen as the overwhelming sin that we are doing today.", false, true))
                                .addLitePalTags(EnumTag.BIBLE.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.HOMOSEXUALITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("God has given us two hands, one to receive with and the other to give with.", false, true))
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .addLitePalTags(EnumTag.RECEIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing can bring a real sense of security into the home except true love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.HOME.getTag())
                                .addLitePalTags(EnumTag.SECURITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Each life is made up of mistakes and learning, waiting and growing, practicing patience and being persistent.", false, true))
                                .addLitePalTags(EnumTag.WAITING.getTag())
                                .addLitePalTags(EnumTag.GROWING.getTag())
                                .addLitePalTags(EnumTag.MADE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A child who is allowed to be disrespectful to his parents will not have true respect for anyone.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The greatest legacy one can pass on to one's children and grandchildren is not money or other material things accumulated in one's life, but rather a legacy of character and faith.", false, true))
                                .addLitePalTags(EnumTag.LEGACY.getTag())
                                .addLitePalTags(EnumTag.GRANDCHILDREN.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BLAISE_PASCAL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We view things not only from different sides, but with different eyes; we have no wish to find them alike.", false, true))
                                .addLitePalTags(EnumTag.WISH.getTag())
                                .addLitePalTags(EnumTag.VIEW.getTag())
                                .addLitePalTags(EnumTag.ALIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Belief is a wise wager. Granted that faith cannot be proved, what harm will come to you if you gamble on its truth and it proves false? If you gain, you gain all; if you lose, you lose nothing. Wager, then, without hesitation, that He exists.", false, true))
                                .addLitePalTags(EnumTag.FAITH.getTag())
                                .addLitePalTags(EnumTag.HARM.getTag())
                                .addLitePalTags(EnumTag.PROVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Men never do evil so completely and cheerfully as when they do it from religious conviction.", false, true))
                                .addLitePalTags(EnumTag.RELIGIOUS.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.CHEERFULLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Noble deeds that are concealed are most esteemed.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.DEEDS.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Small minds are concerned with the extraordinary, great minds with the ordinary.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.MINDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In faith there is enough light for those who want to believe and enough shadows to blind those who don't.", false, true))
                                .addLitePalTags(EnumTag.FAITH.getTag())
                                .addLitePalTags(EnumTag.LIGHT.getTag())
                                .addLitePalTags(EnumTag.BLIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Love has reasons which reason cannot understand.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All men's miseries derive from not being able to sit in a quiet room alone.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.MEN.getTag())
                                .addLitePalTags(EnumTag.MISERIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Human beings must be known to be loved; but Divine beings must be loved to be known.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.LOVED.getTag())
                                .addLitePalTags(EnumTag.KNOWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Kind words do not cost much. Yet they accomplish much.", false, true))
                                .addLitePalTags(EnumTag.COST.getTag())
                                .addLitePalTags(EnumTag.ACCOMPLISH.getTag())
                                .addLitePalTags(EnumTag.KIND.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.BOB_DYLAN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'll let you be in my dreams if I can be in yours.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .addLitePalTags(EnumTag.YOURS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I accept chaos, I'm not sure whether it accepts me.", false, true))
                                .addLitePalTags(EnumTag.CHAOS.getTag())
                                .addLitePalTags(EnumTag.SURE.getTag())
                                .addLitePalTags(EnumTag.ACCEPTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A mistake is to commit a misunderstanding.", false, true))
                                .addLitePalTags(EnumTag.MISTAKE.getTag())
                                .addLitePalTags(EnumTag.MISUNDERSTANDING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What's money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.BED.getTag())
                                .addLitePalTags(EnumTag.GOES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All I can do is be me, whoever that is.", false, true))
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.I_CAN.getTag())
                                .addLitePalTags(EnumTag.WHOEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Inspiration is hard to come by. You have to take it where you find it.", false, true))
                                .addLitePalTags(EnumTag.FIND.getTag())
                                .addLitePalTags(EnumTag.TAKE.getTag())
                                .addLitePalTags(EnumTag.COME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Yesterday's just a memory, tomorrow is never what it's supposed to be.", false, true))
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.YESTERDAY.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No one is free, even the birds are chained to the sky.", false, true))
                                .addLitePalTags(EnumTag.SKY.getTag())
                                .addLitePalTags(EnumTag.EVEN.getTag())
                                .addLitePalTags(EnumTag.CHAINED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Take care of all your memories. For you cannot relive them.", false, true))
                                .addLitePalTags(EnumTag.MEMORIES.getTag())
                                .addLitePalTags(EnumTag.TAKE.getTag())
                                .addLitePalTags(EnumTag.RELIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A hero is someone who understands the responsibility that comes with his freedom.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.SOMEONE.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CS_LEWIS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The task of the modern educator is not to cut down jungles, but to irrigate deserts.", false, true))
                                .addLitePalTags(EnumTag.TEACHER.getTag())
                                .addLitePalTags(EnumTag.TASK.getTag())
                                .addLitePalTags(EnumTag.DESERTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Education without values, as useful as it is, seems rather to make man a more clever devil.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("History isn't just the story of bad people doing bad things. It's quite as much a story of people trying to do good things. But somehow, something goes wrong.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.GOES.getTag())
                                .addLitePalTags(EnumTag.BAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Friendship is unnecessary, like philosophy, like art... It has no survival value; rather it is one of those things that give value to survival.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I believe in Christianity as I believe that the sun has risen: not only because I see it, but because by it I see everything else.", false, true))
                                .addLitePalTags(EnumTag.SAINT.getTag())
                                .addLitePalTags(EnumTag.PATRICKS_DAY.getTag())
                                .addLitePalTags(EnumTag.I_SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If I find in myself a desire which no experience in this world can satisfy, the most probable explanation is that I was made for another world.", false, true))
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.SATISFY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Failures, repeated failures, are finger posts on the road to achievement. One fails forward toward success.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.TOWARD.getTag())
                                .addLitePalTags(EnumTag.FINGER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We all want progress, but if you're on the wrong road, progress means doing an about-turn and walking back to the right road; in that case, the man who turns back soonest is the most progressive.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Look for yourself, and you will find in the long run only hatred, loneliness, despair, rage, ruin, and decay. But look for Christ, and you will find Him, and with Him everything else thrown in.", false, true))
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.LONG_RUN.getTag())
                                .addLitePalTags(EnumTag.CHRIST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Courage is not simply one of the virtues, but the form of every virtue at the testing point.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.FORM.getTag())
                                .addLitePalTags(EnumTag.VIRTUES.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CARL_JUNG.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In all chaos there is a cosmos, in all disorder a secret order.", false, true))
                                .addLitePalTags(EnumTag.CHAOS.getTag())
                                .addLitePalTags(EnumTag.DISORDER.getTag())
                                .addLitePalTags(EnumTag.COSMOS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every form of addiction is bad, no matter whether the narcotic be alcohol or morphine or idealism.", false, true))
                                .addLitePalTags(EnumTag.ALCOHOL.getTag())
                                .addLitePalTags(EnumTag.IDEALISM.getTag())
                                .addLitePalTags(EnumTag.FORM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Children are educated by what the grown-up is and not by his talk.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getTag())
                                .addLitePalTags(EnumTag.IDEALISM.getTag())
                                .addLitePalTags(EnumTag.FORM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The meeting of two personalities is like the contact of two chemical substances: if there is any reaction, both are transformed.", false, true))
                                .addLitePalTags(EnumTag.REACTION.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.SUBSTANCES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everything that irritates us about others can lead us to an understanding of ourselves.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.UNDERSTANDING.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Your vision will become clear only when you can look into your own heart. Who looks outside, dreams; who looks inside, awakes.", false, true))
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.CLEAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Knowing your own darkness is the best method for dealing with the darknesses of other people.", false, true))
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.KNOWING.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One looks back with appreciation to the brilliant teachers, but with gratitude to those who touched our human feelings. The curriculum is so much necessary raw material, but warmth is the vital element for the growing plant and for the soul of the child.", false, true))
                                .addLitePalTags(EnumTag.TEACHER.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.RAW_MATERIAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Even a happy life cannot be without a measure of darkness, and the word happy would lose its meaning if it were not balanced by sadness. It is far better take things as they come along with patience and equanimity.", false, true))
                                .addLitePalTags(EnumTag.PATIENCE.getTag())
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .addLitePalTags(EnumTag.LOSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The word 'happy' would lose its meaning if it were not balanced by sadness.", false, true))
                                .addLitePalTags(EnumTag.SAD.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .addLitePalTags(EnumTag.MEANING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CARL_SAGAN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The universe is not required to be in perfect harmony with human ambition.", false, true))
                                .addLitePalTags(EnumTag.AMBITION.getTag())
                                .addLitePalTags(EnumTag.PERFECT.getTag())
                                .addLitePalTags(EnumTag.HARMONY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is far better to grasp the universe as it really is than to persist in delusion, however satisfying and reassuring.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.HOWEVER.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For small creatures such as we the vastness is bearable only through love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Extinction is the rule. Survival is the exception.", false, true))
                                .addLitePalTags(EnumTag.EXITINCTION.getTag())
                                .addLitePalTags(EnumTag.EXCEPTION.getTag())
                                .addLitePalTags(EnumTag.RULE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The brain is like a muscle. When it is in use we feel very good. Understanding is joyous.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Imagination will often carry us to worlds that never were. But without it we go nowhere.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.WORLDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Who are we? We find that we live on an insignificant planet of a humdrum star lost in a galaxy tucked away in some forgotten corner of a universe in which there are far more galaxies than people.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you wish to make an apple pie from scratch, you must first invent the universe.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.SCRATCH.getTag())
                                .addLitePalTags(EnumTag.INVENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We live in a society exquisitely dependent on science and technology, in which hardly anyone knows anything about science and technology.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Science is a way of thinking much more than it is a body of knowledge.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CAROL_BURNETT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Only I can change my life. No one can do it for me.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you have a dream, you've got to grab it and never let go.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.DREAM.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Words, once they are printed, have a life of their own.", false, true))
                                .addLitePalTags(EnumTag.COMMUNICATION.getTag())
                                .addLitePalTags(EnumTag.PRINTED.getTag())
                                .addLitePalTags(EnumTag.ONCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I liked myself better when I wasn't me.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You have to go through the falling down in order to learn to walk. It helps to know that you can survive it. That's an education in itself.", false, true))
                                .addLitePalTags(EnumTag.FALLING.getTag())
                                .addLitePalTags(EnumTag.SURVIVE.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everybody I know who is funny, it's in them. You can teach timing, or some people are able to tell a joke, though I don't like to tell jokes. But I think you have to be born with a sense of humor and a sense of timing.", false, true))
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My grandmother and I would go see movies, and we'd come back to the apartment - we had a one-room apartment in Hollywood - and I would kind of lock myself in this little dressing room area with a cracked mirror on the door and act out what I had just seen.", false, true))
                                .addLitePalTags(EnumTag.MIRROR.getTag())
                                .addLitePalTags(EnumTag.DOORS.getTag())
                                .addLitePalTags(EnumTag.HOLLYWOOD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It costs a lot to sue a magazine, and it's too bad that we don't have a system where the losing team has to pay the winning team's lawyers.", false, true))
                                .addLitePalTags(EnumTag.LEGAL.getTag())
                                .addLitePalTags(EnumTag.COSTS.getTag())
                                .addLitePalTags(EnumTag.SUE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm not always optimistic. You wouldn't have all cylinders cooking if you were always like Mary Poppins.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.MARY_POPPINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love to write. I have always loved writing. That was my first love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.I_LOVE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CHARLES_DARWIN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A moral being is one who is capable of reflecting on his past actions and their motives - of approving of some and disapproving of others.", false, true))
                                .addLitePalTags(EnumTag.PAST.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.MOTIVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Man is descended from a hairy, tailed quadruped, probably arboreal in its habits. ", false, true))
                                .addLitePalTags(EnumTag.HABITS.getTag())
                                .addLitePalTags(EnumTag.HAIRY.getTag())
                                .addLitePalTags(EnumTag.DESCENDED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The very essence of instinct is that it's followed independently of reason. ", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A scientific man ought to have no wishes, no affections, - a mere heart of stone.", false, true))
                                .addLitePalTags(EnumTag.SCIENTIFIC.getTag())
                                .addLitePalTags(EnumTag.MERE.getTag())
                                .addLitePalTags(EnumTag.AFFECTIONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love fools' experiments. I am always making them.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Ignorance more frequently begets confidence than does knowledge: it is those who know little, and not those who know much, who so positively assert that this or that problem will never be solved by science.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.FREQUENTLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The mystery of the beginning of all things is insoluble by us; and I for one must be content to remain an agnostic.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.CONTENT.getTag())
                                .addLitePalTags(EnumTag.REMAIN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("An American monkey, after getting drunk on brandy, would never touch it again, and thus is much wiser than most men.", false, true))
                                .addLitePalTags(EnumTag.MONKEY.getTag())
                                .addLitePalTags(EnumTag.AGAIN.getTag())
                                .addLitePalTags(EnumTag.THUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man's friendships are one of the best measures of his worth.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .addLitePalTags(EnumTag.MEASURES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man who dares to waste one hour of time has not discovered the value of life.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.WASTE.getTag())
                                .addLitePalTags(EnumTag.DISCOVER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CHARLES_R_SWINDOLL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The remarkable thing is, we have a choice everyday regarding the attitude we will embrace for that day.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.REMARKABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A teardrop on earth summons the King of heaven.", false, true))
                                .addLitePalTags(EnumTag.SAD.getTag())
                                .addLitePalTags(EnumTag.KING.getTag())
                                .addLitePalTags(EnumTag.EARTH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We are all faced with a series of great opportunities brilliantly disguised as impossible situations.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getTag())
                                .addLitePalTags(EnumTag.SERIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Prejudice is a learned trait. You're not born prejudiced; you're taught it.", false, true))
                                .addLitePalTags(EnumTag.TAUGHT.getTag())
                                .addLitePalTags(EnumTag.LEARNED.getTag())
                                .addLitePalTags(EnumTag.PREJUDICED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We cannot change our past. We can not change the fact that people act in a certain way. We can not change the inevitable. The only thing we can do is play on the one string we have, and that is our attitude.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.INEVITABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Attitude is more important than the past, than education, than money, than circumstances, than what people do or say. It is more important than appearance, giftedness, or skill.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.CIRCUMSTANCES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The difference between something good and something great is attention to detail.", false, true))
                                .addLitePalTags(EnumTag.DIFFERENCE.getTag())
                                .addLitePalTags(EnumTag.SOMETHING_GOOD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Each day of our lives we make deposits in the memory banks of our children.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getTag())
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.LIVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I cannot even imagine where I would be today were it not for that handful of friends who have given me a heart full of joy. Let's face it, friends make life a lot more fun.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.IMAGINE.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life is 10% what happens to you and 90% how you react to it.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.REACT.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CHE_GUEVARA.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The revolution is not an apple that falls when it is ripe. You have to make it fall.", false, true))
                                .addLitePalTags(EnumTag.FALL.getTag())
                                .addLitePalTags(EnumTag.APPLE.getTag())
                                .addLitePalTags(EnumTag.FALLS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have a wish. It as a fear as well - that in my end will be my beginning.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.WISH.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The true revolutionary is guided by a great feeling of love. It is impossible to think of a genuine revolutionary lacking this quality.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.GREAT_FEELING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We cannot be sure of having something to live for unless we are willing to die for it.", false, true))
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.HAVING.getTag())
                                .addLitePalTags(EnumTag.SURE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I know you are here to kill me. Shoot, coward, you are only going to kill a man.", false, true))
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The only passion that guides me is for the truth... I look at everything from this point of view.", false, true))
                                .addLitePalTags(EnumTag.POINT_OF_VIEW.getTag())
                                .addLitePalTags(EnumTag.LOOK.getTag())
                                .addLitePalTags(EnumTag.POINT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Passion is needed for any great work, and for the revolution, passion and audacity are required in big doses.", false, true))
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.NEEDED.getTag())
                                .addLitePalTags(EnumTag.DOSES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Remember that the revolution is what is important, and each one of us, alone, is worth nothing.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Study hard so that you can master technology, which allows us to master nature.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.STUDY.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am one of those people who believes that the solution to the world's problems is to be found behind the Iron Curtain.", false, true))
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.AM.getTag())
                                .addLitePalTags(EnumTag.IRON_CURTAIN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CHRISTOPHER_HITCHENS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The concept of loneliness and exile and self-sufficiency continually bucks me up.", false, true))
                                .addLitePalTags(EnumTag.CONCEPT.getTag())
                                .addLitePalTags(EnumTag.BUCKS.getTag())
                                .addLitePalTags(EnumTag.EXILE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't think it's possible to have a sense of tragedy without having a sense of humor.", false, true))
                                .addLitePalTags(EnumTag.HUMOR.getTag())
                                .addLitePalTags(EnumTag.SENSE_OF_HUMOR.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To 'choose' dogma and faith over doubt and experience is to throw out the ripening vintage and to reach greedily for the Kool-Aid.", false, true))
                                .addLitePalTags(EnumTag.REACH.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.DOGMA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Trust is not the same as faith. A friend is someone you trust. Putting faith in anyone is a mistake.", false, true))
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.MISTAKE.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To the dumb question, 'Why me?' the cosmos barely bothers to return the reply, 'Why not?'", false, true))
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.QUESTION.getTag())
                                .addLitePalTags(EnumTag.BOTHERS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Religion is part of the human make-up. It's also part of our cultural and intellectual history. Religion was our first attempt at literature, the texts, our first attempt at cosmology, making sense of where we are in the universe, our first attempt at health care, believing in faith healing, our first attempt at philosophy.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What can be asserted without evidence can be dismissed without evidence.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.PART.getTag())
                                .addLitePalTags(EnumTag.MAKE_UP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I learned that very often the most intolerant and narrow-minded people are the ones who congratulate themselves on their tolerance and open-mindedness.", false, true))
                                .addLitePalTags(EnumTag.WITHOUT.getTag())
                                .addLitePalTags(EnumTag.EVIDENCE.getTag())
                                .addLitePalTags(EnumTag.ASSERTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A gentleman is never rude except on purpose - I can honestly be nasty sober, believe you me.", false, true))
                                .addLitePalTags(EnumTag.PURPOSE.getTag())
                                .addLitePalTags(EnumTag.BELIEVE.getTag())
                                .addLitePalTags(EnumTag.HONESTLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Owners of dogs will have noticed that, if you provide them with food and water and shelter and affection, they will think you are God. Whereas owners of cats are compelled to realize that, if you provide them with food and water and affection, they draw the conclusion that they are God.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.SHELTER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CLINT_EASTWOOD.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("God gave you a brain. Do the best you can with it. And you don't have to be Einstein, but Einstein was mentally tough. He believed what he believed. And he worked out things. And he argued with people who disagreed with him. But I'm sure he didn't call everybody jerks.", false, true))
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .addLitePalTags(EnumTag.ARGUED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I tried being reasonable, I didn't like it.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.REASONABLE.getTag())
                                .addLitePalTags(EnumTag.TRIED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What you put into life is what you get out of it.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.AGE.getTag())
                                .addLitePalTags(EnumTag.CHILD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sometimes if you want to see a change for the better, you have to take things into your own hands.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.SILENCE.getTag())
                                .addLitePalTags(EnumTag.EXPRESSING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you want a guarantee, buy a toaster.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.WRONG.getTag())
                                .addLitePalTags(EnumTag.DISCOVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You should never give up your inner self.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have a very strict gun control policy: if there's a gun around, I want to be in control of it.", false, true))
                                .addLitePalTags(EnumTag.FACTS.getTag())
                                .addLitePalTags(EnumTag.EXIST.getTag())
                                .addLitePalTags(EnumTag.BECAUSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("They say marriages are made in Heaven. But so is thunder and lightning.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.POWERFUL.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There's a rebel lying deep in my soul.", false, true))
                                .addLitePalTags(EnumTag.POWER.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.GOD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Respect your efforts, respect yourself. Self-respect leads to self-discipline. When you have both firmly under your belt, that's real power.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.CONOR_MCGREGOR.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You might win some, you might lose some. But you go in, you challenge yourself, you become a better man, a better individual, a better fighter.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.SELF.getTag())
                                .addLitePalTags(EnumTag.UNIVERSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I enjoy competition. I enjoy challenges. If a challenge is in front of me and it appeals to me, I will go ahead and conquer it.", false, true))
                                .addLitePalTags(EnumTag.PERCEPTION.getTag())
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.DOORS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My success isn't a result of arrogance - it's a result of belief.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.AGE.getTag())
                                .addLitePalTags(EnumTag.CHILD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The more you seek the uncomfortable, the more you will become comfortable.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.SILENCE.getTag())
                                .addLitePalTags(EnumTag.EXPRESSING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am in the fighting game. I don't care about anything else. I don't watch the news, I don't care about politics, I don't care about other sports. I don't care about anything I don't need to care about. This is my sport: it is my life. I study it; I think about it all the time. Nothing else matters.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.WRONG.getTag())
                                .addLitePalTags(EnumTag.DISCOVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm just looking to learn, grow, stay focused, and become a better fighter and a better athlete.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm not going to get somewhere and say, 'OK, I'm done.' Success is never final; I'll just keep on going. The same way as failure never being fatal. Just keep going. I'm going to the stars and then past them.", false, true))
                                .addLitePalTags(EnumTag.FACTS.getTag())
                                .addLitePalTags(EnumTag.EXIST.getTag())
                                .addLitePalTags(EnumTag.BECAUSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm just trying to be myself. I'm not trying to be anyone else.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.POWERFUL.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The thing about the truth is, not a lot of people can handle it.", false, true))
                                .addLitePalTags(EnumTag.POWER.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.GOD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't feel pressure in a negative way. I like pressure. I feel excitement and calm at the same time. No pressure, no diamonds. I want pressure: pressure creates drama, creates emotion.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DALAI_LAMA.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Happiness is not something ready made. It comes from your own actions.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.READY.getTag())
                                .addLitePalTags(EnumTag.MADE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Calm mind brings inner strength and self-confidence, so that's very important for good health.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In order to carry a positive action we must develop here a positive vision.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getTag())
                                .addLitePalTags(EnumTag.VISION.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Love and compassion are necessities, not luxuries. Without them humanity cannot survive.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SURVIVE.getTag())
                                .addLitePalTags(EnumTag.NECESSITIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Old friends pass away, new friends appear. It is just like the days. An old day passes, a new day arrives. The important thing is to make it meaningful: a meaningful friend - or a meaningful day.", false, true))
                                .addLitePalTags(EnumTag.MORNING.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.A_NEW_DAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be kind whenever possible. It is always possible.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.KIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you want others to be happy, practice compassion. If you want to be happy, practice compassion.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.PRACTICE.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When we meet real tragedy in life, we can react in two ways - either by losing hope and falling into self-destructive habits, or by using the challenge to find our inner strength. Thanks to the teachings of Buddha, I have been able to take this second way.", false, true))
                                .addLitePalTags(EnumTag.HABITS.getTag())
                                .addLitePalTags(EnumTag.SELF_DESTRUCTIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you practice gratefulness, there is a sense of respect toward others.", false, true))
                                .addLitePalTags(EnumTag.THANKFUL.getTag())
                                .addLitePalTags(EnumTag.PRACTICE.getTag())
                                .addLitePalTags(EnumTag.TOWARD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Our prime purpose in this life is to help others. And if you can't help them, at least don't hurt them.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.PURPOSE.getTag())
                                .addLitePalTags(EnumTag.PRIME.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DOUGLAS_ADAMS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move.", false, true))
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is a well-known fact that those people who must want to rule people are, ipso facto, those least suited to do it... anyone who is capable of getting themselves made President should on no account be allowed to do the job.", false, true))
                                .addLitePalTags(EnumTag.FACT.getTag())
                                .addLitePalTags(EnumTag.MADE.getTag())
                                .addLitePalTags(EnumTag.WELL_KNOWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("This must be Thursday. I never could get the hang of Thursdays.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.HANG.getTag())
                                .addLitePalTags(EnumTag.COULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is a mistake to think you can solve any major problems just with potatoes.", false, true))
                                .addLitePalTags(EnumTag.MISTAKE.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.POTATOES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Human beings, who are almost unique in having the ability to learn from the experience of others, are also remarkable for their apparent disinclination to do so.", false, true))
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.HAVING.getTag())
                                .addLitePalTags(EnumTag.ALMOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A common mistake that people make when trying to design something completely foolproof is to underestimate the ingenuity of complete fools.", false, true))
                                .addLitePalTags(EnumTag.PEOPLE.getTag())
                                .addLitePalTags(EnumTag.MISTAKE.getTag())
                                .addLitePalTags(EnumTag.SOMETHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I may not have gone where I intended to go, but I think I have ended up where I intended to be.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Flying is learning how to throw yourself at the ground and miss.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .addLitePalTags(EnumTag.THROW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love deadlines. I like the whooshing sound they make as they fly by.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.FLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To give real service you must add something which cannot be bought or measured with money, and that is sincerity and integrity.", false, true))
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.ADD.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DICK_GREGORY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Political promises are much like marriage vows. They are made at the beginning of the relationship between candidate and voter, but are quickly forgotten.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.VOWS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I lost my rifle, the Army charged me 85 dollars. That is why in the Navy the Captain goes down with the ship.", false, true))
                                .addLitePalTags(EnumTag.WHY.getTag())
                                .addLitePalTags(EnumTag.NAVY.getTag())
                                .addLitePalTags(EnumTag.GOES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Riches do not delight us so much with their possession, as torment us with their loss.", false, true))
                                .addLitePalTags(EnumTag.LOSS.getTag())
                                .addLitePalTags(EnumTag.RICHES.getTag())
                                .addLitePalTags(EnumTag.TORMENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There's a God force inside of you that gives you a will to live.", false, true))
                                .addLitePalTags(EnumTag.INSIDE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.FORCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am really enjoying the new Martin Luther King Jr stamp - just think about all those white bigots, licking the backside of a black man.", false, true))
                                .addLitePalTags(EnumTag.MARTIN_LUTHER.getTag())
                                .addLitePalTags(EnumTag.BACKSIDE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Just being a Negro doesn't qualify you to understand the race situation any more than being sick makes you an expert on medicine.", false, true))
                                .addLitePalTags(EnumTag.RACE.getTag())
                                .addLitePalTags(EnumTag.EXPERT.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You know, I always say white is not a colour, white is an attitude, and if you haven't got trillions of dollars in the bank that you don't need, you can't be white.", false, true))
                                .addLitePalTags(EnumTag.SAY.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We thought I was going to be a great athlete, and we were wrong, and I thought I was going to be a great entertainer, and that wasn't it either. I'm going to be an American Citizen. First class.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .addLitePalTags(EnumTag.CITIZEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We used to root for the Indians against the cavalry, because we didn't think it was fair in the history books that when the cavalry won it was a great victory, and when the Indians won it was a massacre.", false, true))
                                .addLitePalTags(EnumTag.HISTORY.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Coconut milk is the only thing on this planet that comes identically to mother's milk.", false, true))
                                .addLitePalTags(EnumTag.MOTHER.getTag())
                                .addLitePalTags(EnumTag.MILK.getTag())
                                .addLitePalTags(EnumTag.PLANET.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DOLLY_PARTON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I wake up, I expect things to be good. If they're not, then I try to set about trying to make them as good as I can 'cause I know I'm gonna have to live that day anyway. So why not try to make the most of it if you can? Some days, they pan out a little better than others, but you still gotta always just try.", false, true))
                                .addLitePalTags(EnumTag.WAKE_UP.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You can be rich in spirit, kindness, love and all those things that you can't put a dollar sign on.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SPIRIT.getTag())
                                .addLitePalTags(EnumTag.THINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I wanted to write a book that talked about the emotions of children, which is the rainbow. We all have moods. We talk about being blue when we're sad, and being yellow when we're cowards, and when we're mad, we're red.", false, true))
                                .addLitePalTags(EnumTag.EMOTIONS.getTag())
                                .addLitePalTags(EnumTag.COWARDS.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm not offended by all the dumb blonde jokes because I know I'm not dumb... and I also know that I'm not blonde.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.DUMB.getTag())
                                .addLitePalTags(EnumTag.OFFENDED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Storms make trees take deeper roots.", false, true))
                                .addLitePalTags(EnumTag.ROOTS.getTag())
                                .addLitePalTags(EnumTag.TAKE.getTag())
                                .addLitePalTags(EnumTag.DEEPER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No matter what, I always make it home for Christmas. I love to go to my Tennessee Mountain Home and invite all of my nieces and nephews and their spouses and kids and do what we all like to do - eat, laugh, trade presents and just enjoy each other... and sometimes I even dress up like Santa Claus!", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.DRESS.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's a good thing I was born a girl, otherwise I'd be a drag queen.", false, true))
                                .addLitePalTags(EnumTag.A_GOOD_THING.getTag())
                                .addLitePalTags(EnumTag.OTHERWISE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I thank God for my failures. Maybe not at the time but after some reflection. I never feel like a failure just because something I tried has failed.", false, true))
                                .addLitePalTags(EnumTag.REFLECTION.getTag())
                                .addLitePalTags(EnumTag.FAILURES.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you don't like the road you're walking, start paving another one.", false, true))
                                .addLitePalTags(EnumTag.ROAD.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.PAVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The way I see it, if you want the rainbow, you gotta put up with the rain.", false, true))
                                .addLitePalTags(EnumTag.RAIN.getTag())
                                .addLitePalTags(EnumTag.RAINBOW.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DONALD_TRUMP.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you open your heart to patriotism, there is no room for prejudice. The Bible tells us, 'How good and pleasant it is when God's people live together in unity.", false, true))
                                .addLitePalTags(EnumTag.BIBLE.getTag())
                                .addLitePalTags(EnumTag.YOUR.getTag())
                                .addLitePalTags(EnumTag.PLEASANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When somebody challenges you, fight back. Be brutal, be tough.", false, true))
                                .addLitePalTags(EnumTag.CHALLENGES.getTag())
                                .addLitePalTags(EnumTag.BACK.getTag())
                                .addLitePalTags(EnumTag.BRUTAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have embraced crying mothers who have lost their children because our politicians put their personal agendas before the national good. I have no patience for injustice, no tolerance for government incompetence, no sympathy for leaders who fail their citizens.", false, true))
                                .addLitePalTags(EnumTag.INJUSTICE.getTag())
                                .addLitePalTags(EnumTag.LEADERS.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We will make America strong again. We will make America proud again. We will make America safe again. And we will make America great again.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.PROUD.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One of the key problems today is that politics is such a disgrace, good people don't go into government.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.GO.getTag())
                                .addLitePalTags(EnumTag.DISGRACE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is time to remember that old wisdom our soldiers will never forget: that whether we are black or brown or white, we all bleed the same red blood of patriots, we all enjoy the same glorious freedoms, and we all salute the same great American Flag.", false, true))
                                .addLitePalTags(EnumTag.ENJOY.getTag())
                                .addLitePalTags(EnumTag.SOLDIERS.getTag())
                                .addLitePalTags(EnumTag.FLAG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My whole life is about winning. I don't lose often. I almost never lose.", false, true))
                                .addLitePalTags(EnumTag.WINNING.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.ALMOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You have to think anyway, so why not think big?", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No dream is too big. No challenge is too great. Nothing we want for our future is beyond our reach.", false, true))
                                .addLitePalTags(EnumTag.DREAM.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.TOO.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sometimes by losing a battle you find a new way to win the war.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.BATTLE.getTag())
                                .addLitePalTags(EnumTag.NEW_WAY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DR_SEUSS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Think left and think right and think low and think high. Oh, the thinks you can think up if only you try!", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.HIGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The more that you read, the more things you will know. The more that you learn, the more places you'll go.", false, true))
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.PLACES.getTag())
                                .addLitePalTags(EnumTag.READ.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Unless someone like you cares a whole awful lot, nothing is going to get better. It's not.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.CARES.getTag())
                                .addLitePalTags(EnumTag.AWFUL_LOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Step with care and great tact, and remember that Life's a Great Balancing Act.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.BALANCING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I like nonsense; it wakes up the brain cells.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.CELLS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("From there to here, and here to there, funny things are everywhere.", false, true))
                                .addLitePalTags(EnumTag.HUMOR.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.FUNNY_THINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You have brains in your head. You have feet in your shoes. You can steer yourself in any direction you choose. You're on your own, and you know what you know. And you are the guy who'll decide where to go.", false, true))
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .addLitePalTags(EnumTag.GO.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A person's a person, no matter how small.", false, true))
                                .addLitePalTags(EnumTag.RESPECT.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't cry because it's over. Smile because it happened.", false, true))
                                .addLitePalTags(EnumTag.SMILE.getTag())
                                .addLitePalTags(EnumTag.CRY.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Today you are you! That is truer than true! There is no one alive who is you-er than you!", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getTag())
                                .addLitePalTags(EnumTag.TODAY.getTag())
                                .addLitePalTags(EnumTag.ALIVE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DRAKE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sometimes it's the journey that teaches you a lot about your destination.", false, true))
                                .addLitePalTags(EnumTag.JOURNEY.getTag())
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .addLitePalTags(EnumTag.TEACHES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Jealousy is just love and hate at the same time.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .addLitePalTags(EnumTag.SAME_TIME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People like to build their own story about my life. I don't know if it makes them feel better, or if it makes it okay for them to not like me, but the last thing I grew up as was rich.", false, true))
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I feel connected to my generation through the music, but I also fear for us. We're in a very self-destructive state where we're addicted to outside opinions and we all feel like we have fans.", false, true))
                                .addLitePalTags(EnumTag.GENERATION.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Me and my dad are friends. We're cool. I'll never be disappointed again, because I don't expect anything anymore from him. I just let him exist, and that's how we get along.", false, true))
                                .addLitePalTags(EnumTag.HIM.getTag())
                                .addLitePalTags(EnumTag.ANYMORE.getTag())
                                .addLitePalTags(EnumTag.DAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Trying to meet new women, it's always a little more difficult as opposed to calling somebody I knew that's single and trying to rebuild that connection.", false, true))
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.REBUILD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I'm writing, I'm thinking about how the songs are going to play live. Fifty bars of rap don't translate onstage. No matter how potent the music, you lose the crowd. They want a hook; they want to sing your stuff back to you.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.FIFTY.getTag())
                                .addLitePalTags(EnumTag.CROWD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Reviews condition people. At the end of the day, a lot of human minds are malleable. They can be easily shaped with strong words.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.WORLDS.getTag())
                                .addLitePalTags(EnumTag.SHAPED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My dad is a great writer. Naturally talented, naturally charming. He embodies that back-in-the-day cool.", false, true))
                                .addLitePalTags(EnumTag.CHARMING.getTag())
                                .addLitePalTags(EnumTag.NATURALLY.getTag())
                                .addLitePalTags(EnumTag.DAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I like Ryan Gosling as an actor. I watch all of his movies, and he's Canadian and I just like his swag. I read his interviews and I'm a big fan of his.", false, true))
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.READ.getTag())
                                .addLitePalTags(EnumTag.RYAN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.DWIGHT_D_EISENHOWER.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leadership is the art of getting someone else to do something you want done because he wants to do it.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.GETTING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A people that values its privileges above its principles soon loses both.", false, true))
                                .addLitePalTags(EnumTag.VALUES.getTag())
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.PRIVILEGES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Neither a wise man nor a brave man lies down on the tracks of history to wait for the train of the future to run over him.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.WAIT.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Here in America we are descended in blood and in spirit from revolutionists and rebels - men and women who dare to dissent from accepted doctrine. As their heirs, may we never confuse honest dissent with disloyal subversion.", false, true))
                                .addLitePalTags(EnumTag.MEN_AND_WOMEN.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.DISSENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Plans are nothing; planning is everything.", false, true))
                                .addLitePalTags(EnumTag.PLANNING.getTag())
                                .addLitePalTags(EnumTag.PLANS.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In preparing for battle I have always found that plans are useless, but planning is indispensable.", false, true))
                                .addLitePalTags(EnumTag.PLANNING.getTag())
                                .addLitePalTags(EnumTag.BATTLE.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You don't lead by hitting people over the head - that's assault, not leadership.", false, true))
                                .addLitePalTags(EnumTag.HEAD.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.ASSAULT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Motivation is the art of getting people to do what you want them to do because they want to do it.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.GETTING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("How far you can go without destroying from within what you are trying to defend from without?", false, true))
                                .addLitePalTags(EnumTag.WITHIN.getTag())
                                .addLitePalTags(EnumTag.HOW_FAR.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The supreme quality for leadership is unquestionably integrity. Without it, no real success is possible, no matter whether it is on a section gang, a football field, in an army, or in an office.", false, true))
                                .addLitePalTags(EnumTag.GANG.getTag())
                                .addLitePalTags(EnumTag.UNQUESTIONABLY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ELIE_WIESEL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Just as despair can come to one only from other human beings, hope, too, can be given to one only by other human beings.", false, true))
                                .addLitePalTags(EnumTag.HOPE.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Wherever men and women are persecuted because of their race, religion, or political views, that place must - at that moment - become the center of the universe.", false, true))
                                .addLitePalTags(EnumTag.RACE.getTag())
                                .addLitePalTags(EnumTag.CENTER.getTag())
                                .addLitePalTags(EnumTag.PERSECUTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I marvel at the resilience of the Jewish people. Their best characteristic is their desire to remember. No other people has such an obsession with memory.", false, true))
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Most people think that shadows follow, precede or surround beings or objects. The truth is that they also surround words, ideas, desires, deeds, impulses and memories.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.DEEDS.getTag())
                                .addLitePalTags(EnumTag.PRECEDE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("That I survived the Holocaust and went on to love beautiful girls, to talk, to write, to have toast and tea and live my life - that is what is abnormal.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.SURVIVED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For me, every hour is grace. And I feel gratitude in my heart each time I can meet someone and look at his or her smile.", false, true))
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.EACH_TIME.getTag())
                                .addLitePalTags(EnumTag.I_FEEL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The opposite of love is not hate, it's indifference.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.INDIFFERENCE.getTag())
                                .addLitePalTags(EnumTag.OPPOSITE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There may be times when we are powerless to prevent injustice, but there must never be a time when we fail to protest.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.FAIL.getTag())
                                .addLitePalTags(EnumTag.PREVENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We must take sides. Neutrality helps the oppressor, never the victim. Silence encourages the tormentor, never the tormented.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.TAKE.getTag())
                                .addLitePalTags(EnumTag.OPPRESSOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Without memory, there is no culture. Without memory, there would be no civilization, no society, no future.", false, true))
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()

        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ELIZABETH_I.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I know I have the body of a weak and feeble woman, but I have the heart and stomach of a king, and of a king of England too.", false, true))
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.KING.getTag())
                                .addLitePalTags(EnumTag.ENGLAND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I do not want a husband who honours me as a queen, if he does not love me as a woman.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.QUEEN.getTag())
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Though the sex to which I belong is considered weak you will nevertheless find me a rock that bends to no wind.", false, true))
                                .addLitePalTags(EnumTag.BELONG.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.NEVERTHELESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Fear not, we are of the nature of the lion, and cannot descend to the destruction of mice and such small beasts.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.DESCEND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is nothing about which I am more anxious than my country, and for its sake I am willing to die ten deaths, if that be possible.", false, true))
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have the heart of a man, not a woman, and I am not afraid of anything.", false, true))
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.AFRAID.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("God has given such brave soldiers to this Crown that, if they do not frighten our neighbours, at least they prevent us from being frightened by them.", false, true))
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .addLitePalTags(EnumTag.BRAVE_SOLDERS.getTag())
                                .addLitePalTags(EnumTag.LEAST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Must! Is must a word to be addressed to princes? Little man, little man! Thy father, if he had been alive, durst not have used that word.", false, true))
                                .addLitePalTags(EnumTag.ALIVE.getTag())
                                .addLitePalTags(EnumTag.THY.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Ye may have a greater prince, but ye shall never have a more loving prince.", false, true))
                                .addLitePalTags(EnumTag.LOVING.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My mortal foe can no ways wish me a greater harm than England's hate; neither should death be less welcome unto me than such a mishap betide me.", false, true))
                                .addLitePalTags(EnumTag.HARM.getTag())
                                .addLitePalTags(EnumTag.ENGLAND.getTag())
                                .addLitePalTags(EnumTag.UNTO.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ELLEN_DEGENERES.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sometimes you can't see yourself clearly until you see yourself through the eyes of others.", false, true))
                                .addLitePalTags(EnumTag.SOMETIMES.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's our challenges and obstacles that give us layers of depth and make us interesting. Are they fun when they happen? No. But they are what make us unique. And that's what I know for sure... I think.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.HAPPEN.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Find out who you are and be that person. That's what your soul was put on this Earth to be. Find that truth, live that truth and everything else will come.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm not an activist; I don't look for controversy. I'm not a political person, but I'm a person with compassion. I care passionately about equal rights. I care about human rights. I care about animal rights.", false, true))
                                .addLitePalTags(EnumTag.ACTIVIST.getTag())
                                .addLitePalTags(EnumTag.PASSIONATELY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We need more kindness, more compassion, more joy, more laughter. I definitely want to contribute to that.", false, true))
                                .addLitePalTags(EnumTag.JOY.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .addLitePalTags(EnumTag.DEFINITELY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I had everything I'd hoped for, but I wasn't being myself. So I decided to be honest about who I was. It was strange: The people who loved me for being funny suddenly didn't like me for being... me.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.BEING_FUNNY.getTag())
                                .addLitePalTags(EnumTag.HOPED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We focus so much on our differences, and that is creating, I think, a lot of chaos and negativity and bullying in the world. And I think if everybody focused on what we all have in common - which is - we all want to be happy.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If we're destroying our trees and destroying our environment and hurting animals and hurting one another and all that stuff, there's got to be a very powerful energy to fight that. I think we need more love in the world. We need more kindness, more compassion, more joy, more laughter. I definitely want to contribute to that.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ENVIRONMENTAL.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Here are the values that I stand for: honesty, equality, kindness, compassion, treating people the way you want to be treated and helping those in need. To me, those are traditional values.", false, true))
                                .addLitePalTags(EnumTag.EQUALITY.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.TREATED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I was raised around heterosexuals, as all heterosexuals are, that's where us gay people come from... you heterosexuals.", false, true))
                                .addLitePalTags(EnumTag.RAISED.getTag())
                                .addLitePalTags(EnumTag.COME.getTag())
                                .addLitePalTags(EnumTag.AROUND.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ELON_MUSK.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We're running the most dangerous experiment in history right now, which is to see how much carbon dioxide the atmosphere... can handle before there is an environmental catastrophe.", false, true))
                                .addLitePalTags(EnumTag.ENVIRONMENTAL.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you get up in the morning and think the future is going to be better, it is a bright day. Otherwise, it's not.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .addLitePalTags(EnumTag.OTHERWISE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I was in college, I wanted to be involved in things that would change the world.", false, true))
                                .addLitePalTags(EnumTag.TEEN.getTag())
                                .addLitePalTags(EnumTag.COLLEGE.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think that's the single best piece of advice: constantly think about how you could be doing things better and questioning yourself.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you're trying to create a company, it's like baking a cake. You have to have all the ingredients in the right proportion.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.PROPORTION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I would like to die on Mars. Just not on impact.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Patience is a virtue, and I'm learning patience. It's a tough lesson.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.PATIENCE.getTag())
                                .addLitePalTags(EnumTag.LESSON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Some people don't like change, but you need to embrace change if the alternative is disaster.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.EMBRACE.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think it's very important to have a feedback loop, where you're constantly thinking about what you've done and how you could be doing it better. I think that's the single best piece of advice: constantly think about how you could be doing things better and questioning yourself.", false, true))
                                .addLitePalTags(EnumTag.COMMUNICATION.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When something is important enough, you do it even if the odds are not in your favor.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ELVIS_PRESLEY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm not trying to be sexy. It's just my way of expressing myself when I move around.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.SEXY.getTag())
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Truth is like the sun. You can shut it out for a time, but it ain't goin' away.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .addLitePalTags(EnumTag.SHUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Rock and roll music, if you like it, if you feel it, you can't help but move to it. That's what happens to me. I can't help it.", false, true))
                                .addLitePalTags(EnumTag.ROCK_AND_ROLL.getTag())
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A live concert to me is exciting because of all the electricity that is generated in the crowd and on stage. It's my favorite part of the business, live concerts.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.FAVORITE_PART.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Rhythm is something you either have or don't have, but when you have it, you have it all over.", false, true))
                                .addLitePalTags(EnumTag.RHYTHM.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.EITHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Adversity is sometimes hard upon a man; but for one man who can stand prosperity, there are a hundred that will stand adversity.", false, true))
                                .addLitePalTags(EnumTag.ADVERSITY.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.HUNDRED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'll never feel comfortable taking a strong drink, and I'll never feel easy smoking a cigarette. I just don't think those things are right for me.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.CIGARETTE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I was a boy, I always saw myself as a hero in comic books and in movies. I grew up believing this dream.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.COMIC_BOOKS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Man, that record came out and was real big in Memphis. They started playing it, and it got real big. Don't know why-the lyrics had no meaning.", false, true))
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.MEMPHIS.getTag())
                                .addLitePalTags(EnumTag.STARTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's human nature to gripe, but I'm going ahead and doing the best I can.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.EMINEM.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A lot of truth is said in jest.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.TRUTH_IS.getTag())
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sometimes I feel like rap music is almost the key to stopping racism.", false, true))
                                .addLitePalTags(EnumTag.RACISM.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.RAP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Dealing with backstabbers, there was one thing I learned. They're only powerful when you got your back turned.", false, true))
                                .addLitePalTags(EnumTag.LEARNED.getTag())
                                .addLitePalTags(EnumTag.DEALING.getTag())
                                .addLitePalTags(EnumTag.TURNED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everybody has goals, aspirations or whatever, and everybody has been at a point in their life where nobody believed in them.", false, true))
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .addLitePalTags(EnumTag.ASPIRATIONS.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am whatever you say I am; if I wasn't, then why would you say I am.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.WHY.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm stupid, I'm ugly, I'm dumb, I smell. Did I mention I'm stupid?", false, true))
                                .addLitePalTags(EnumTag.STUPID.getTag())
                                .addLitePalTags(EnumTag.UGLY.getTag())
                                .addLitePalTags(EnumTag.DUMB.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I say what I want to say and do what I want to do. There's no in between. People will either love you for it or hate you for it.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.EITHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Somewhere deep down there's a decent man in me, he just can't be found.", false, true))
                                .addLitePalTags(EnumTag.DEEP.getTag())
                                .addLitePalTags(EnumTag.DEEP_DOWN.getTag())
                                .addLitePalTags(EnumTag.DECENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Trust is hard to come by. That's why my circle is small and tight. I'm kind of funny about making new friends.", false, true))
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The truth is you don't know what is going to happen tomorrow. Life is a crazy ride, and nothing is guaranteed.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.HAPPEN.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ERMA_BOMBECK.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't confuse fame with success. Madonna is one; Helen Keller is the other.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.MADONNA.getTag())
                                .addLitePalTags(EnumTag.CONFUSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For years my wedding ring has done its job. It has led me not into temptation. It has reminded my husband numerous times at parties that it's time to go home. It has been a source of relief to a dinner companion. It has been a status symbol in the maternity ward.", false, true))
                                .addLitePalTags(EnumTag.MARRIAGE.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.SYMBOL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When your mother asks, 'Do you want a piece of advice?' it is a mere formality. It doesn't matter if you answer yes or no. You're going to get it anyway.", false, true))
                                .addLitePalTags(EnumTag.MOM.getTag())
                                .addLitePalTags(EnumTag.ADVICE.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I stand before God at the end of my life, I would hope that I would not have a single bit of talent left, and could say, 'I used everything you gave me'.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never have more children than you have car windows.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.CHILDREN.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Dreams have only one owner at a time. That's why dreamers are lonely.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .addLitePalTags(EnumTag.OWNER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Thanksgiving dinners take eighteen hours to prepare. They are consumed in twelve minutes. Half-times take twelve minutes. This is not coincidence.", false, true))
                                .addLitePalTags(EnumTag.THANKSGIVING.getTag())
                                .addLitePalTags(EnumTag.CONSUMED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never go to a doctor whose office plants have died.", false, true))
                                .addLitePalTags(EnumTag.MEDICAL.getTag())
                                .addLitePalTags(EnumTag.DOCTOR.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is a thin line that separates laughter and pain, comedy and tragedy, humor and hurt.", false, true))
                                .addLitePalTags(EnumTag.HUMOR.getTag())
                                .addLitePalTags(EnumTag.PAIN.getTag())
                                .addLitePalTags(EnumTag.TRAGEDY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A grandmother pretends she doesn't know who you are on Halloween.", false, true))
                                .addLitePalTags(EnumTag.GRANDMOTHER.getTag())
                                .addLitePalTags(EnumTag.SHE.getTag())
                                .addLitePalTags(EnumTag.HALLOWEEN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ERNEST_HEMINGWAY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no friend as loyal as a book.", false, true))
                                .addLitePalTags(EnumTag.BOOK.getTag())
                                .addLitePalTags(EnumTag.FRIEND.getTag())
                                .addLitePalTags(EnumTag.LOYAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Courage is grace under pressure.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.GRACE.getTag())
                                .addLitePalTags(EnumTag.PRESSURE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is nothing noble in being superior to your fellow men. True nobility lies in being superior to your former self.", false, true))
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.BEING.getTag())
                                .addLitePalTags(EnumTag.NOBILITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("But man is not made for defeat. A man can be destroyed but not defeated.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.DEFEAT.getTag())
                                .addLitePalTags(EnumTag.DESTROYED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never go on trips with anyone you do not love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I like to listen. I have learned a great deal from listening carefully. Most people never listen.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.LISTENING.getTag())
                                .addLitePalTags(EnumTag.DEAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("An intelligent man is sometimes forced to be drunk to spend time with his fools.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.DRUNK.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love sleep. My life has the tendency to fall apart when I'm awake, you know?", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The world breaks everyone, and afterward, some are strong at the broken places.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.BROKEN.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The best way to find out if you can trust somebody is to trust them.", false, true))
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.BEST_WAY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.EDGAR_ALLAN_POE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Deep into that darkness peering, long I stood there, wondering, fearing, doubting, dreaming dreams no mortal ever dared to dream before.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.DEEP.getTag())
                                .addLitePalTags(EnumTag.DREAMING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I would define, in brief, the poetry of words as the rhythmical creation of Beauty.", false, true))
                                .addLitePalTags(EnumTag.POETRY.getTag())
                                .addLitePalTags(EnumTag.BRIEF.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Words have no power to impress the mind without the exquisite horror of their reality.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.IMPRESS.getTag())
                                .addLitePalTags(EnumTag.HORROR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All that we see or seem is but a dream within a dream.", false, true))
                                .addLitePalTags(EnumTag.ROMANTIC.getTag())
                                .addLitePalTags(EnumTag.DREAM.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("They who dream by day are cognizant of many things which escape those who dream only by night.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.DREAM.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I became insane, with long intervals of horrible sanity.", false, true))
                                .addLitePalTags(EnumTag.HORRIBLE.getTag())
                                .addLitePalTags(EnumTag.BECAME.getTag())
                                .addLitePalTags(EnumTag.INTERVALS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The boundaries which divide Life from Death are at best shadowy and vague. Who shall say where the one ends, and where the other begins?", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.VAGUE.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We loved with a love that was more than love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LOVED.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Once upon a midnight dreary, while I pondered weak and weary.", false, true))
                                .addLitePalTags(EnumTag.MIDNIGHT.getTag())
                                .addLitePalTags(EnumTag.WEARY.getTag())
                                .addLitePalTags(EnumTag.ONCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Science has not yet taught us if madness is or is not the sublimity of the intelligence.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getTag())
                                .addLitePalTags(EnumTag.MADNESS.getTag())
                                .addLitePalTags(EnumTag.TAUGHT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FRANCIS_OF_ASSISI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Start by doing what's necessary; then do what's possible; and suddenly you are doing the impossible.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.START.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Lord, make me an instrument of thy peace. Where there is hatred, let me sow love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.PEACE.getTag())
                                .addLitePalTags(EnumTag.HATRED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A single sunbeam is enough to drive away many shadows.", false, true))
                                .addLitePalTags(EnumTag.SINGLE.getTag())
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .addLitePalTags(EnumTag.SUNBEAM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Where there is charity and wisdom, there is neither fear nor ignorance.", false, true))
                                .addLitePalTags(EnumTag.CHARITY.getTag())
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .addLitePalTags(EnumTag.NOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is no use walking anywhere to preach unless our walking is our preaching.", false, true))
                                .addLitePalTags(EnumTag.WALKING.getTag())
                                .addLitePalTags(EnumTag.UNLESS.getTag())
                                .addLitePalTags(EnumTag.USE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("While you are proclaiming peace with your lips, be careful to have it even more fully in your heart.", false, true))
                                .addLitePalTags(EnumTag.PEACE.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.BE_CAREFUL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If God can work through me, he can work through anyone.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.GOD.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Men lose all the material things they leave behind them in this world, but they carry with them the reward of their charity and the alms they give. For these, they will receive from the Lord the reward and recompense they deserve.", false, true))
                                .addLitePalTags(EnumTag.REWARD.getTag())
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For it is in giving that we receive.", false, true))
                                .addLitePalTags(EnumTag.GIVING.getTag())
                                .addLitePalTags(EnumTag.CHRISTMAS.getTag())
                                .addLitePalTags(EnumTag.RECEIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Lord, grant that I might not so much seek to be loved as to love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LOVED.getTag())
                                .addLitePalTags(EnumTag.MIGHT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FRANK_LLOYD_WRIGHT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Less is only more where more is no good.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life always rides in strength to victory, not through internationalism... but only through the direct responsibility of the individual.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Space is the breath of art.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.DESIGN.getTag())
                                .addLitePalTags(EnumTag.BREATH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No house should ever be on a hill or on anything. It should be of the hill. Belonging to it. Hill and house should live together each the happier for the other.", false, true))
                                .addLitePalTags(EnumTag.HILL.getTag())
                                .addLitePalTags(EnumTag.BELONGING.getTag())
                                .addLitePalTags(EnumTag.EVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is nothing more uncommon than common sense.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.UNCOMMON.getTag())
                                .addLitePalTags(EnumTag.COMMON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The longer I live, the more beautiful life becomes.", false, true))
                                .addLitePalTags(EnumTag.BEAUTIFUL.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.LONGER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every great architect is - necessarily - a great poet. He must be a great original interpreter of his time, his day, his age.", false, true))
                                .addLitePalTags(EnumTag.ARCHITECTURE.getTag())
                                .addLitePalTags(EnumTag.ORIGINAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The mother art is architecture. Without an architecture of our own we have no soul of our own civilization.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.MOTHER.getTag())
                                .addLitePalTags(EnumTag.ARCHITECTURE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Study nature, love nature, stay close to nature. It will never fail you.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FRANK_SINATRA.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You gotta love livin', baby, 'cause dyin' is a pain in the ass.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.PAIN.getTag())
                                .addLitePalTags(EnumTag.GOTTA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People often remark that I'm pretty lucky. Luck is only important in so far as getting the chance to sell yourself at the right moment. After that, you've got to have talent and know how to use it.", false, true))
                                .addLitePalTags(EnumTag.LUCK.getTag())
                                .addLitePalTags(EnumTag.LUCKY.getTag())
                                .addLitePalTags(EnumTag.USE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Cock your hat - angles are attitudes.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.ANGLES.getTag())
                                .addLitePalTags(EnumTag.ATTITUDES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm like Albert Schweitzer and Bertrand Russell and Albert Einstein in that I have a respect for life - in any form. I believe in nature, in the birds, the sea, the sky, in everything I can see or that there is real evidence for. If these things are what you mean by God, then I believe in God.", false, true))
                                .addLitePalTags(EnumTag.BELIEVE.getTag())
                                .addLitePalTags(EnumTag.BIRDS.getTag())
                                .addLitePalTags(EnumTag.EVIDENCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Dare to wear the foolish clown face.", false, true))
                                .addLitePalTags(EnumTag.FACE.getTag())
                                .addLitePalTags(EnumTag.CLOWN.getTag())
                                .addLitePalTags(EnumTag.WEAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I would like to be remembered as a man who had a wonderful time living life, a man who had good friends, fine family - and I don't think I could ask for anything more than that, actually.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.HAD.getTag())
                                .addLitePalTags(EnumTag.LIVING_LIFE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm gonna live till I die.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.TILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I believe that God knows what each of us wants and needs. It's not necessary for us to make it to church on Sunday to reach Him. You can find Him anyplace. And if that sounds heretical, my source is pretty good: Matthew, Five to Seven, The Sermon on the Mount.", false, true))
                                .addLitePalTags(EnumTag.CHURCH.getTag())
                                .addLitePalTags(EnumTag.REACH.getTag())
                                .addLitePalTags(EnumTag.SEVEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The best revenge is massive success.", false, true))
                                .addLitePalTags(EnumTag.REVENGE.getTag())
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.MASSIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Alcohol may be man's worst enemy, but the bible says love your enemy.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ALCOHOL.getTag())
                                .addLitePalTags(EnumTag.BIBLE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FRANKLIN_D_ROOSEVELT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The point in history at which we stand is full of promise and danger. The world will either move forward toward unity and widely shared prosperity - or it will move apart.", false, true))
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.SHARED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Confidence... thrives on honesty, on honor, on the sacredness of obligations, on faithful protection and on unselfish performance. Without them it cannot live.", false, true))
                                .addLitePalTags(EnumTag.CONFIDENCE.getTag())
                                .addLitePalTags(EnumTag.HONOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The only thing we have to fear is fear itself.", false, true))
                                .addLitePalTags(EnumTag.FEAR.getTag())
                                .addLitePalTags(EnumTag.THE_ONLY_THING.getTag())
                                .addLitePalTags(EnumTag.ITSELF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm not the smartest fellow in the world, but I can sure pick smart colleagues.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.SURE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Democracy cannot succeed unless those who express their choice are prepared to choose wisely. The real safeguard of democracy, therefore, is education.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.EXPRESS.getTag())
                                .addLitePalTags(EnumTag.PREPARED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If civilization is to survive, we must cultivate the science of human relationships - the ability of all peoples, of all kinds, to live together, in the same world at peace.", false, true))
                                .addLitePalTags(EnumTag.RELATIONSHIP.getTag())
                                .addLitePalTags(EnumTag.SURVIVE.getTag())
                                .addLitePalTags(EnumTag.KINDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you reach the end of your rope, tie a knot in it and hang on.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.TIE.getTag())
                                .addLitePalTags(EnumTag.HANG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let us never forget that government is ourselves and not an alien power over us. The ultimate rulers of our democracy are not a President and senators and congressmen and government officials, but the voters of this country.", false, true))
                                .addLitePalTags(EnumTag.GOVERNMENT.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nobody will ever deprive the American people of the right to vote except the American people themselves and the only way they could do this is by not voting.", false, true))
                                .addLitePalTags(EnumTag.VOTING.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.COULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Happiness lies in the joy of achievement and the thrill of creative effort.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.JOY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FRANZ_KAFKA.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have the true feeling of myself only when I am unbearably unhappy.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.UNHAPPY.getTag())
                                .addLitePalTags(EnumTag.TRUE_FEELING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every revolution evaporates and leaves behind only the slime of a new bureaucracy.", false, true))
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.LEAVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You do not need to leave your room. Remain sitting at your table and listen. Do not even listen, simply wait, be quiet still and solitary. The world will freely offer itself to you to be unmasked, it has no choice, it will roll in ecstasy at your feet.", false, true))
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .addLitePalTags(EnumTag.WAIT.getTag())
                                .addLitePalTags(EnumTag.ROLL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My peers, lately, have found companionship through means of intoxication - it makes them sociable. I, however, cannot force myself to use drugs to cheat on my loneliness - it is all that I have - and when the drugs and alcohol dissipate, will be all that my peers have as well.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.HOWEVER.getTag())
                                .addLitePalTags(EnumTag.SOCIABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("So long as you have food in your mouth, you have solved all questions for the time being.", false, true))
                                .addLitePalTags(EnumTag.FOOD.getTag())
                                .addLitePalTags(EnumTag.MOUTH.getTag())
                                .addLitePalTags(EnumTag.QUESTIONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Start with what is right rather than what is acceptable.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.ACCEPTABLE.getTag())
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("From a certain point onward there is no longer any turning back. That is the point that must be reached.", false, true))
                                .addLitePalTags(EnumTag.CERTAIN_POINT.getTag())
                                .addLitePalTags(EnumTag.LONGER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("God gives the nuts, but he does not crack them.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.NUTS.getTag())
                                .addLitePalTags(EnumTag.CRACK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A first sign of the beginning of understanding is the wish to die.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.WISH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Anyone who keeps the ability to see beauty never grows old.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .addLitePalTags(EnumTag.GROWS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FREDERICK_DOUGLASS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The soul that is within me no man can degrade.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.WITHIN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The thing worse than rebellion is the thing that causes rebellion.", false, true))
                                .addLitePalTags(EnumTag.REBELLION.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .addLitePalTags(EnumTag.CAUSES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I didn't know I was a slave until I found out I couldn't do the things I wanted.", false, true))
                                .addLitePalTags(EnumTag.SLAVE.getTag())
                                .addLitePalTags(EnumTag.FOUND.getTag())
                                .addLitePalTags(EnumTag.WANTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To suppress free speech is a double wrong. It violates the rights of the hearer as well as those of the speaker.", false, true))
                                .addLitePalTags(EnumTag.FREE_SPEECH.getTag())
                                .addLitePalTags(EnumTag.VIOLATES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The white man's happiness cannot be purchased by the black man's misery.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.WHITE.getTag())
                                .addLitePalTags(EnumTag.PURCHASED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is not light that we need, but fire; it is not the gentle shower, but thunder. We need the storm, the whirlwind, and the earthquake.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.SHOWER.getTag())
                                .addLitePalTags(EnumTag.WHIRLWIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Without a struggle, there can be no progress.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.PROGRESS.getTag())
                                .addLitePalTags(EnumTag.WITHOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Where justice is denied, where poverty is enforced, where ignorance prevails, and where any one class is made to feel that society is an organized conspiracy to oppress, rob and degrade them, neither persons nor property will be safe.", false, true))
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.ROB.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is easier to build strong children than to repair broken men.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getTag())
                                .addLitePalTags(EnumTag.BROKEN.getTag())
                                .addLitePalTags(EnumTag.REPAIR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If there is no struggle, there is no progress.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.PROGRESS.getTag())
                                .addLitePalTags(EnumTag.STRUGGLE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FRIDA_KAHLO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love you more than my own skin.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ROMANTIC.getTag())
                                .addLitePalTags(EnumTag.I_LOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am my own muse, the subject I know best.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.MY_OWN.getTag())
                                .addLitePalTags(EnumTag.SUBJECT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I never paint dreams or nightmares. I paint my own reality.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.MY_OWN.getTag())
                                .addLitePalTags(EnumTag.NIGHTMARES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I paint flowers so they will not die.", false, true))
                                .addLitePalTags(EnumTag.FLOWERS.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I paint self-portraits because I am so often alone, because I am the person I know best.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.PERSON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I tried to drown my sorrows, but the bastards learned how to swim, and now I am overwhelmed by this decent and good feeling.", false, true))
                                .addLitePalTags(EnumTag.LEARNED.getTag())
                                .addLitePalTags(EnumTag.GOOD_FEELING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I leave you my portrait so that you will have my presence all the days and nights that I am away from you.", false, true))
                                .addLitePalTags(EnumTag.PORTRAIT.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I was a child who went about in a world of colors... My friends, my companions, became women slowly; I became old in instants.", false, true))
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .addLitePalTags(EnumTag.OLD.getTag())
                                .addLitePalTags(EnumTag.BECAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I find that Americans completely lack sensibility and good taste. They are boring, and they all have faces like unbaked rolls.", false, true))
                                .addLitePalTags(EnumTag.TASTE.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.GOOD_TASTE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The most important part of the body is the brain. Of my face, I like the eyebrows and eyes. Aside from that, I like nothing. My head is too small.", false, true))
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.THE_MOST_IMPORTANT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FRIEDRICH_NIETZSCHE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("God is dead. God remains dead. And we have killed him. Yet his shadow still looms. How shall we comfort ourselves, the murderers of all murderers? What was holiest and mightiest of all that the world has yet owned has bled to death under our knives; who will wipe this blood off us? What water is there for us to clean ourselves?", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.SHADOW.getTag())
                                .addLitePalTags(EnumTag.BLED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All truly great thoughts are conceived by walking.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.WALKING.getTag())
                                .addLitePalTags(EnumTag.THOUGHTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The individual has always had to struggle to keep from being overwhelmed by the tribe. If you try it, you will be lonely often, and sometimes frightened. But no price is too high to pay for the privilege of owning yourself.", false, true))
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.INDIVIDUAL.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Whoever fights monsters should see to it that in the process he does not become a monster. And if you gaze long enough into an abyss, the abyss will gaze back into you.", false, true))
                                .addLitePalTags(EnumTag.PROCESS.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.FIGHTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We love life, not because we are used to living but because we are used to loving.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LIVING.getTag())
                                .addLitePalTags(EnumTag.LOVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Thoughts are the shadows of our feelings - always darker, emptier and simpler.", false, true))
                                .addLitePalTags(EnumTag.THOUGHTS.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.DARKER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is always some madness in love. But there is also always some reason in madness.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.RELATIONSHIP.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Without music, life would be a mistake.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.MISTAKE.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To live is to suffer, to survive is to find some meaning in the suffering.", false, true))
                                .addLitePalTags(EnumTag.SURVIVE.getTag())
                                .addLitePalTags(EnumTag.SUFFER.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is not a lack of love, but a lack of friendship that makes unhappy marriages.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.MARRIAGE.getTag())
                                .addLitePalTags(EnumTag.MARRIAGES.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.FYODOR_DOSTOEVSKY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If there is no God, everything is permitted.", false, true))
                                .addLitePalTags(EnumTag.GOD.getTag())
                                .addLitePalTags(EnumTag.EVERYTHING.getTag())
                                .addLitePalTags(EnumTag.PERMITTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A real gentleman, even if he loses everything he owns, must show no emotion. Money must be so far beneath a gentleman that it is hardly worth troubling about.", false, true))
                                .addLitePalTags(EnumTag.SHOW.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .addLitePalTags(EnumTag.BENEATH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Much unhappiness has come into the world because of bewilderment and things left unsaid.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.LEFT.getTag())
                                .addLitePalTags(EnumTag.THINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The cleverest of all, in my opinion, is the man who calls himself a fool at least once a month.", false, true))
                                .addLitePalTags(EnumTag.IN_MY_OPINION.getTag())
                                .addLitePalTags(EnumTag.LEAST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sarcasm: the last refuge of modest and chaste-souled people when the privacy of their soul is coarsely and intrusively invaded.", false, true))
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.LAST.getTag())
                                .addLitePalTags(EnumTag.REFUGE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The soul is healed by being with children.", false, true))
                                .addLitePalTags(EnumTag.CHILDREN.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.HEALED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To live without Hope is to Cease to live.", false, true))
                                .addLitePalTags(EnumTag.HOPE.getTag())
                                .addLitePalTags(EnumTag.LIVE.getTag())
                                .addLitePalTags(EnumTag.CEASE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The greatest happiness is to know the source of unhappiness.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.KNOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We sometimes encounter people, even perfect strangers, who begin to interest us at first sight, somehow suddenly, all at once, before a word has been spoken.", false, true))
                                .addLitePalTags(EnumTag.PERFECT.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Beauty is mysterious as well as terrible. God and devil are fighting there, and the battlefield is the heart of man.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.DEVIL.getTag())
                                .addLitePalTags(EnumTag.MYSTERIOUS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.GEORGE_BERNARD_SHAW.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life isn't about finding yourself. Life is about creating yourself.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.FINDING_YOURSELF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Progress is impossible without change, and those who cannot change their minds cannot change anything.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getTag())
                                .addLitePalTags(EnumTag.MINDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We are made wise not by the recollection of our past, but by the responsibility for our future.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.RESPONSIBILITY.getTag())
                                .addLitePalTags(EnumTag.WISE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The single biggest problem in communication is the illusion that it has taken place.", false, true))
                                .addLitePalTags(EnumTag.COMMUNICATION.getTag())
                                .addLitePalTags(EnumTag.SINGLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no sincerer love than the love of food.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.FOOD.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Beware of false knowledge; it is more dangerous than ignorance.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .addLitePalTags(EnumTag.BEWARE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Success does not consist in never making mistakes but in never making the same one a second time.", false, true))
                                .addLitePalTags(EnumTag.MAKING_MISTAKES.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you cannot get rid of the family skeleton, you may as well make it dance.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .addLitePalTags(EnumTag.SKELETON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Better keep yourself clean and bright; you are the window through which you must see the world.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.BRIGHT.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Imagination is the beginning of creation. You imagine what you desire, you will what you imagine and at last you create what you will.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .addLitePalTags(EnumTag.IMAGINE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.GALILEO_GALILEI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We cannot teach people anything; we can only help them discover it within themselves.", false, true))
                                .addLitePalTags(EnumTag.HELP.getTag())
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.DISCOVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All truths are easy to understand once they are discovered; the point is to discover them.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.DISCOVER.getTag())
                                .addLitePalTags(EnumTag.DISCOVERED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The Bible shows the way to go to heaven, not the way the heavens go.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.BIBLE.getTag())
                                .addLitePalTags(EnumTag.SHOWS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If I were again beginning my studies, I would follow the advice of Plato and start with mathematics.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.ADVICE.getTag())
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In questions of science, the authority of a thousand is not worth the humble reasoning of a single individual.", false, true))
                                .addLitePalTags(EnumTag.HUMBLE.getTag())
                                .addLitePalTags(EnumTag.SINGLE.getTag())
                                .addLitePalTags(EnumTag.INDIVIDUAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Measure what is measurable, and make measurable what is not so.", false, true))
                                .addLitePalTags(EnumTag.MEASURE.getTag())
                                .addLitePalTags(EnumTag.MAKE.getTag())
                                .addLitePalTags(EnumTag.MEASURABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I do not feel obliged to believe that the same God who has endowed us with sense, reason, and intellect has intended us to forgo their use.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.FORGO.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I give infinite thanks to God, who has been pleased to make me the first observer of marvelous things.", false, true))
                                .addLitePalTags(EnumTag.INFINITE.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is surely harmful to souls to make it a heresy to believe what is proved.", false, true))
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.SURELY.getTag())
                                .addLitePalTags(EnumTag.PROVED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think that in the discussion of natural problems we ought to begin not with the Scriptures, but with experiments, and demonstrations.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.DEMONSTRATIONS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.GEORGE_CARLIN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Frisbeetarianism is the belief that when you die, your soul goes up on the roof and gets stuck.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.ROOF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The main reason Santa is so jolly is because he knows where all the bad girls live.", false, true))
                                .addLitePalTags(EnumTag.CHRISTMAS.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.BAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Have you ever noticed that anybody driving slower than you is an idiot, and anyone going faster than you is a maniac?", false, true))
                                .addLitePalTags(EnumTag.DRIVING.getTag())
                                .addLitePalTags(EnumTag.EVER.getTag())
                                .addLitePalTags(EnumTag.FASTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Electricity is really just organized lightning.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.LIGHTNING.getTag())
                                .addLitePalTags(EnumTag.ORGANIZED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Inside every cynical person, there is a disappointed idealist.", false, true))
                                .addLitePalTags(EnumTag.PERSON.getTag())
                                .addLitePalTags(EnumTag.INSIDE.getTag())
                                .addLitePalTags(EnumTag.DISAPPOINTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't sweat the petty things and don't pet the sweaty things.", false, true))
                                .addLitePalTags(EnumTag.SWEAT.getTag())
                                .addLitePalTags(EnumTag.THINGS.getTag())
                                .addLitePalTags(EnumTag.SWEATY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Just cause you got the monkey off your back doesn't mean the circus has left town.", false, true))
                                .addLitePalTags(EnumTag.MONKEY.getTag())
                                .addLitePalTags(EnumTag.CAUSE.getTag())
                                .addLitePalTags(EnumTag.TOWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("May the forces of evil become confused on the way to your house.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.CONFUSED.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There are nights when the wolves are silent and only the moon howls.", false, true))
                                .addLitePalTags(EnumTag.MOON.getTag())
                                .addLitePalTags(EnumTag.SILENT.getTag())
                                .addLitePalTags(EnumTag.NIGHTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Weather forecast for tonight: dark.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.WEATHER.getTag())
                                .addLitePalTags(EnumTag.TONIGHT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.GEORGE_ORWELL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Power is not a means, it is an end. One does not establish a dictatorship in order to safeguard a revolution; one makes the revolution in order to establish the dictatorship.", false, true))
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .addLitePalTags(EnumTag.DOES.getTag())
                                .addLitePalTags(EnumTag.MAKES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The essence of being human is that one does not seek perfection.", false, true))
                                .addLitePalTags(EnumTag.BEING_HUMAN.getTag())
                                .addLitePalTags(EnumTag.ESSENCE.getTag())
                                .addLitePalTags(EnumTag.DOES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The very concept of objective truth is fading out of the world. Lies will pass into history.", false, true))
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.PASS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Political language... is designed to make lies sound truthful and murder respectable, and to give an appearance of solidity to pure wind.", false, true))
                                .addLitePalTags(EnumTag.SOUND.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.RESPECTABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Freedom is the right to tell people what they do not want to hear.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Each generation imagines itself to be more intelligent than the one that went before it, and wiser than the one that comes after it.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.GENERATION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Who controls the past controls the future. Who controls the present controls the past.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.PAST.getTag())
                                .addLitePalTags(EnumTag.CONTROLS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Happiness can exist only in acceptance.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.ACCEPTANCE.getTag())
                                .addLitePalTags(EnumTag.EXIST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In our age there is no such thing as 'keeping out of politics.' All issues are political issues, and politics itself is a mass of lies, evasions, folly, hatred and schizophrenia.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.FOLLY.getTag())
                                .addLitePalTags(EnumTag.KEEPING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("War is peace. Freedom is slavery. Ignorance is strength.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.GEORGE_S_PATTON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Courage is fear holding on a minute longer.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.HOLDING_ON.getTag())
                                .addLitePalTags(EnumTag.HOLDING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You need to overcome the tug of people against you as you reach for high goals.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .addLitePalTags(EnumTag.HIGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Wars may be fought with weapons, but they are won by men. It is the spirit of men who follow and of the man who leads that gains the victory.", false, true))
                                .addLitePalTags(EnumTag.PATRIOTISM.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .addLitePalTags(EnumTag.FOUGHT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Battle is the most magnificent competition in which a human being can indulge. It brings out all that is best; it removes all that is base. All men are afraid in battle. The coward is the one who lets his fear overcome his sense of duty. Duty is the essence of manhood.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.OVERCOME.getTag())
                                .addLitePalTags(EnumTag.ESSENCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If everyone is thinking alike, then somebody isn't thinking.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.ALIKE.getTag())
                                .addLitePalTags(EnumTag.THEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Success is how high you bounce when you hit bottom.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.HIGH.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The object of war is not to die for your country but to make the other bastard die for his.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is foolish and wrong to mourn the men who died. Rather we should thank God that such men lived.", false, true))
                                .addLitePalTags(EnumTag.VETERANS_DAY.getTag())
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .addLitePalTags(EnumTag.DIED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A good plan violently executed now is better than a perfect plan executed next week.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.VIOLENTLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Accept the challenges so that you can feel the exhilaration of victory.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.CHALLENGES.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.GEORGE_W_BUSH.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("This was not an act of terrorism, but it was an act of war.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.TERRORISM.getTag())
                                .addLitePalTags(EnumTag.ACT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("On September 11 2001, America felt its vulnerability even to threats that gather on the other side of the Earth. We resolved then, and we are resolved today, to confront every threat from any source that could bring sudden terror and suffering to America.", false, true))
                                .addLitePalTags(EnumTag.SUFFERING.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.CONFRONT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To those of you who received honours, awards and distinctions, I say well done. And to the C students, I say you, too, can be president of the United States.", false, true))
                                .addLitePalTags(EnumTag.UNITED_STATES.getTag())
                                .addLitePalTags(EnumTag.UNITED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's clearly a budget. It's got a lot of numbers in it.", false, true))
                                .addLitePalTags(EnumTag.NUMBER.getTag())
                                .addLitePalTags(EnumTag.CLEARLY.getTag())
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Some folks look at me and see a certain swagger, which in Texas is called 'walking.'", false, true))
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We will not waver; we will not tire; we will not falter, and we will not fail. Peace and Freedom will prevail.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.FAIL.getTag())
                                .addLitePalTags(EnumTag.WAVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("America is a Nation with a mission - and that mission comes from our most basic beliefs. We have no desire to dominate, no ambitions of empire. Our aim is a democratic peace - a peace founded upon the dignity and rights of every man and woman.", false, true))
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.AIM.getTag())
                                .addLitePalTags(EnumTag.NATION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We've climbed the mighty mountain. I see the valley below, and it's a valley of peace.", false, true))
                                .addLitePalTags(EnumTag.MOUNTAIN.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .addLitePalTags(EnumTag.BELOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Terrorist attacks can shake the foundations of our biggest buildings, but they cannot touch the foundation of America. These acts shatter steel, but they cannot dent the steel of American resolve.", false, true))
                                .addLitePalTags(EnumTag.STEEL.getTag())
                                .addLitePalTags(EnumTag.RESOLVE.getTag())
                                .addLitePalTags(EnumTag.SHAKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("America is the land of the second chance - and when the gates of the prison open, the path ahead should lead to a better life.", false, true))
                                .addLitePalTags(EnumTag.SECOND_CHANCE.getTag())
                                .addLitePalTags(EnumTag.CHANCE.getTag())
                                .addLitePalTags(EnumTag.AHEAD.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.GEORGE_WASHINGTON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is better to offer no excuse than a bad one.", false, true))
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.OFFER.getTag())
                                .addLitePalTags(EnumTag.EXCUSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We should not look back unless it is to derive useful lessons from past errors, and for the purpose of profiting by dearly bought experience.", false, true))
                                .addLitePalTags(EnumTag.PAST.getTag())
                                .addLitePalTags(EnumTag.PURPOSE.getTag())
                                .addLitePalTags(EnumTag.BOUGHT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Liberty, when it begins to take root, is a plant of rapid growth.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.TAKE.getTag())
                                .addLitePalTags(EnumTag.BEGINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The Constitution is the guide which I never will abandon.", false, true))
                                .addLitePalTags(EnumTag.CONSTITUTION.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Guard against the impostures of pretended patriotism.", false, true))
                                .addLitePalTags(EnumTag.MEMORIAL_DAY.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .addLitePalTags(EnumTag.GUARD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Truth will ultimately prevail where there is pains to bring it to light.", false, true))
                                .addLitePalTags(EnumTag.LIGHT.getTag())
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To be prepared for war is one of the most effective means of preserving peace.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.EFFECTIVE.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Observe good faith and justice toward all nations. Cultivate peace and harmony with all.", false, true))
                                .addLitePalTags(EnumTag.HISTORY.getTag())
                                .addLitePalTags(EnumTag.HARMONY.getTag())
                                .addLitePalTags(EnumTag.GOOD_FAITH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If the freedom of speech is taken away then dumb and silent we may be led, like sheep to the slaughter.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.SILENT.getTag())
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is far better to be alone, than to be in bad company.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.BAD.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.HELEN_KELLER.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.FELT.getTag())
                                .addLitePalTags(EnumTag.TOUCHED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Optimism is the faith that leads to achievement. Nothing can be done without hope and confidence.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.OPTIMISM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Walking with a friend in the dark is better than walking alone in the light.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Keep your face to the sunshine and you cannot see a shadow.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getTag())
                                .addLitePalTags(EnumTag.FACE.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Character cannot be developed in ease and quiet. Only through experience of trial and suffering can the soul be strengthened, ambition inspired, and success achieved.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.EASE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Knowledge is love and light and vision.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.KNOWLEDGE.getTag())
                                .addLitePalTags(EnumTag.VISION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("So long as the memory of certain beloved friends lives in my heart, I shall say that life is good.", false, true))
                                .addLitePalTags(EnumTag.MOVING_ON.getTag())
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.LIVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Alone we can do so little; together we can do so much.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.TOGETHER.getTag())
                                .addLitePalTags(EnumTag.MUCH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life is either a great adventure or nothing.", false, true))
                                .addLitePalTags(EnumTag.ADVENTURE.getTag())
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.EITHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never bend your head. Always hold it high. Look the world straight in the eye.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.HEAD.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.H_JACKSON_BROWN_JR.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never forget the three powerful resources you always have available to you: love, prayer, and forgiveness.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.FORGIVENESS.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Earn your success based on service to others, not at the expense of others.", false, true))
                                .addLitePalTags(EnumTag.BASED.getTag())
                                .addLitePalTags(EnumTag.SERVICE_TO_OTHERS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Our character is what we do when we think no one is looking.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.CHARACTER.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never give up on what you really want to do. The person with big dreams is more powerful than the one with all the facts.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Live so that when your children think of fairness, caring, and integrity, they think of you.", false, true))
                                .addLitePalTags(EnumTag.CARING.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.FAIRNESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Remember that the happiest people are not those getting more, but those giving more.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.GETTING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Remember that the most valuable antiques are dear old friends.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sometimes the heart sees what is invisible to the eye.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.EYE.getTag())
                                .addLitePalTags(EnumTag.SEES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Love is when the other person's happiness is more important than your own.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The best preparation for tomorrow is doing your best today.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.TODAY.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.H_L_MENCKEN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The one permanent emotion of the inferior man is fear - fear of the unknown, the complex, the inexplicable. What he wants above everything else is safety.", false, true))
                                .addLitePalTags(EnumTag.INFERIOR.getTag())
                                .addLitePalTags(EnumTag.INEXPLICABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A judge is a law student who marks his own examination papers.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.STUDENT.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Legend: A lie that has attained the dignity of age.", false, true))
                                .addLitePalTags(EnumTag.HISTORY.getTag())
                                .addLitePalTags(EnumTag.LIE.getTag())
                                .addLitePalTags(EnumTag.LEGEND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In this world of sin and sorrow there is always something to be thankful for; as for me, I rejoice that I am not a Republican.", false, true))
                                .addLitePalTags(EnumTag.THANKFUL.getTag())
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every election is a sort of advance auction sale of stolen goods.", false, true))
                                .addLitePalTags(EnumTag.ELECTION.getTag())
                                .addLitePalTags(EnumTag.STOLEN.getTag())
                                .addLitePalTags(EnumTag.SALE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The whole aim of practical politics is to keep the populace alarmed (and hence clamorous to be led to safety) by menacing it with an endless series of hobgoblins, all of them imaginary.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.AIM.getTag())
                                .addLitePalTags(EnumTag.POPULACE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Democracy is a pathetic belief in the collective wisdom of individual ignorance.", false, true))
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .addLitePalTags(EnumTag.INDIVIDUAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For every complex problem there is an answer that is clear, simple, and wrong.", false, true))
                                .addLitePalTags(EnumTag.PROBLEM.getTag())
                                .addLitePalTags(EnumTag.ANSWER.getTag())
                                .addLitePalTags(EnumTag.COMPLEX.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("On some great and glorious day the plain folks of the land will reach their heart's desire at last, and the White House will be adorned by a downright moron.", false, true))
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .addLitePalTags(EnumTag.LAST.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Democracy is the art and science of running the circus from the monkey cage.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getTag())
                                .addLitePalTags(EnumTag.RUNNING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.H_P_LOVECRAFT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Blue, green, grey, white, or black; smooth, ruffled, or mountainous; that ocean is not silent.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.GREEN.getTag())
                                .addLitePalTags(EnumTag.SILENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The most merciful thing in the world... is the inability of the human mind to correlate all its contents.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .addLitePalTags(EnumTag.INABILITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is absolutely necessary, for the peace and safety of mankind, that some of earth's dark, dead corners and unplumbed depths be let alone; lest sleeping abnormalities wake to resurgent life, and blasphemously surviving nightmares squirm and splash out of their black lairs to newer and wider conquests.", false, true))
                                .addLitePalTags(EnumTag.DEAD.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.WIDER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We live on a placid island of ignorance in the midst of black seas of infinity, and it was not meant that we should voyage far.", false, true))
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .addLitePalTags(EnumTag.MEANT.getTag())
                                .addLitePalTags(EnumTag.SEAS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Children will always be afraid of the dark, and men with minds sensitive to hereditary impulse will always tremble at the thought of the hidden and fathomless worlds of strange life which may pulsate in the gulfs beyond the stars, or press hideously upon our own globe in unholy dimensions which only the dead and the moonstruck can glimpse.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.HIDDEN.getTag())
                                .addLitePalTags(EnumTag.WORLDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Unhappy is he to whom the memories of childhood bring only fear and sadness.", false, true))
                                .addLitePalTags(EnumTag.CHILDHOOD.getTag())
                                .addLitePalTags(EnumTag.UNHAPPY.getTag())
                                .addLitePalTags(EnumTag.WHOM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The world is indeed comic, but the joke is on mankind.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.MANKIND.getTag())
                                .addLitePalTags(EnumTag.INDEED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Cats are the runes of beauty, invincibility, wonder, pride, freedom, coldness, self-sufficiency, and dainty individuality - the qualities of sensitive, enlightened, mentally developed, pagan, cynical, poetic, philosophic, dispassionate, reserved, independent, Nietzschean, unbroken, civilised, master-class men.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.INDEPENDENT.getTag())
                                .addLitePalTags(EnumTag.DAINTY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The oldest and strongest emotion of mankind is fear, and the oldest and strongest kind of fear is fear of the unknown.", false, true))
                                .addLitePalTags(EnumTag.FEAR.getTag())
                                .addLitePalTags(EnumTag.EMOTION.getTag())
                                .addLitePalTags(EnumTag.MANKIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Ocean is more ancient than the mountains, and freighted with the memories and the dreams of Time.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.OCEAN.getTag())
                                .addLitePalTags(EnumTag.MOUNTAINS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.HARRIET_TUBMAN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Read my letter to the old folks, and give my love to them, and tell my brothers to be always watching unto prayer, and when the good old ship of Zion comes along, to be ready to step aboard.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In my dreams and visions, I seemed to see a line, and on the other side of that line were green fields, and lovely flowers, and beautiful white ladies, who stretched out their arms to me over the line, but I couldn't reach them no-how. I always fell before I got to the line.", false, true))
                                .addLitePalTags(EnumTag.LINE.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never wound a snake; kill it.", false, true))
                                .addLitePalTags(EnumTag.SNAKE.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.WOUND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I grew up like a neglected weed - ignorant of liberty, having no experience of it.", false, true))
                                .addLitePalTags(EnumTag.NEGLECTED.getTag())
                                .addLitePalTags(EnumTag.NO_EXPERIENCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I had crossed the line. I was free; but there was no one to welcome me to the land of freedom. I was a stranger in a strange land.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.LINE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I had reasoned this out in my mind, there was one of two things I had a right to, liberty or death; if I could not have one, I would have the other.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I was the conductor of the Underground Railroad for eight years, and I can say what most conductors can't say; I never ran my train off the track and I never lost a passenger.", false, true))
                                .addLitePalTags(EnumTag.RAILROAD.getTag())
                                .addLitePalTags(EnumTag.SAY.getTag())
                                .addLitePalTags(EnumTag.CONDUCTOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think slavery is the next thing to hell. If a person would send another into bondage, he would, it appears to me, be bad enough to send him into hell if he could.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.NEXT.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Now I've been free, I know what a dreadful condition slavery is. I have seen hundreds of escaped slaves, but I never saw one who was willing to go back and be a slave.", false, true))
                                .addLitePalTags(EnumTag.SLAVES.getTag())
                                .addLitePalTags(EnumTag.WILLING.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.HARRY_S_TRUMAN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You want a friend in Washington? Get a dog.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.GET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The atom bomb was no 'great decision.' It was merely another powerful weapon in the arsenal of righteousness.", false, true))
                                .addLitePalTags(EnumTag.RIGHTEOUSNESS.getTag())
                                .addLitePalTags(EnumTag.WEAPON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A pessimist is one who makes difficulties of his opportunities and an optimist is one who makes opportunities of his difficulties.", false, true))
                                .addLitePalTags(EnumTag.DIFFICULTIES.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .addLitePalTags(EnumTag.MAKES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I never did give anybody hell. I just told the truth and they thought it was hell.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In reading the lives of great men, I found that the first victory they won was over themselves. self-discipline with all of them came first.", false, true))
                                .addLitePalTags(EnumTag.VICTORY.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.LIVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Actions are the seed of fate deeds grow into destiny.", false, true))
                                .addLitePalTags(EnumTag.FATE.getTag())
                                .addLitePalTags(EnumTag.DESTINY.getTag())
                                .addLitePalTags(EnumTag.DEEDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("America was not built on fear. America was built on courage, on imagination and an unbeatable determination to do the job at hand.", false, true))
                                .addLitePalTags(EnumTag.PATRIOTISM.getTag())
                                .addLitePalTags(EnumTag.BUILT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is amazing what you can accomplish if you do not care who gets the credit.", false, true))
                                .addLitePalTags(EnumTag.AMAZING.getTag())
                                .addLitePalTags(EnumTag.CREDIT.getTag())
                                .addLitePalTags(EnumTag.ACCOMPLISH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Men make history and not the other way around. In periods where there is no leadership, society stands still. Progress occurs when courageous, skillful leaders seize the opportunity to change things for the better.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.STILL.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is nothing new in the world except the history you do not know.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.HENRY_DAVID_THOREAU.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What lies behind us and what lies ahead of us are tiny matters compared to what lives within us.", false, true))
                                .addLitePalTags(EnumTag.MATTERS.getTag())
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.LIVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Pursue some path, however narrow and crooked, in which you can walk with love and reverence.", false, true))
                                .addLitePalTags(EnumTag.PEACE.getTag())
                                .addLitePalTags(EnumTag.HOWEVER.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Not until we are lost do we begin to understand ourselves.", false, true))
                                .addLitePalTags(EnumTag.LOST.getTag())
                                .addLitePalTags(EnumTag.UNDERSTAND.getTag())
                                .addLitePalTags(EnumTag.UNTIL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("An early-morning walk is a blessing for the whole day.", false, true))
                                .addLitePalTags(EnumTag.MORNING.getTag())
                                .addLitePalTags(EnumTag.DAY.getTag())
                                .addLitePalTags(EnumTag.WHOLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am grateful for what I am and have. My thanksgiving is perpetual.", false, true))
                                .addLitePalTags(EnumTag.GRATEFUL.getTag())
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.THANKSGIVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Many men go fishing all of their lives without knowing that it is not fish they are after.", false, true))
                                .addLitePalTags(EnumTag.SPORTS.getTag())
                                .addLitePalTags(EnumTag.KNOWING.getTag())
                                .addLitePalTags(EnumTag.LIVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The language of friendship is not words but meanings.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.LANGUAGE.getTag())
                                .addLitePalTags(EnumTag.WORDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("This world is but a canvas to our imagination.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.CANVAS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Friends... they cherish one another's hopes. They are kind to one another's dreams.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.KIND.getTag())
                                .addLitePalTags(EnumTag.ANOTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's not what you look at that matters, it's what you see.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.MATTERS.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.HENRY_FORD.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Thinking is the hardest work there is, which is probably the reason why so few engage in it.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When everything seems to be going against you, remember that the airplane takes off against the wind, not with it.", false, true))
                                .addLitePalTags(EnumTag.REMEMBER.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Obstacles are those frightful things you see when you take your eyes off your goal.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.GOAL.getTag())
                                .addLitePalTags(EnumTag.OBSTACLES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you think you can do a thing or think you can't do a thing, you're right.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.RIGHT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If everyone is moving forward together, then success takes care of itself.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.EVERYONE.getTag())
                                .addLitePalTags(EnumTag.ITSELF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A business that makes nothing but money is a poor business.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.MONEY.getTag())
                                .addLitePalTags(EnumTag.POOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't find fault, find a remedy.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.FIND.getTag())
                                .addLitePalTags(EnumTag.FAULT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Failure is simply the opportunity to begin again, this time more intelligently.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My best friend is the one who brings out the best in me.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.FRIEND.getTag())
                                .addLitePalTags(EnumTag.BRINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Coming together is a beginning; keeping together is progress; working together is success.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.KEEPING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.HENRY_KISSINGER.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is, after all, the responsibility of the expert to operate the familiar and that of the leader to transcend it.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.EXPERT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For other nations, utopia is a blessed past never to be recovered; for Americans it is just beyond the horizon.", false, true))
                                .addLitePalTags(EnumTag.HORIZON.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My view of my role is that together with like-minded men and women, I could help contribute to a bipartisan view of American engagement in the world for another period; I could do my part to overcome this really, in a way, awful period in which we are turning history into personal recriminations, depriving our political system of a serious debate.", false, true))
                                .addLitePalTags(EnumTag.ENGAGEMENT.getTag())
                                .addLitePalTags(EnumTag.ROLE.getTag())
                                .addLitePalTags(EnumTag.ANOTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("America has fought five wars since 1945 and has gained its objectives in only one of them, the Gulf War.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.FOUGHT.getTag())
                                .addLitePalTags(EnumTag.THEM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Ninety percent of the politicians give the other ten percent a bad reputation.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("University politics are vicious precisely because the stakes are so small.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.PRECISELY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The Vietnam War was a great tragedy for our country. And it is now far enough away so that one can study without using the slogans to see what's really happened.", false, true))
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.STUDY.getTag())
                                .addLitePalTags(EnumTag.USING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Accept everything about yourself - I mean everything, You are you and that is the beginning and the end - no apologies, no regrets.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.NO_REGRETS.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The task of the leader is to get his people from where they are to where they have not been.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There cannot be a crisis next week. My schedule is already full.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.NEXT.getTag())
                                .addLitePalTags(EnumTag.SCHEDULE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ICE_CUBE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think, to me, reality is better than being fake.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't worry about being a star, worry about doing good work, and all that will come to you.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.WORRY.getTag())
                                .addLitePalTags(EnumTag.STAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Truth is the ultimate power. When the truth comes around, all the lies have to run and hide.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.HIDE.getTag())
                                .addLitePalTags(EnumTag.ULTIMATE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think the worst thing you can do about a situation is nothing.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.WORST_THING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I make a mean cup of coffee, if you give me the right ingredients.", false, true))
                                .addLitePalTags(EnumTag.COFFEE.getTag())
                                .addLitePalTags(EnumTag.MEAN.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Rap is always evolving. It's easy for the old school to hate the new school, but it's a music that got a little stifled I think, by the Internet a little bit.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.RAP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What I learned from architectural drafting is that everything has to have a plan to work. You just can't wing it. I can't get all the materials I need for a house and just start building. Whether it's a career, family, life - you have to plan it out.", false, true))
                                .addLitePalTags(EnumTag.HOUSE.getTag())
                                .addLitePalTags(EnumTag.CAREER.getTag())
                                .addLitePalTags(EnumTag.FAMILY_LIFE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I used to game a lot, you know, back in the day. My gaming time done got so short that my skills ain't where they need to be to be online, you know what I'm saying? I just got that Xbox One. I gotta get my skills back, up the par to call myself a gamer.", false, true))
                                .addLitePalTags(EnumTag.GAME.getTag())
                                .addLitePalTags(EnumTag.BACK.getTag())
                                .addLitePalTags(EnumTag.USED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have a really beautiful life right now, so there is no reason to be hostile. I'm a husband, a father and a man who tries to do the right thing in life and in my work.", false, true))
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.HOSTILE.getTag())
                                .addLitePalTags(EnumTag.TRIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Gangsta to us didn't have anything to do with Al Capone and stuff like that. It's just about living your life the way you want to live it. And you're not going to let nothing stop you.", false, true))
                                .addLitePalTags(EnumTag.LIVING.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.IDA_B_WELLS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The people must know before they can act, and there is no educator to compare with the press.", false, true))
                                .addLitePalTags(EnumTag.ACT.getTag())
                                .addLitePalTags(EnumTag.COMPARE.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Our country's national crime is lynching. It is not the creature of an hour, the sudden outburst of uncontrolled fury, or the unspeakable brutality of an insane mob.", false, true))
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.MOB.getTag())
                                .addLitePalTags(EnumTag.FURY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Somebody must show that the Afro-American race is more sinned against than sinning, and it seems to have fallen upon me to do so.", false, true))
                                .addLitePalTags(EnumTag.RACE.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No nation, savage or civilized, save only the United States of America, has confessed its inability to protect its women save by hanging, shooting, and burning alleged offenders.", false, true))
                                .addLitePalTags(EnumTag.UNITED_STATES.getTag())
                                .addLitePalTags(EnumTag.INABILITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The mob spirit has grown with the increasing intelligence of the Afro-American.", false, true))
                                .addLitePalTags(EnumTag.SPIRIT.getTag())
                                .addLitePalTags(EnumTag.MOB.getTag())
                                .addLitePalTags(EnumTag.INCREASING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What becomes a crime deserving capital punishment when the tables are turned is a matter of small moment when the negro woman is the accusing party.", false, true))
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.CAPITAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The South is brutalized to a degree not realized by its own inhabitants, and the very foundation of government, law and order, are imperilled.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.INHABITANTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The alleged menace of universal suffrage having been avoided by the absolute suppression of the negro vote, the spirit of mob murder should have been satisfied and the butchery of negroes should have ceased.", false, true))
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.MOB.getTag())
                                .addLitePalTags(EnumTag.HAVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Brave men do not gather by thousands to torture and murder a single individual, so gagged and bound he cannot make even feeble resistance or defense.", false, true))
                                .addLitePalTags(EnumTag.INDIVIDUAL.getTag())
                                .addLitePalTags(EnumTag.BOUND.getTag())
                                .addLitePalTags(EnumTag.GATHER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.IMMANUEL_KANT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("He who is cruel to animals becomes hard also in his dealings with men. We can judge the heart of a man by his treatment of animals.", false, true))
                                .addLitePalTags(EnumTag.PET.getTag())
                                .addLitePalTags(EnumTag.CRUEL.getTag())
                                .addLitePalTags(EnumTag.TREATMENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Always recognize that human individuals are ends, and do not use them as means to your end.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.USE.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All our knowledge begins with the senses, proceeds then to the understanding, and ends with reason. There is nothing higher than reason.", false, true))
                                .addLitePalTags(EnumTag.KNOWLEDGE.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.SENSES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is beyond a doubt that all our knowledge begins with experience.", false, true))
                                .addLitePalTags(EnumTag.KNOWLEDGE.getTag())
                                .addLitePalTags(EnumTag.DOUBT.getTag())
                                .addLitePalTags(EnumTag.BEGINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Morality is not the doctrine of how we may make ourselves happy, but how we may make ourselves worthy of happiness.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Live your life as though your every act were to become a universal law.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.ACT.getTag())
                                .addLitePalTags(EnumTag.THOUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Thoughts without content are empty, intuitions without concepts are blind.", false, true))
                                .addLitePalTags(EnumTag.THOUGHTS.getTag())
                                .addLitePalTags(EnumTag.BLIND.getTag())
                                .addLitePalTags(EnumTag.CONCEPTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Two things awe me most, the starry sky above me and the moral law within me.", false, true))
                                .addLitePalTags(EnumTag.SKY.getTag())
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In law a man is guilty when he violates the rights of others. In ethics he is guilty if he only thinks of doing so.", false, true))
                                .addLitePalTags(EnumTag.ETHICS.getTag())
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Science is organized knowledge. Wisdom is organized life.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.SCIENCE.getTag())
                                .addLitePalTags(EnumTag.ORGANIZED.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.INDIRA_GANDHI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There are two kinds of people, those who do the work and those who take the credit. Try to be in the first group; there is less competition there.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.COMPETITION.getTag())
                                .addLitePalTags(EnumTag.KINDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Winning or losing of the election is less important than strengthening the country.", false, true))
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.ELECTION.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have lived a long life, and I am proud that I spend the whole of my life in the service of my people. I am only proud of this and nothing else. I shall continue to serve until my last breath, and when I die, I can say, that every drop of my blood will invigorate India and strengthen it.", false, true))
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.LONG_LIFE.getTag())
                                .addLitePalTags(EnumTag.DROP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The power to question is the basis of all human progress.", false, true))
                                .addLitePalTags(EnumTag.POWER.getTag())
                                .addLitePalTags(EnumTag.HUMAN_PROGRESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You cannot shake hands with a clenched fist.", false, true))
                                .addLitePalTags(EnumTag.PEACE.getTag())
                                .addLitePalTags(EnumTag.HANDS.getTag())
                                .addLitePalTags(EnumTag.SHAKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You must learn to be still in the midst of activity and to be vibrantly alive in repose.", false, true))
                                .addLitePalTags(EnumTag.ALIVE.getTag())
                                .addLitePalTags(EnumTag.ACTIVITY.getTag())
                                .addLitePalTags(EnumTag.STILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We have to prove to the disinherited majority of the world that ecology and conservation will not work against their interest but will bring an improvement in their lives.", false, true))
                                .addLitePalTags(EnumTag.PROVE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.LIVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Have a bias toward action - let's see something happen now. You can break that big plan into small steps and take the first step right away.", false, true))
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.HAPPEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Happiness is a state of mind, you know. I don't think you are permanently happy. One is happy about certain things and not so happy about others.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.CERTAIN_THINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I do not like carving the world into segments; we are one world.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.CARVING.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.INDRA_NOOYI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leadership is hard to define and good leadership even harder. But if you can get people to follow you to the ends of the earth, you are a great leader.", false, true))
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.FOLLOW.getTag())
                                .addLitePalTags(EnumTag.GREAT_LEADER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("At the end of the day, don't forget that you're a person, don't forget you're a mother, don't forget you're a wife, don't forget you're a daughter.", false, true))
                                .addLitePalTags(EnumTag.MOTHER.getTag())
                                .addLitePalTags(EnumTag.FORGET.getTag())
                                .addLitePalTags(EnumTag.PERSON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("As a leader, I am tough on myself and I raise the standard for everybody; however, I am very caring because I want people to excel at what they are doing so that they can aspire to be me in the future.", false, true))
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.HOWEVER.getTag())
                                .addLitePalTags(EnumTag.STANDARD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When it comes to women, there has been a tendency to define women in sports in the context of their relationships - they watch games because their husbands watch. They're interested because their kids play a sport. They buy tickets to a sporting event because it's a way to spend time with family.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.TICKETS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every year in consulting is like three years in the corporate world because you have multiple clients, multiple issues - you grow so much.", false, true))
                                .addLitePalTags(EnumTag.GROW.getTag())
                                .addLitePalTags(EnumTag.CLIENTS.getTag())
                                .addLitePalTags(EnumTag.YEAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The distance between number one and number two is always a constant. If you want to improve the organization, you have to improve yourself and the organization gets pulled up with you. That is a big lesson. I cannot just expect the organization to improve if I don't improve myself and lift the organization, because that distance is a constant.", false, true))
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.DISTANCE.getTag())
                                .addLitePalTags(EnumTag.CONSTANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Most companies target women as end users, but few are effectively utilizing female employees when it comes to innovating for female consumers. When women are empowered in the design and innovation process, the likelihood of success in the marketplace improves by 144%!", false, true))
                                .addLitePalTags(EnumTag.DESIGN.getTag())
                                .addLitePalTags(EnumTag.UTILIZING.getTag())
                                .addLitePalTags(EnumTag.IMPROVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Each and every one of us has unknowingly played a part in the obesity problem.", false, true))
                                .addLitePalTags(EnumTag.PROBLEM.getTag())
                                .addLitePalTags(EnumTag.PART.getTag())
                                .addLitePalTags(EnumTag.EVERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm very honest - brutally honest. I always look at things from their point of view as well as mine. And I know when to walk away.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Is Naked Juice a beverage, or is it a snack? I think we can liquefy snacks or snackify liquids.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.SNACK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.IRIS_APFEL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Great personal style is an extreme curiosity about yourself.", false, true))
                                .addLitePalTags(EnumTag.CURIOSITY.getTag())
                                .addLitePalTags(EnumTag.PERSONAL.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't happen to approve of plastic surgery. I think God put plastic surgeons on this earth for good reasons - people get burned or people might have a nose like Pinocchio and that has to be fixed. But to just chop yourself up to look a few years younger? You could come out looking like a Picasso picture.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.REASONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I mix everything up. A museum curator once said to me that there is a great jazz component to the way I do things because good jazz is improvisation and draws elements from all different cultures. And that's the way I do everything - the way I dress and decorate.", false, true))
                                .addLitePalTags(EnumTag.DRESS.getTag())
                                .addLitePalTags(EnumTag.JAZZ.getTag())
                                .addLitePalTags(EnumTag.DECORATE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you don't learn constantly, you don't grow, and you will wither. Too many people wither on the vine. Sure, it gets a little harder as you get older, but new experiences and new challenges keep it fresh.", false, true))
                                .addLitePalTags(EnumTag.CHALLENGES.getTag())
                                .addLitePalTags(EnumTag.NEW_CHALLENGES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You have to push yourself when you're older because it's very easy to fall into the trap. You start to fall apart - you just have to do your best to paste yourself together. I think doing things and being active is very important. When your mind is busy, you don't hurt so much.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The White House is the people's house. When you do historical restoration, that must be what it is.", false, true))
                                .addLitePalTags(EnumTag.WHITE.getTag())
                                .addLitePalTags(EnumTag.MUST.getTag())
                                .addLitePalTags(EnumTag.WHITE_HOUSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Fashion and interior design are one and the same.", false, true))
                                .addLitePalTags(EnumTag.FASHION.getTag())
                                .addLitePalTags(EnumTag.DESIGN.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Self-exploration is very painful, but unless you do that, you will never know who you are and who you want to be.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.UNLESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My father told me once not to expect anything from anybody so I wouldn't be disappointed. If somebody was nice and did nice things for me, I should be overjoyed, but I shouldn't go through life expecting it, which is very good advice.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.ANYBODY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There's different shopping in Paris than there is at a bazaar in Istanbul, but they're all wonderful.", false, true))
                                .addLitePalTags(EnumTag.PARIS.getTag())
                                .addLitePalTags(EnumTag.ISTANBUL.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ISAAC_NEWTON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Atheism is so senseless. When I look at the solar system, I see the earth at the right distance from the sun to receive the proper amounts of heat and light. This did not happen by chance.", false, true))
                                .addLitePalTags(EnumTag.HEAT.getTag())
                                .addLitePalTags(EnumTag.DISTANCE.getTag())
                                .addLitePalTags(EnumTag.ATHEISM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Gravity may put the planets into motion, but without the divine Power, it could never put them into such a circulating motion as they have about the Sun; and therefore, for this as well as other reasons, I am compelled to ascribe the frame of this System to an intelligent Agent.", false, true))
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.AGENT.getTag())
                                .addLitePalTags(EnumTag.REASONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Genius is patience.", false, true))
                                .addLitePalTags(EnumTag.PATIENCE.getTag())
                                .addLitePalTags(EnumTag.GENIUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My powers are ordinary. Only my application brings me success.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.APPLICATION.getTag())
                                .addLitePalTags(EnumTag.BRINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I can calculate the motion of heavenly bodies, but not the madness of people.", false, true))
                                .addLitePalTags(EnumTag.MOTION.getTag())
                                .addLitePalTags(EnumTag.HEAVENLY_BODIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To every action there is always opposed an equal reaction.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.EQUAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I do not know what I may appear to the world, but to myself I seem to have been only like a boy playing on the seashore, and diverting myself in now and then finding a smoother pebble or a prettier shell than ordinary, whilst the great ocean of truth lay all undiscovered before me.", false, true))
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Truth is ever to be found in simplicity, and not in the multiplicity and confusion of things.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.EVER.getTag())
                                .addLitePalTags(EnumTag.MULTIPLICITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We build too many walls and not enough bridges.", false, true))
                                .addLitePalTags(EnumTag.BUILD.getTag())
                                .addLitePalTags(EnumTag.WALLS.getTag())
                                .addLitePalTags(EnumTag.TOO.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If I have seen further than others, it is by standing upon the shoulders of giants.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.SHOULDERS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ISAAC_ASIMOV.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never let your sense of morals get in the way of doing what's right.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.GET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Humanity has the stars in its future, and that future is too important to be lost under the burden of juvenile folly and ignorant superstition.", false, true))
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.FOLLY.getTag())
                                .addLitePalTags(EnumTag.TOO.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The true delight is in the finding out rather than in the knowing.", false, true))
                                .addLitePalTags(EnumTag.KNOWING.getTag())
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The saddest aspect of life right now is that science gathers knowledge faster than society gathers wisdom.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getTag())
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.FASTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Writing, to me, is simply thinking through my fingers.", false, true))
                                .addLitePalTags(EnumTag.COMMUNICATION.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I do not fear computers. I fear the lack of them.", false, true))
                                .addLitePalTags(EnumTag.FEAR.getTag())
                                .addLitePalTags(EnumTag.COMPUTERS.getTag())
                                .addLitePalTags(EnumTag.THEM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Violence is the last refuge of the incompetent.", false, true))
                                .addLitePalTags(EnumTag.ANGER.getTag())
                                .addLitePalTags(EnumTag.LAST.getTag())
                                .addLitePalTags(EnumTag.REFUGE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is a cult of ignorance in the United States, and there has always been. The strain of anti-intellectualism has been a constant thread winding its way through our political and cultural life, nurtured by the false notion that democracy means that my ignorance is just as good as your knowledge.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.CONSTANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life is pleasant. Death is peaceful. It's the transition that's troublesome.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.TROUBLESOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People who think they know everything are a great annoyance to those of us who do.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.ANNOYANCE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        return appDataBuilders;
    }

    private static ArrayList<AppDataBuilder> inputQuoteJtoZ(DataInputListener dataInputListener) {
        ArrayList<AppDataBuilder> appDataBuilders = new ArrayList<AppDataBuilder>();

        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.JESUS_CHRIST.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Do not let your hearts be troubled. Trust in God; trust also in me.", false, true))
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.GOD.getTag())
                                .addLitePalTags(EnumTag.HEARTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am the Way, the Truth, and the Life. No one comes to the Father except through me.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("And know that I am with you always; yes, to the end of time.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.CHRISTMAS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A new command I give you: Love one another. As I have loved you, so you must love one another.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For what shall it profit a man, if he gain the whole world, and suffer the loss of his soul?", false, true))
                                .addLitePalTags(EnumTag.LOSS.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.SUFFER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("But I say to you, Love your enemies and pray for those who persecute you, so that you may be sons of your Father who is in heaven; for he makes his sun rise on the evil and on the good, and sends rain on the just and on the unjust.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.FATHER.getTag())
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("So I say to you, Ask and it will be given to you; search, and you will find; knock, and the door will be opened for you.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.DOOR.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Blessed are the merciful, for they will be shown mercy.", false, true))
                                .addLitePalTags(EnumTag.BLESSED.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.SHOWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Do not be anxious about tomorrow, for tomorrow will be anxious for itself. Let the day's own trouble be sufficient for the day.", false, true))
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.ANXIOUS.getTag())
                                .addLitePalTags(EnumTag.ITSELF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let the one among you who is without sin be the first to cast a stone.", false, true))
                                .addLitePalTags(EnumTag.SIN.getTag())
                                .addLitePalTags(EnumTag.CAST.getTag())
                                .addLitePalTags(EnumTag.AMONG.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.J_K_ROWLING.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Imagination is not only the uniquely human capacity to envision that which is not, and therefore the fount of all invention and innovation. In its arguably most transformative and revelatory capacity, it is the power to that enables us to empathize with humans whose experiences we have never shared.", false, true))
                                .addLitePalTags(EnumTag.CAPACITY.getTag())
                                .addLitePalTags(EnumTag.SHARED.getTag())
                                .addLitePalTags(EnumTag.ENVISION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Indifference and neglect often do much more damage than outright dislike.", false, true))
                                .addLitePalTags(EnumTag.INDIFFERENCE.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.DAMAGE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The most important thing is to read as much as you can, like I did. It will give you an understanding of what makes good writing and it will enlarge your vocabulary.", false, true))
                                .addLitePalTags(EnumTag.THE_MOST_IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Poverty entails fear and stress and sometimes depression. It meets a thousand petty humiliations and hardships. Climbing out of poverty by your own efforts that is something on which to pride yourself but poverty itself is romanticized by fools.", false, true))
                                .addLitePalTags(EnumTag.STRESS.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.ENTAILS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Anything's possible if you've got enough nerve.", false, true))
                                .addLitePalTags(EnumTag.ENOUGH.getTag())
                                .addLitePalTags(EnumTag.POSSIBLE.getTag())
                                .addLitePalTags(EnumTag.NERVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I sometimes have a tendency to walk on the dark side.", false, true))
                                .addLitePalTags(EnumTag.SOMETIMES.getTag())
                                .addLitePalTags(EnumTag.SIDE.getTag())
                                .addLitePalTags(EnumTag.TENDENCY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It takes a great deal of bravery to stand up to our enemies, but just as much to stand up to our friends.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.DEAL.getTag())
                                .addLitePalTags(EnumTag.ENEMIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you want to see the true measure of a man, watch how he treats his inferiors, not his equals.", false, true))
                                .addLitePalTags(EnumTag.EQUALITY.getTag())
                                .addLitePalTags(EnumTag.MEASURE_OF_A_MAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is impossible to live without failing at something, unless you live so cautiously that you might as well not have lived at all, in which case you have failed by default.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.MIGHT.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is our choices... that show what we truly are, far more than our abilities.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.FAR.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.JACK_WELCH.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Giving people self-confidence is by far the most important thing that I can do. Because then they will act.", false, true))
                                .addLitePalTags(EnumTag.THE_MOST_IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you pick the right people and give them the opportunity to spread their wings and put compensation as a carrier behind it you almost don't have to manage them.", false, true))
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.ALMOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Management is all about managing in the short term, while developing the plans for the long ", false, true))
                                .addLitePalTags(EnumTag.MANAGEMENT.getTag())
                                .addLitePalTags(EnumTag.PLANS.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Globalization has changed us into a company that searches the world, not just to sell or to source, but to find intellectual capital - the world's best talents and greatest ideas.", false, true))
                                .addLitePalTags(EnumTag.SELL.getTag())
                                .addLitePalTags(EnumTag.CAPITAL.getTag())
                                .addLitePalTags(EnumTag.SEARCHES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be candid with everyone.", false, true))
                                .addLitePalTags(EnumTag.CANDID.getTag())
                                .addLitePalTags(EnumTag.EVERYONE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Number one, cash is king... number two, communicate... number three, buy or bury the competition.", false, true))
                                .addLitePalTags(EnumTag.COMMUNICATION.getTag())
                                .addLitePalTags(EnumTag.NUMBER.getTag())
                                .addLitePalTags(EnumTag.BURY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Good business leaders create a vision, articulate the vision, passionately own the vision, and relentlessly drive it to completion.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.VISION.getTag())
                                .addLitePalTags(EnumTag.COMPLETION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Control your own destiny or someone else will.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.DESTINY.getTag())
                                .addLitePalTags(EnumTag.SOMEONE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Before you are a leader, success is all about growing yourself. When you become a leader, success is all about growing others.", false, true))
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.SUCCESS_IS.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("An organization's ability to learn, and translate that learning into action rapidly, is the ultimate competitive advantage.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.LEARN.getTag())
                                .addLitePalTags(EnumTag.ULTIMATE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.JAMES_A_BALDWIN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The power of the white world is threatened whenever a black man refuses to accept the white world's definitions.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.WHITE.getTag())
                                .addLitePalTags(EnumTag.WHENEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Those who say it can't be done are usually interrupted by others doing it.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.SAY.getTag())
                                .addLitePalTags(EnumTag.INTERRUPTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I imagine one of the reasons people cling to their hates so stubbornly is because they sense, once hate is gone, they will be forced to deal with pain.", false, true))
                                .addLitePalTags(EnumTag.PAIN.getTag())
                                .addLitePalTags(EnumTag.IMAGINE.getTag())
                                .addLitePalTags(EnumTag.DEAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Fires can't be made with dead embers, nor can enthusiasm be stirred by spiritless men. Enthusiasm in our daily work lightens effort and turns even labor into pleasant tasks.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.MADE.getTag())
                                .addLitePalTags(EnumTag.PLEASANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Children have never been very good at listening to their elders, but they have never failed to imitate them.", false, true))
                                .addLitePalTags(EnumTag.LISTENING.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love America more than any other country in this world, and, exactly for this reason, I insist on the right to criticize her perpetually.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.MEMORIAL_DAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Love does not begin and end the way we seem to think it does. Love is a battle, love is a war; love is a growing up.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Anyone who has ever struggled with poverty knows how extremely expensive it is to be poor.", false, true))
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .addLitePalTags(EnumTag.EVER.getTag())
                                .addLitePalTags(EnumTag.EXTREMELY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The paradox of education is precisely this - that as one begins to become conscious one begins to examine the society in which he is being educated.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.EXAMINE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is certain, in any case, that ignorance, allied with power, is the most ferocious enemy justice can have.", false, true))
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .addLitePalTags(EnumTag.FEROCIOUS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.JOHN_C_MAXWELL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Without failure there is no achievement.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.ACHIEVEMENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leaders must be close enough to relate to others, but far enough ahead to motivate them.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.RELATE.getTag())
                                .addLitePalTags(EnumTag.FAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Family and friendships are two of the greatest facilitators of happiness.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.TWO.getTag())
                                .addLitePalTags(EnumTag.FRIENDSHIPS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A word of encouragement from a teacher to a child can change a life. A word of encouragement from a spouse can save a marriage. A word of encouragement from a leader can inspire a person to reach her potential.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.REACH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There are two kinds of pride, both good and bad. 'Good pride' represents our dignity and self-respect. 'Bad pride' is the deadly sin of superiority that reeks of conceit and arrogance.", false, true))
                                .addLitePalTags(EnumTag.SELF_RESPECT.getTag())
                                .addLitePalTags(EnumTag.BAD.getTag())
                                .addLitePalTags(EnumTag.CONCEIT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man must be big enough to admit his mistakes, smart enough to profit from them, and strong enough to correct them.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The secret of your success is determined by your daily agenda.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.DAILY.getTag())
                                .addLitePalTags(EnumTag.SUCCESS_IS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People may hear your words, but they feel your attitude.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.WORDS.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A leader is one who knows the way, goes the way, and shows the way.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.SHOWS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leadership is influence.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.INFLUENCE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.JOHN_F_KENNEDY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Conformity is the jailer of freedom and the enemy of growth.", false, true))
                                .addLitePalTags(EnumTag.GROWTH.getTag())
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.ENEMY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My brother Bob doesn't want to be in government - he promised Dad he'd go straight.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.STRAIGHT.getTag())
                                .addLitePalTags(EnumTag.BOB.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Efforts and courage are not enough without purpose and direction.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.PURPOSE.getTag())
                                .addLitePalTags(EnumTag.EFFORTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Things do not happen. Things are made to happen.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.HAPPEN.getTag())
                                .addLitePalTags(EnumTag.MADE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If we cannot now end our differences, at least we can help make the world safe for diversity.", false, true))
                                .addLitePalTags(EnumTag.EQUALITY.getTag())
                                .addLitePalTags(EnumTag.WE_CANNOT.getTag())
                                .addLitePalTags(EnumTag.LEAST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My fellow Americans, ask not what your country can do for you, ask what you can do for your country.", false, true))
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.MEMORIAL_DAY.getTag())
                                .addLitePalTags(EnumTag.ASK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Physical fitness is not only one of the most important keys to a healthy body, it is the basis of dynamic and creative intellectual activity.", false, true))
                                .addLitePalTags(EnumTag.FITNESS.getTag())
                                .addLitePalTags(EnumTag.ACTIVITY.getTag())
                                .addLitePalTags(EnumTag.KEYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leadership and learning are indispensable to each other.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Change is the law of life. And those who look only to the past or present are certain to miss the future.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.PAST.getTag())
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("As we express our gratitude, we must never forget that the highest appreciation is not to utter words, but to live by them.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.WORDS.getTag())
                                .addLitePalTags(EnumTag.UTTER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.JOHANN_WOLFGANG_VON_GOETHE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I call architecture frozen music.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.ARCHITECTURE.getTag())
                                .addLitePalTags(EnumTag.CALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man's manners are a mirror in which he shows his portrait.", false, true))
                                .addLitePalTags(EnumTag.MIRROR.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.SHOWS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One must ask children and birds how cherries and strawberries taste.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.CHILDREN.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The way you see people is the way you treat them, and the way you treat them is what they become.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.TREAT.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Magic is believing in yourself, if you can do that, you can make anything happen.", false, true))
                                .addLitePalTags(EnumTag.YOURSELF.getTag())
                                .addLitePalTags(EnumTag.MAGIC.getTag())
                                .addLitePalTags(EnumTag.HAPPEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Correction does much, but encouragement does more.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getTag())
                                .addLitePalTags(EnumTag.ENCOURAGEMENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Behavior is the mirror in which everyone shows their image.", false, true))
                                .addLitePalTags(EnumTag.MIRROR.getTag())
                                .addLitePalTags(EnumTag.IMAGE.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Girls we love for what they are; young men for what they promise to be.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.RELATIONSHIP.getTag())
                                .addLitePalTags(EnumTag.YOUNG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Knowing is not enough; we must apply. Willing is not enough; we must do.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.KNOWING.getTag())
                                .addLitePalTags(EnumTag.APPLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The soul that sees beauty may sometimes walk alone.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.KANYE_WEST.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("George Bush doesn't care about black people.", false, true))
                                .addLitePalTags(EnumTag.BLACK.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .addLitePalTags(EnumTag.BUSH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Keep your nose out the sky, keep your heart to god, and keep your face to the raising sun.", false, true))
                                .addLitePalTags(EnumTag.SKY.getTag())
                                .addLitePalTags(EnumTag.NOSE.getTag())
                                .addLitePalTags(EnumTag.RAISING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I refuse to accept other people's ideas of happiness for me. As if there's a 'one size fits all' standard for happiness.", false, true))
                                .addLitePalTags(EnumTag.IDEAS.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.STANDARD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think I do myself a disservice by comparing myself to Steve Jobs and Walt Disney and human beings that we've seen before. It should be more like Willy Wonka... and welcome to my chocolate factory.", false, true))
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .addLitePalTags(EnumTag.DISSERVICE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't know what's better gettin' laid or gettin' paid.", false, true))
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.PAID.getTag())
                                .addLitePalTags(EnumTag.LAID.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am Warhol. I am the No. 1 most impactful artist of our generation. I am Shakespeare in the flesh.", false, true))
                                .addLitePalTags(EnumTag.GENERATION.getTag())
                                .addLitePalTags(EnumTag.ARTIST.getTag())
                                .addLitePalTags(EnumTag.WARHOL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing in life is promised except death.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.EXCEPT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Would you believe in what you believe in if you were the only one who believed it?", false, true))
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .addLitePalTags(EnumTag.WERE.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I feel like I'm too busy writing history to read it.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.READ.getTag())
                                .addLitePalTags(EnumTag.TOO.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you have the opportunity to play this game of life you need to appreciate every moment. a lot of people don't appreciate the moment until it's passed.", false, true))
                                .addLitePalTags(EnumTag.GAME.getTag())
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.KARL_MARX.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Religion is the sigh of the oppressed creature, the heart of a heartless world, and the soul of soulless conditions. It is the opium of the people.", false, true))
                                .addLitePalTags(EnumTag.OPIUM.getTag())
                                .addLitePalTags(EnumTag.HEARTLESS.getTag())
                                .addLitePalTags(EnumTag.SIGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Workers of the world unite; you have nothing to lose but your chains.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.CHAINS.getTag())
                                .addLitePalTags(EnumTag.UNITE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The theory of Communism may be summed up in one sentence: Abolish all private property.", false, true))
                                .addLitePalTags(EnumTag.PRIVATE_PROPERTY.getTag())
                                .addLitePalTags(EnumTag.SENTENCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Capitalist production, therefore, develops technology, and the combining together of various processes into a social whole, only by sapping the original sources of all wealth - the soil and the labourer.", false, true))
                                .addLitePalTags(EnumTag.WEALTH.getTag())
                                .addLitePalTags(EnumTag.ORIGINAL.getTag())
                                .addLitePalTags(EnumTag.CAPITALIST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Social progress can be measured by the social position of the female sex.", false, true))
                                .addLitePalTags(EnumTag.SEX.getTag())
                                .addLitePalTags(EnumTag.SOCIAL.getTag())
                                .addLitePalTags(EnumTag.MEASURED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Democracy is the road to socialism.", false, true))
                                .addLitePalTags(EnumTag.ROAD.getTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getTag())
                                .addLitePalTags(EnumTag.SOCIALISM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The production of too many useful things results in too many useless people.", false, true))
                                .addLitePalTags(EnumTag.PRODUCTION.getTag())
                                .addLitePalTags(EnumTag.TOO.getTag())
                                .addLitePalTags(EnumTag.THINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The history of all previous societies has been the history of class struggles.", false, true))
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.STRUGGLES.getTag())
                                .addLitePalTags(EnumTag.PREVIOUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let the ruling classes tremble at a communist revolution. The proletarians have nothing to lose but their chains. They have a world to win. Workingmen of all countries, unite!", false, true))
                                .addLitePalTags(EnumTag.COMMUNIST.getTag())
                                .addLitePalTags(EnumTag.CHAINS.getTag())
                                .addLitePalTags(EnumTag.UNITE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("History repeats itself, first as tragedy, second as farce.", false, true))
                                .addLitePalTags(EnumTag.FARCE.getTag())
                                .addLitePalTags(EnumTag.ITSELF.getTag())
                                .addLitePalTags(EnumTag.REPEATS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.KENDRICK_LAMAR.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My moms always told me, 'How long you gonna play the victim?' I can say I'm mad and I hate everything, but nothing really changes until I change myself.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.GONNA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I learned, when I look in the mirror and tell my story, that I should be myself and not peep whatever everybody is doing.", false, true))
                                .addLitePalTags(EnumTag.MIRROR.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If I'm gonna tell a real story, I'm gonna start with my name.", false, true))
                                .addLitePalTags(EnumTag.START.getTag())
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .addLitePalTags(EnumTag.GONNA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My whole thing is to inspire, to better people, to better myself forever in this thing that we call rap, this thing that we call hip hop.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.RAP.getTag())
                                .addLitePalTags(EnumTag.HOP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I look at where I'm at today and realize that most of my success is owed to the mentors that was in my life.", false, true))
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.LOOK.getTag())
                                .addLitePalTags(EnumTag.SUCCESS_IS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People have to go through trials and tribulations to get where they at. Do your thing - continue to rock it - because obviously, God wants you here.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.TRIBULATIONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's a great, great experience to finally get the reception that you know you rightfully deserve.", false, true))
                                .addLitePalTags(EnumTag.DESERVE.getTag())
                                .addLitePalTags(EnumTag.FINALLY.getTag())
                                .addLitePalTags(EnumTag.RIGHTFULLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Since day one, since the first time I touched the pen, I wanted to be the best at what I do.", false, true))
                                .addLitePalTags(EnumTag.FIRST_TIME.getTag())
                                .addLitePalTags(EnumTag.TOUCHED.getTag())
                                .addLitePalTags(EnumTag.WANTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People are used to music that justifies street culture but something that's not touched on is why these kids act the way they act, live the way they live.", false, true))
                                .addLitePalTags(EnumTag.WHY.getTag())
                                .addLitePalTags(EnumTag.USED.getTag())
                                .addLitePalTags(EnumTag.TOUCHED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My word will never be as strong as God's word. All I am is just a vessel, doing His work.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.KEANU_REEVES.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Falling in love and having a relationship are two different things.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.RELATIONSHIP.getTag())
                                .addLitePalTags(EnumTag.FALLING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Grief changes shape, but it never ends.", false, true))
                                .addLitePalTags(EnumTag.SYMPATHY.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.SHAPE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am not handsome or sexy. Of course, it's not like I am hopeless.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.HANDSOME.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("On a good night, I get underwear, bras, and hotel-room keys thrown onstage... You start to think that you're Tom Jones.", false, true))
                                .addLitePalTags(EnumTag.NIGHT.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.KEYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The simple act of paying attention can take you a long way.", false, true))
                                .addLitePalTags(EnumTag.PAYING.getTag())
                                .addLitePalTags(EnumTag.ACT.getTag())
                                .addLitePalTags(EnumTag.TAKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Kissing someone is pretty intimate, actually very intimate, and your heart always kind of skips a beat before you do that.", false, true))
                                .addLitePalTags(EnumTag.DATING.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's the journey of self, I guess. You start with this kind of loner, outside guy, which a lot of people can relate to, and he goes out into the world.", false, true))
                                .addLitePalTags(EnumTag.JOURNEY.getTag())
                                .addLitePalTags(EnumTag.KIND.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Because we're actors we can pretend and fake it, but I'd rather the intimate investment was authentic.", false, true))
                                .addLitePalTags(EnumTag.FAKE.getTag())
                                .addLitePalTags(EnumTag.AUTHENTIC.getTag())
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My name can't be that tough to pronounce!", false, true))
                                .addLitePalTags(EnumTag.NAME.getTag())
                                .addLitePalTags(EnumTag.TOUGH.getTag())
                                .addLitePalTags(EnumTag.PRONOUNCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Energy can't be created or destroyed, and energy flows. It must be in a direction, with some kind of internal, emotive, spiritual direction. It must have some effect somewhere.", false, true))
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.INTERNAL.getTag())
                                .addLitePalTags(EnumTag.EMOTIVE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.KARL_PILKINGTON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm not that lazy, but I don't need that much money. I lead a fairly simple life.", false, true))
                                .addLitePalTags(EnumTag.MONEY.getTag())
                                .addLitePalTags(EnumTag.SIMPLE_LIFE.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'd rather live in a cave with a view of a palace than live in a palace with a view of a cave.", false, true))
                                .addLitePalTags(EnumTag.VIEW.getTag())
                                .addLitePalTags(EnumTag.PALACE.getTag())
                                .addLitePalTags(EnumTag.CAVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Being honest with you, it's not the 'great' wall of China. It's an all right wall. It's the 'All Right Wall of China.'", false, true))
                                .addLitePalTags(EnumTag.HONEST.getTag())
                                .addLitePalTags(EnumTag.CHINA.getTag())
                                .addLitePalTags(EnumTag.GREAT_WALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I've never understood the 'things to do before you die' idea. If I was ill, I'd be in no mood to have a swim with a dolphin.", false, true))
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.MOOD.getTag())
                                .addLitePalTags(EnumTag.DOLPHIN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you sit in a bath of pineapple chunks, it can kill you. That's well documented.", false, true))
                                .addLitePalTags(EnumTag.WELL.getTag())
                                .addLitePalTags(EnumTag.DOCUMENTED.getTag())
                                .addLitePalTags(EnumTag.CHUNKS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("That's the problem with having a bald head. It exaggerates the shape.", false, true))
                                .addLitePalTags(EnumTag.PROBLEM.getTag())
                                .addLitePalTags(EnumTag.HEAD.getTag())
                                .addLitePalTags(EnumTag.HAVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People who live in a glass house have to answer the door.", false, true))
                                .addLitePalTags(EnumTag.DOOR.getTag())
                                .addLitePalTags(EnumTag.GLASS.getTag())
                                .addLitePalTags(EnumTag.ANSWER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People always tell me I'm going to regret not having kids. But what if I have one and then I regret having it? Has anyone thought of that option?", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.HAVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A slug is always on its own. It's a lonely insect.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .addLitePalTags(EnumTag.INSECT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everyone is living for everyone else now. They're doing stuff so they can tell other people about it. I don't get all that social media stuff, I've always got other things I want to do - odd jobs around the house. No one wants to hear about that.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.ODD_JOBS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.LAO_TZU.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Being deeply loved by someone gives you strength, while loving someone deeply gives you courage.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LOVED.getTag())
                                .addLitePalTags(EnumTag.LOVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Do the difficult things while they are easy and do the great things while they are small. A journey of a thousand miles must begin with a single step.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.JOURNEY.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The journey of a thousand miles begins with one step.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.JOURNEY.getTag())
                                .addLitePalTags(EnumTag.BEGINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Kindness in words creates confidence. Kindness in thinking creates profoundness. Kindness in giving creates love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.CONFIDENCE.getTag())
                                .addLitePalTags(EnumTag.WORDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life is a series of natural and spontaneous changes. Don't resist them - that only creates sorrow. Let reality be reality. Let things flow naturally forward in whatever way they like.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.NATURAL.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A good traveler has no fixed plans, and is not intent on arriving.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.PLANS.getTag())
                                .addLitePalTags(EnumTag.TRAVELER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Silence is a source of great strength.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.SILENCE.getTag())
                                .addLitePalTags(EnumTag.SOURCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When the best leader's work is done the people say, 'We did it ourselves.'", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing is softer or more flexible than water, yet nothing can resist it.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.FLEXIBLE.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Music in the soul can be heard by the universe.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.UNIVERSE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.LEBRON_JAMES.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You can't be afraid to fail. It's the only way you succeed - you're not gonna succeed all the time, and I know that.", false, true))
                                .addLitePalTags(EnumTag.WAY.getTag())
                                .addLitePalTags(EnumTag.FAIL.getTag())
                                .addLitePalTags(EnumTag.GONNA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My mom and I have always been there for each other. We had some tough times, but she was always there for me.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have short goals - to get better every day, to help my teammates every day - but my only ultimate goal is to win an NBA championship. It's all that matters. I dream about it. I dream about it all the time, how it would look, how it would feel. It would be so amazing.", false, true))
                                .addLitePalTags(EnumTag.EVERY_DAY.getTag())
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("But sports carried me away from being in a gang, or being associated with drugs. Sports was my way out.", false, true))
                                .addLitePalTags(EnumTag.GANG.getTag())
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .addLitePalTags(EnumTag.CARRIED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think, team first. It allows me to succeed, it allows my team to succeed.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.SUCCEED.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every night on the court I give my all, and if I'm not giving 100 percent, I criticize myself.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.NIGHT.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Basketball is my passion, I love it. But my family and friends mean everything to me. That's what's important. I need my phone so I can keep in contact with them at all times.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .addLitePalTags(EnumTag.THEM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You know, God gave me a gift to do other things besides play the game of basketball.", false, true))
                                .addLitePalTags(EnumTag.GIFT.getTag())
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I've always been an unselfish guy, and that's the only way I know how to play on the court and I try to play to the maximum of my ability - not only for myself but for my teammates.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.LEO_TOLSTOY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All, everything that I understand, I understand only because I love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.UNDERSTAND.getTag())
                                .addLitePalTags(EnumTag.I_LOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Art is not a handicraft, it is the transmission of feeling the artist has experienced.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.ARTIST.getTag())
                                .addLitePalTags(EnumTag.TRANSMISSION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One of the first conditions of happiness is that the link between Man and Nature shall not be broken.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.BROKEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Truth, like gold, is to be obtained not by its growth, but by washing away from it all that is not gold.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.GOLD.getTag())
                                .addLitePalTags(EnumTag.WASHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no greatness where there is no simplicity, goodness and truth.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.GREATNESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you want to be happy, be.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("An arrogant person considers himself perfect. This is the chief harm of arrogance. It interferes with a person's main task in life - becoming a better person.", false, true))
                                .addLitePalTags(EnumTag.PERFECT.getTag())
                                .addLitePalTags(EnumTag.ARROGANT.getTag())
                                .addLitePalTags(EnumTag.CONSIDERS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The sole meaning of life is to serve humanity.", false, true))
                                .addLitePalTags(EnumTag.MEANING.getTag())
                                .addLitePalTags(EnumTag.SOLE.getTag())
                                .addLitePalTags(EnumTag.MEANING_OF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everyone thinks of changing the world, but no one thinks of changing himself.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.HIMSELF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The two most powerful warriors are patience and time.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.MOST_POWERFUL.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.LEONARDO_DA_VINCI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Why does the eye see a thing more clearly in dreams than the imagination when awake?", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.EYE.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing strengthens authority so much as silence.", false, true))
                                .addLitePalTags(EnumTag.POWER.getTag())
                                .addLitePalTags(EnumTag.AUTHORITY.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("As a well-spent day brings happy sleep, so a life well spent brings happy death.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.SLEEP.getTag())
                                .addLitePalTags(EnumTag.BRINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The noblest pleasure is the joy of understanding.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.JOY.getTag())
                                .addLitePalTags(EnumTag.NOBLEST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("While I thought that I was learning how to live, I have been learning how to die.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Learning never exhausts the mind.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Simplicity is the ultimate sophistication.", false, true))
                                .addLitePalTags(EnumTag.SIMPLICITY.getTag())
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.ULTIMATE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Water is the driving force of all nature.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.DRIVING.getTag())
                                .addLitePalTags(EnumTag.FORCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love those who can smile in trouble, who can gather strength from distress, and grow brave by reflection. 'Tis the business of little minds to shrink, but they whose heart is firm, and whose conscience approves their conduct, will pursue their principles unto death.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.DISTRESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Tears come from the heart and not from the brain.", false, true))
                                .addLitePalTags(EnumTag.SAD.getTag())
                                .addLitePalTags(EnumTag.TEARS.getTag())
                                .addLitePalTags(EnumTag.COME.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.LIL_UZI_VERT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you're you, it doesn't matter if you're the most boring person in the world: someone will like you. You're not trying to be anyone else.", false, true))
                                .addLitePalTags(EnumTag.MATTER.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm just doing me, and to me, that's what got me this far.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.FAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There are always people who are into the old way of doing things. I don't think it's a bad thing necessarily, but things change - nothing stays the same. If you can stay true to yourself, you're always going to be legendary.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.BAD.getTag())
                                .addLitePalTags(EnumTag.NECESSARILY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("'Vert' is, like, straight to the top, like a vertical leap.", false, true))
                                .addLitePalTags(EnumTag.TOP.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.STRAIGHT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I stopped thinking; I just go out, and everything is in the moment. I just stop thinking and start moving - you just gotta be you.", false, true))
                                .addLitePalTags(EnumTag.GO.getTag())
                                .addLitePalTags(EnumTag.GOTTA.getTag())
                                .addLitePalTags(EnumTag.STOPPED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Some guy was just like, 'You rap fast, man. Like a little machine gun,' and from that moment, I was Lil Uzi.", false, true))
                                .addLitePalTags(EnumTag.GUN.getTag())
                                .addLitePalTags(EnumTag.RAP.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I got different moods. Like, if I'm in a good mood, I listen to 'Up' by Thug. If I'm not in a good mood, I'll listen to 'King TROUP' - that's a real emotional one.", false, true))
                                .addLitePalTags(EnumTag.KING.getTag())
                                .addLitePalTags(EnumTag.MOOD.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I like to look cool and dress nice. Lil Uzi is a rock star. Just know that.", false, true))
                                .addLitePalTags(EnumTag.DRESS.getTag())
                                .addLitePalTags(EnumTag.ROCK_STAR.getTag())
                                .addLitePalTags(EnumTag.STAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't get me wrong: school is good and all, but school is way too slow for me. Like, super slow. So I didn't want to go. I wanted to learn on my own with real life experiences.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The type of music I make, it's not just straight-up rapping. There's emotion in it. That's why people feel each song differently. I get all my vibes from rock music, you know? All my melodies and all that.", false, true))
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.WHY.getTag())
                                .addLitePalTags(EnumTag.MELODIES.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.MALCOLM_X.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Education is the passport to the future, for tomorrow belongs to those who prepare for it today.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.PREPARE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The media's the most powerful entity on earth. They have the power to make the innocent guilty and to make the guilty innocent, and that's power. Because they control the minds of the masses.", false, true))
                                .addLitePalTags(EnumTag.MEDIA.getTag())
                                .addLitePalTags(EnumTag.CONTROL.getTag())
                                .addLitePalTags(EnumTag.INNOCENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no better than adversity. Every defeat, every heartbreak, every loss, contains its own seed, its own lesson on how to improve your performance the next time.", false, true))
                                .addLitePalTags(EnumTag.ADVERSITY.getTag())
                                .addLitePalTags(EnumTag.HEARTBREAK.getTag())
                                .addLitePalTags(EnumTag.NEXT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You're not supposed to be so blind with patriotism that you can't face reality. Wrong is wrong, no matter who says it.", false, true))
                                .addLitePalTags(EnumTag.BLIND.getTag())
                                .addLitePalTags(EnumTag.MATTER.getTag())
                                .addLitePalTags(EnumTag.FACE_REALITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be peaceful, be courteous, obey the law, respect everyone; but if someone puts his hand on you, send him to the cemetery.", false, true))
                                .addLitePalTags(EnumTag.RESPECT.getTag())
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.EVERYONE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm for truth, no matter who tells it. I'm for justice, no matter who it's for or against.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The future belongs to those who prepare for it today.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.PREPARE.getTag())
                                .addLitePalTags(EnumTag.BELONGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man who stands for nothing will fall for anything.", false, true))
                                .addLitePalTags(EnumTag.FALL.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.STANDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't even call it violence when it's in self defense; I call it intelligence.", false, true))
                                .addLitePalTags(EnumTag.EVEN.getTag())
                                .addLitePalTags(EnumTag.CALL.getTag())
                                .addLitePalTags(EnumTag.DEFENSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have more respect for a man who lets me know where he stands, even if he's wrong, than the one who comes up like an angel and is nothing but a devil.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.MOTHER_TERESA.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let us always meet each other with smile, for the smile is the beginning of love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Peace begins with a smile.", false, true))
                                .addLitePalTags(EnumTag.SMILE.getTag())
                                .addLitePalTags(EnumTag.PEACE.getTag())
                                .addLitePalTags(EnumTag.BEGINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We need to find God, and he cannot be found in noise and restlessness. God is the friend of silence. See how nature - trees, flowers, grass- grows in silence; see the stars, the moon and the sun, how they move in silence... We need silence to be able to touch souls.", false, true))
                                .addLitePalTags(EnumTag.GOD.getTag())
                                .addLitePalTags(EnumTag.FLOWERS.getTag())
                                .addLitePalTags(EnumTag.GROWS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We shall never know all the good that a simple smile can do.", false, true))
                                .addLitePalTags(EnumTag.SMILE.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.SHALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be faithful in small things because it is in them that your strength lies.", false, true))
                                .addLitePalTags(EnumTag.FAITH.getTag())
                                .addLitePalTags(EnumTag.SMALL_THINGS.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Spread love everywhere you go. Let no one ever come to you without leaving happier.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.EVER.getTag())
                                .addLitePalTags(EnumTag.HAPPIER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Loneliness and the feeling of being unwanted is the most terrible poverty.", false, true))
                                .addLitePalTags(EnumTag.LONELINESS.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .addLitePalTags(EnumTag.UNWANTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If we have no peace, it is because we have forgotten that we belong to each other.", false, true))
                                .addLitePalTags(EnumTag.PEACE.getTag())
                                .addLitePalTags(EnumTag.BELONG.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We think sometimes that poverty is only being hungry, naked and homeless. The poverty of being unwanted, unloved and uncared for is the greatest poverty. We must start in our own homes to remedy this kind of poverty.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.KIND.getTag())
                                .addLitePalTags(EnumTag.SOMETIMES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Joy is prayer; joy is strength: joy is love; joy is a net of love by which you can catch souls.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.MAHATMA_GANDHI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A nation's culture resides in the hearts and in the soul of its people.", false, true))
                                .addLitePalTags(EnumTag.CULTURE.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.NATION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("An eye for an eye only ends up making the whole world blind.", false, true))
                                .addLitePalTags(EnumTag.PEACE.getTag())
                                .addLitePalTags(EnumTag.EYE.getTag())
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Happiness is when what you think, what you say, and what you do are in harmony.", false, true))
                                .addLitePalTags(EnumTag.HAPPINESS.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.HARMONY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Prayer is the key of the morning and the bolt of the evening.", false, true))
                                .addLitePalTags(EnumTag.PRAYER.getTag())
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.BOLT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The best way to find yourself is to lose yourself in the service of others.", false, true))
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.FIND.getTag())
                                .addLitePalTags(EnumTag.BEST_WAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("First they ignore you, then they laugh at you, then they fight you, then you win.", false, true))
                                .addLitePalTags(EnumTag.WIN.getTag())
                                .addLitePalTags(EnumTag.IGNORE.getTag())
                                .addLitePalTags(EnumTag.THEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Live as if you were to die tomorrow. Learn as if you were to live forever.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.LEARN.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You must be the change you wish to see in the world.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.WISH.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The weak can never forgive. Forgiveness is the attribute of the strong.", false, true))
                                .addLitePalTags(EnumTag.FORGIVENESS.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Where there is love there is life.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.WHERE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.MARCUS_TULLIUS_CICERO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is not by muscle, speed, or physical dexterity that great things are achieved, but by reflection, force of character, and judgment.", false, true))
                                .addLitePalTags(EnumTag.REFLECTION.getTag())
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.SPEED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What then is freedom? The power to live as one wishes.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.INDEPENDENCE.getTag())
                                .addLitePalTags(EnumTag.THEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The countenance is the portrait of the soul, and the eyes mark its intentions.", false, true))
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.PORTRAIT.getTag())
                                .addLitePalTags(EnumTag.INTENSIONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The higher we are placed, the more humbly we should walk.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.PLACED.getTag())
                                .addLitePalTags(EnumTag.HUMBLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Any man can make mistakes, but only an idiot persists in his error.", false, true))
                                .addLitePalTags(EnumTag.IDIOT.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you have a garden and a library, you have everything you need.", false, true))
                                .addLitePalTags(EnumTag.GARDENING.getTag())
                                .addLitePalTags(EnumTag.LIBRARY.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Silence is one of the great arts of conversation.", false, true))
                                .addLitePalTags(EnumTag.SILENCE.getTag())
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.ARTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The safety of the people shall be the highest law.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.LEGAL.getTag())
                                .addLitePalTags(EnumTag.HIGHEST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Gratitude is not only the greatest of virtues, but the parent of all the others.", false, true))
                                .addLitePalTags(EnumTag.GRATITUDE.getTag())
                                .addLitePalTags(EnumTag.THANKFUL.getTag())
                                .addLitePalTags(EnumTag.PARENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The life of the dead is placed in the memory of the living.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.PLACED.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.MARILYN_MONROE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's better to be unhappy alone than unhappy with someone - so far.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.UNHAPPY.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Success makes so many people hate you. I wish it wasn't that way. It would be wonderful to enjoy success without seeing envy in the eyes of those around you.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.ENVY.getTag())
                                .addLitePalTags(EnumTag.I_WISH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Experts on romance say for a happy marriage there has to be more than a passionate love. For a lasting union, they insist, there must be a genuine liking for each other. Which, in my book, is a good definition for friendship.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ANNIVERSARY.getTag())
                                .addLitePalTags(EnumTag.ROMANCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We are all of us stars, and we deserve to twinkle.", false, true))
                                .addLitePalTags(EnumTag.STARS.getTag())
                                .addLitePalTags(EnumTag.DESERVE.getTag())
                                .addLitePalTags(EnumTag.TWINKLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I restore myself when I'm alone.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.RESTORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Give a girl the right shoes, and she can conquer the world.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.SHE.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Imperfection is beauty, madness is genius and it's better to be absolutely ridiculous than absolutely boring.", false, true))
                                .addLitePalTags(EnumTag.GENIUS.getTag())
                                .addLitePalTags(EnumTag.BORING.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am good, but not an angel. I do sin, but I am not the devil. I am just a small girl in a big world trying to find someone to love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I've never dropped anyone I believed in.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.ANYONE.getTag())
                                .addLitePalTags(EnumTag.DROPPED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm selfish, impatient, and a little insecure. I make mistakes, I'm out of control, and at times hard to handle. But if you can't handle me at my worst, then you sure as hell don't deserve me at my best.", false, true))
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.MISTAKES.getTag())
                                .addLitePalTags(EnumTag.HELL.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.NAPOLEON_BONAPARTE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You must not fight too often with one enemy, or you will teach him all your art of war.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A leader is a dealer in hope.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.DEALER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Death is nothing, but to live defeated and inglorious is to die daily.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.DEFEATED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never interrupt your enemy when he is making a mistake.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.MISTAKE.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Women are nothing but machines for producing children.", false, true))
                                .addLitePalTags(EnumTag.CHILDREN.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.PRODUCING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Impossible is a word to be found only in the dictionary of fools.", false, true))
                                .addLitePalTags(EnumTag.DICTIONARY.getTag())
                                .addLitePalTags(EnumTag.FOUND.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Great ambition is the passion of a great character. Those endowed with it may perform very good or very bad acts. All depends on the principles which direct them.", false, true))
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A soldier will fight long and hard for a bit of colored ribbon.", false, true))
                                .addLitePalTags(EnumTag.PATRIOTISM.getTag())
                                .addLitePalTags(EnumTag.SOLDIER.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you want a thing done well, do it yourself.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.WELL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In politics stupidity is not a handicap.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.STUPIDITY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.NAPOLEON_HILL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("First comes thought; then organization of that thought, into ideas and plans; then transformation of those plans into reality. The beginning, as you will observe, is in your imagination.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.BEGINNING.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you cannot do great things, do small things in a great way.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.SMALL_THINGS.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Effort only fully releases its reward after a person refuses to quit.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.REWARD.getTag())
                                .addLitePalTags(EnumTag.PERSON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Victory is always possible for the person who refuses to stop fighting.", false, true))
                                .addLitePalTags(EnumTag.STOP.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.PERSON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The starting point of all achievement is desire.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.ACHIEVEMENT.getTag())
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Your big opportunity may be right where you are now.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Education comes from within; you get it by struggle and effort and thought.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.WITHIN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Great achievement is usually born of great sacrifice, and is never the result of selfishness.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.RESULT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Patience, persistence and perspiration make an unbeatable combination for success.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.PATIENCE.getTag())
                                .addLitePalTags(EnumTag.MAKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Strength and growth come only through continuous effort and struggle.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.NAS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I want to have fun. It's a beautiful life. You learn, you win, you lose, but you get up.", false, true))
                                .addLitePalTags(EnumTag.LEARN.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.HAVE_FUN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Once you make it to your point of making it, you'll appreciate the struggle.", false, true))
                                .addLitePalTags(EnumTag.APPRECIATE.getTag())
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .addLitePalTags(EnumTag.ONCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I just enjoy life now. I just enjoy every morning I get to wake up.", false, true))
                                .addLitePalTags(EnumTag.NOW.getTag())
                                .addLitePalTags(EnumTag.GET.getTag())
                                .addLitePalTags(EnumTag.WAKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The flaws, the mistakes I make - that's the real me.", false, true))
                                .addLitePalTags(EnumTag.MISTAKES.getTag())
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.FLAWS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Your look reflects what's happening in your mind. You gotta have some swag to you.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.GOTTA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You can't please everybody. You'd be crazy if you're trying to. So take some time out to do some things for yourself.", false, true))
                                .addLitePalTags(EnumTag.PLEASE.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("With age comes common sense and wisdom.", false, true))
                                .addLitePalTags(EnumTag.AGE.getTag())
                                .addLitePalTags(EnumTag.SENSE.getTag())
                                .addLitePalTags(EnumTag.COMMON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Working with great people makes you great; you learn a lot and it also gives you the experience and confidence to move on with your own career.", false, true))
                                .addLitePalTags(EnumTag.LEARN.getTag())
                                .addLitePalTags(EnumTag.CAREER.getTag())
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't want any title. I just say what I say, and hopefully somebody gets it, man. I'm not perfect, and I'm just here and trying to make a dollar, and being real at the same time, you know?", false, true))
                                .addLitePalTags(EnumTag.PERFECT.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.BEING_REAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you're a teenager, you want to meet a lot of girls - you want to get the most girls. You don't know anything about respect; you don't know anything about being faithful and loyal to your girlfriend.", false, true))
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.LOYAL.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.NEIL_ARMSTRONG.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Well, I think we tried very hard not to be overconfident, because when you get overconfident, that's when something snaps up and bites you.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.SNAPS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Houston, Tranquillity Base here. The Eagle has landed.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.TRANQUILLITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It suddenly struck me that that tiny pea, pretty and blue, was the Earth. I put up my thumb and shut one eye, and my thumb blotted out the planet Earth. I didn't feel like a giant. I felt very, very small.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.SHUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The Eagle has landed.", false, true))
                                .addLitePalTags(EnumTag.EAGLE.getTag())
                                .addLitePalTags(EnumTag.LANDED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The important achievement of Apollo was demonstrating that humanity is not forever chained to this planet and our visions go rather further than that and our opportunities are unlimited.", false, true))
                                .addLitePalTags(EnumTag.ACHIEVEMENT.getTag())
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think we're going to the moon because it's in the nature of the human being to face challenges. It's by the nature of his deep inner soul... we're required to do these things just as salmon swim upstream.", false, true))
                                .addLitePalTags(EnumTag.DEEP.getTag())
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I believe every human has a finite number of heartbeats. I don't intend to waste any of mine.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.WASTE.getTag())
                                .addLitePalTags(EnumTag.MINE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Research is creating new knowledge.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.CREATING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("That's one small step for a man, one giant leap for mankind.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.MANKIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Mystery creates wonder and wonder is the basis of man's desire to understand.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.MYSTERY.getTag())
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.NEIL_DEGRASSE_TYSON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We are part of this universe; we are in this universe, but perhaps more important than both of those facts, is that the universe is in us.", false, true))
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.PERHAPS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Ever since the Industrial Revolution, investments in science and technology have proved to be reliable engines of economic growth. If homegrown interest in those fields is not regenerated soon, the comfortable lifestyle to which Americans have become accustomed will draw to a rapid close.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE_AND_TECHNOLOGY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Perhaps we've never been visited by aliens because they have looked upon Earth and decided there's no sign of intelligent life.", false, true))
                                .addLitePalTags(EnumTag.SIGN.getTag())
                                .addLitePalTags(EnumTag.INTELLIGENT_LIFE.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Rational thoughts never drive people's creativity the way emotions do.", false, true))
                                .addLitePalTags(EnumTag.EMOTIONS.getTag())
                                .addLitePalTags(EnumTag.THOUGHTS.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Once you have an innovation culture, even those who are not scientists or engineers - poets, actors, journalists - they, as communities, embrace the meaning of what it is to be scientifically literate. They embrace the concept of an innovation culture. They vote in ways that promote it. They don't fight science and they don't fight technology.", false, true))
                                .addLitePalTags(EnumTag.CONCEPT.getTag())
                                .addLitePalTags(EnumTag.JOURNALISTS.getTag())
                                .addLitePalTags(EnumTag.WAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no greater education than one that is self-driven.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.GREATER.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If your ego starts out, 'I am important, I am big, I am special,' you're in for some disappointments when you look around at what we've discovered about the universe. No, you're not big. No, you're not. You're small in time and in space. And you have this frail vessel called the human body that's limited on Earth.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Even with all our technology and the inventions that make modern life so much easier than it once was, it takes just one big natural disaster to wipe all that away and remind us that, here on Earth, we're still at the mercy of nature.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The Universe is under no obligation to make sense to you.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getTag())
                                .addLitePalTags(EnumTag.UNIVERSE.getTag())
                                .addLitePalTags(EnumTag.OBLIGATION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Humans aren't as good as we should be in our capacity to empathize with feelings and thoughts of others, be they humans or other animals on Earth. So maybe part of our formal education should be training in empathy. Imagine how different the world would be if, in fact, that were 'reading, writing, arithmetic, empathy.'", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.FACT.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.OSCAR_WILDE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Keep love in your heart. A life without it is like a sunless garden when the flowers are dead.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.FLOWERS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you are not too long, I will wait here for you all my life.", false, true))
                                .addLitePalTags(EnumTag.ROMANTIC.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Men always want to be a woman's first love - women like to be a man's last romance.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.MEN.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Women are made to be loved, not understood.", false, true))
                                .addLitePalTags(EnumTag.WOMEN.getTag())
                                .addLitePalTags(EnumTag.LOVED.getTag())
                                .addLitePalTags(EnumTag.MADE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("True friends stab you in the front.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.TRUE_FRIENDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Experience is simply the name we give our mistakes.", false, true))
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.NAME.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Success is a science; if you have the conditions, you get the result.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.RESULT.getTag())
                                .addLitePalTags(EnumTag.SUCCESS_IS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I can resist everything except temptation.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.TEMPTATION.getTag())
                                .addLitePalTags(EnumTag.RESIST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Memory... is the diary that we all carry about with us.", false, true))
                                .addLitePalTags(EnumTag.MEMORY.getTag())
                                .addLitePalTags(EnumTag.DIARY.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A dreamer is one who can only find his way by moonlight, and his punishment is that he sees the dawn before the rest of the world.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.REST.getTag())
                                .addLitePalTags(EnumTag.DREAMER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.OJ_SIMPSON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The day you take complete responsibility for yourself, the day you stop making any excuses, that's the day you start to the top.", false, true))
                                .addLitePalTags(EnumTag.START.getTag())
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .addLitePalTags(EnumTag.ANY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I didn't beat her. I just pushed her out of bed.", false, true))
                                .addLitePalTags(EnumTag.BED.getTag())
                                .addLitePalTags(EnumTag.HER.getTag())
                                .addLitePalTags(EnumTag.BEAT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My NFL pension can barely pay my son's tuition. You know, it's very little money.", false, true))
                                .addLitePalTags(EnumTag.TUITION.getTag())
                                .addLitePalTags(EnumTag.PAY.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I really have reached a point where I can write a book about all of this.", false, true))
                                .addLitePalTags(EnumTag.BOOK.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .addLitePalTags(EnumTag.REACHED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I believe in the jury system.", false, true))
                                .addLitePalTags(EnumTag.BELIEVE.getTag())
                                .addLitePalTags(EnumTag.JURY.getTag())
                                .addLitePalTags(EnumTag.SYSTEM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think I've been a great citizen.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.CITIZEN.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I've done my time. I've done it as well and as respectfully as I think anyone can.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.MY_TIME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nicole will come up in conversations where it's in a part of the conversation. Or we may be somewhere and I would tell some story about their mother and I. You know, we always honor her birthday.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.PART.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I could not tell you the date of my mother's death. I could not tell you the date of my dad's death. These are not dates that I find significant.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.DATE.getTag())
                                .addLitePalTags(EnumTag.COULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I had some problems with fidelity in my life but pretty much got along with everybody.", false, true))
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.PRETTY.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.O_SHEA_JACKSON_JR.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Have confidence in everything. No matter what it is that you're doing, know that you can do it better than anyone.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.YOU_CAN_DO_IT.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The stress and turmoil that my father had to go through at a young age to make sure that I didn't have the same trials and tribulations, I couldn't be more grateful.", false, true))
                                .addLitePalTags(EnumTag.STRESS.getTag())
                                .addLitePalTags(EnumTag.GRATEFUL.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My parents wouldn't have sent me out into the world with wool over my eyes. You have to be aware, or you'll be swallowed.", false, true))
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.WOOL.getTag())
                                .addLitePalTags(EnumTag.SENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's always extremities when you are a young black male dealing with law enforcement.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.DEALING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Being on set with my dad - that's so cool. People always ask me if that made me nervous, but it's the same element when you're a kid - when your parents come in the auditorium for those school performances. It calms you.", false, true))
                                .addLitePalTags(EnumTag.AUDITORIUM.getTag())
                                .addLitePalTags(EnumTag.COOL_PEOPLE.getTag())
                                .addLitePalTags(EnumTag.DAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("This entire cast, N.W.A, was an all-star group, and I really feel like people are going to look at 'Straight Outta Compton' years from now like this was an all-star cast.", false, true))
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When, you know, when you're playing basketball, you have to have confidence in your moves if they're gonna work.", false, true))
                                .addLitePalTags(EnumTag.BASKETBALL.getTag())
                                .addLitePalTags(EnumTag.GONNA.getTag())
                                .addLitePalTags(EnumTag.MOVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Music is always there, but if you're asking me my first love, it's film.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.O_WINSTON_LINK.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I never expected that. I didn't aim for that. All I wanted was to get some nice pictures of trains at night.", false, true))
                                .addLitePalTags(EnumTag.AIM.getTag())
                                .addLitePalTags(EnumTag.EXPECTED.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You can show me some stick ice cream and I can tell you if it's good or not just looking at it.", false, true))
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .addLitePalTags(EnumTag.SHOW.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I was strong and healthy and I was enjoying what I was doing.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.HEALTHY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I was one man and I tackled a big railroad. I did the best I could.", false, true))
                                .addLitePalTags(EnumTag.RAILROAD.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.COULD.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.OBIAGELI_EZEKWESILI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Social media is simply a tool that facilitates actions.", false, true))
                                .addLitePalTags(EnumTag.MEDIA.getTag())
                                .addLitePalTags(EnumTag.SOCIAL.getTag())
                                .addLitePalTags(EnumTag.ACTIONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My mum was a quintessential businesswoman. She taught me problem-solving. She can solve any problem.", false, true))
                                .addLitePalTags(EnumTag.PROBLEM.getTag())
                                .addLitePalTags(EnumTag.SHE.getTag())
                                .addLitePalTags(EnumTag.QUINTESSENTIAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I would like to see a lot of people more involved in practical solutions to practical problems. Women have got to the point where we can turn the world upside down.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.PRACTICAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In terms of competitiveness of new global environment, Kenya will have absolutely no choice but to tackle the most important constraint to its development: it has been corruption.", false, true))
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.GLOBAL_ENVIRONMENT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There's absolutely nothing that the God I believe in cannot do.", false, true))
                                .addLitePalTags(EnumTag.ABSOLUTELY_NOTHING.getTag())
                                .addLitePalTags(EnumTag.CANNOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have always battled injustice. As a child, I used to fight on the side of my friends when boys terrorized them.", false, true))
                                .addLitePalTags(EnumTag.INJUSTICE.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.SIDE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("How can the cost of education be the cost of life? It is unacceptable; it is reprehensible that we have allowed it to fester.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.COST.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Do our children now have to choose between getting an education and dying? Some of us cannot move on and accept that kind of society.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.PLATO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Wise men speak because they have something to say; Fools because they have to say something.", false, true))
                                .addLitePalTags(EnumTag.COMMUNICATION.getTag())
                                .addLitePalTags(EnumTag.WISE.getTag())
                                .addLitePalTags(EnumTag.MEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Music is a moral law. It gives soul to the universe, wings to the mind, flight to the imagination, and charm and gaiety to life and to everything.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.FLIGHT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Human behavior flows from three main sources: desire, emotion, and knowledge.", false, true))
                                .addLitePalTags(EnumTag.KNOWLEDGE.getTag())
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .addLitePalTags(EnumTag.EMOTION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We can easily forgive a child who is afraid of the dark; the real tragedy of life is when men are afraid of the light.", false, true))
                                .addLitePalTags(EnumTag.FEAR.getTag())
                                .addLitePalTags(EnumTag.FORGIVE.getTag())
                                .addLitePalTags(EnumTag.REAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You can discover more about a person in an hour of play than in a year of conversation.", false, true))
                                .addLitePalTags(EnumTag.RELATIONSHIP.getTag())
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.DISCOVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Thinking: the talking of the soul with itself.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.ITSELF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One of the penalties for refusing to participate in politics is that you end up being governed by your inferiors.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.REFUSING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Courage is knowing what not to fear.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.FEAR.getTag())
                                .addLitePalTags(EnumTag.KNOWING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Dictatorship naturally arises out of democracy, and the most aggravated form of tyranny and slavery out of the most extreme liberty.", false, true))
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .addLitePalTags(EnumTag.NATURALLY.getTag())
                                .addLitePalTags(EnumTag.FORM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Ignorance, the root and stem of all evil.", false, true))
                                .addLitePalTags(EnumTag.EVIL.getTag())
                                .addLitePalTags(EnumTag.IGNORANCE.getTag())
                                .addLitePalTags(EnumTag.ROOT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.PABLO_PICASSO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Our goals can only be reached through a vehicle of a plan, in which we must fervently believe, and upon which we must vigorously act. There is no other route to success.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Action is the foundational key to all success.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.KEY.getTag())
                                .addLitePalTags(EnumTag.FOUNDATIONAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Youth has no age.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getTag())
                                .addLitePalTags(EnumTag.AGE.getTag())
                                .addLitePalTags(EnumTag.YOUTH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everything you can imagine is real.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.REAL.getTag())
                                .addLitePalTags(EnumTag.IMAGINE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Who sees the human face correctly: the photographer, the mirror, or the painter?", false, true))
                                .addLitePalTags(EnumTag.FACE.getTag())
                                .addLitePalTags(EnumTag.PAINTER.getTag())
                                .addLitePalTags(EnumTag.CORRECTLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Colors, like features, follow the changes of the emotions.", false, true))
                                .addLitePalTags(EnumTag.EMOTIONS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.FEATURES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It takes a long time to become young.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getTag())
                                .addLitePalTags(EnumTag.LONG_TIME.getTag())
                                .addLitePalTags(EnumTag.YOUNG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Some painters transform the sun into a yellow spot, others transform a yellow spot into the sun.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.TRANSFORM.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All children are artists. The problem is how to remain an artist once he grows up.", false, true))
                                .addLitePalTags(EnumTag.PROBLEM.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .addLitePalTags(EnumTag.GROWS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The purpose of art is washing the dust of daily life off our souls.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.DAILY_LIFE.getTag())
                                .addLitePalTags(EnumTag.WASHING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.PATRICK_HENRY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Is life so dear or peace so sweet as to be purchased at the price of chains and slavery? Forbid it, Almighty God! I know not what course others may take, but as for me, give me liberty, or give me death!", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.PATRIOTISM.getTag())
                                .addLitePalTags(EnumTag.CHAINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have but one lamp by which my feet are guided, and that is the lamp of experience.", false, true))
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The liberties of a people never were, nor ever will be, secure, when the transactions of their rulers may be concealed from them.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The distinctions between Virginians, Pennsylvanians, New Yorkers, and New Englanders are no more. I am not a Virginian but an American.", false, true))
                                .addLitePalTags(EnumTag.AMERICAN.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When the American spirit was in its youth, the language of America was different: Liberty, sir, was the primary object.", false, true))
                                .addLitePalTags(EnumTag.PATRIOTISM.getTag())
                                .addLitePalTags(EnumTag.LIBERTY.getTag())
                                .addLitePalTags(EnumTag.SPIRIT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I know of no way of judging the future but by the past.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.PAST.getTag())
                                .addLitePalTags(EnumTag.KNOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Perfect freedom is as necessary to the health and vigor of commerce as it is to the health and vigor of citizenship.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.PERFECT_FREEDOM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For my part, whatever anguish of spirit it may cost, I am willing to know the whole truth; to know the worst and provide for it.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .addLitePalTags(EnumTag.COST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is natural to indulge in the illusions of hope. We are apt to shut our eyes to that siren until she allures us to our death.", false, true))
                                .addLitePalTags(EnumTag.NATURAL.getTag())
                                .addLitePalTags(EnumTag.SHUT.getTag())
                                .addLitePalTags(EnumTag.SIREN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Shall we, who have laid the proud British lion at our feet, now be afraid of his whelps?", false, true))
                                .addLitePalTags(EnumTag.PROUD.getTag())
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .addLitePalTags(EnumTag.LAID.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.PAULO_COELHO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Waiting is painful. Forgetting is painful. But not knowing which to do is the worse kind of suffering.", false, true))
                                .addLitePalTags(EnumTag.WAITING.getTag())
                                .addLitePalTags(EnumTag.FORGETTING.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No one can lie, no one can hide anything, when he looks directly into someone's eyes.", false, true))
                                .addLitePalTags(EnumTag.SOMEONE.getTag())
                                .addLitePalTags(EnumTag.HIDE.getTag())
                                .addLitePalTags(EnumTag.LOOKS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you want something, all the universe conspires in helping you to achieve it.", false, true))
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.ACHIEVE.getTag())
                                .addLitePalTags(EnumTag.HELPING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you are enthusiastic about what you do, you feel this positive energy. It's very simple.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I can control my destiny, but not my fate. Destiny means there are opportunities to turn right or left, but fate is a one-way street. I believe we all have the choice as to whether we fulfil our destiny, but our fate is sealed.", false, true))
                                .addLitePalTags(EnumTag.DESTINY.getTag())
                                .addLitePalTags(EnumTag.FATE.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Remember your dreams and fight for them. You must know what you want from life. There is just one thing that makes your dream become impossible: the fear of failure.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getTag())
                                .addLitePalTags(EnumTag.YOUR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life was always a matter of waiting for the right moment to act.", false, true))
                                .addLitePalTags(EnumTag.WAITING.getTag())
                                .addLitePalTags(EnumTag.ACT.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Culture makes people understand each other better. And if they understand each other better in their soul, it is easier to overcome the economic and political barriers. But first they have to understand that their neighbour is, in the end, just like them, with the same problems, the same questions.", false, true))
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.OVERCOME.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be brave. Take risks. Nothing can substitute experience.", false, true))
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.RISKS.getTag())
                                .addLitePalTags(EnumTag.TAKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have seen many storms in my life. Most storms have caught me by surprise, so I had to learn very quickly to look further and understand that I am not capable of controlling the weather, to exercise the art of patience and to respect the fury of nature.", false, true))
                                .addLitePalTags(EnumTag.PATIENCE.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.CAUGHT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.PELE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Success is no accident. It is hard work, perseverance, learning, studying, sacrifice and most of all, love of what you are doing or learning to do.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.STUDYING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Enthusiasm is everything. It must be taut and vibrating like a guitar string.", false, true))
                                .addLitePalTags(EnumTag.ENTHUSIASM.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.VIBRATING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am constantly being asked about individuals. The only way to win is as a team. Football is not about one or two or three star players.", false, true))
                                .addLitePalTags(EnumTag.STAR.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .addLitePalTags(EnumTag.PLAYERS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you are young, you do a lot of stupid things.", false, true))
                                .addLitePalTags(EnumTag.STUPID.getTag())
                                .addLitePalTags(EnumTag.YOUNG.getTag())
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Wherever you go, there are three icons that everyone knows: Jesus Christ, Pele and Coca-Cola.", false, true))
                                .addLitePalTags(EnumTag.EVERYONE.getTag())
                                .addLitePalTags(EnumTag.CHRIST.getTag())
                                .addLitePalTags(EnumTag.GO.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If I pass away one day, I am happy because I tried to do my best. My sport allowed me to do so much because it's the biggest sport in the world.", false, true))
                                .addLitePalTags(EnumTag.I_AM_HAPPY.getTag())
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .addLitePalTags(EnumTag.PASS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I was a footballer, I surrounded myself with footballers. We were all friends. But in Brasilia you don't know who your friends are. It can be a dangerous place.", false, true))
                                .addLitePalTags(EnumTag.FOOTBALLERS.getTag())
                                .addLitePalTags(EnumTag.SURROUNDED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have to trust something that gives me power; I have to believe in something, but in my career I have a lot of moments I cannot explain with God.", false, true))
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.CAREER.getTag())
                                .addLitePalTags(EnumTag.EXPLAIN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everything on earth is a game. A passing thing. We all end up dead. We all end up the same, don't we?", false, true))
                                .addLitePalTags(EnumTag.GAME.getTag())
                                .addLitePalTags(EnumTag.EARTH.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The World Cup is a very complicated tournament - six games, seven if you make it to the final - and maybe if you lose one game you're out, even if you're the best.", false, true))
                                .addLitePalTags(EnumTag.GAME.getTag())
                                .addLitePalTags(EnumTag.WORLD_CUP.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.Q_ORIANKA_KILCHER.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love the power of celebrity because you can give voice to the voiceless.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.VOICE.getTag())
                                .addLitePalTags(EnumTag.CELEBRITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You need people around you that care about you and are thinking about you in your best interest. And keep your mind straight.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I really identified with Pocahontas' struggles as a young woman trying to identify herself in a modern, changing world and trying to stay true to her culture and heritage.", false, true))
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.YOUNG.getTag())
                                .addLitePalTags(EnumTag.IDENTIFY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I honestly think I was an Indian living in the time of the Trail of Tears. Something like that. Every time I read books about back then, I get so devastatingly sad, so, so... I feel such a deep connection to it.", false, true))
                                .addLitePalTags(EnumTag.DEEP.getTag())
                                .addLitePalTags(EnumTag.TEARS.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My birthday is Feb. 11, and I'm both excited and not excited by it. You'll never be 15 again, and you really, really need to savor every day like it's your last.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getTag())
                                .addLitePalTags(EnumTag.LAST.getTag())
                                .addLitePalTags(EnumTag.EXCITED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Portraying Pocahontas' story well was important to me because she was a real person and these were real events in her life.", false, true))
                                .addLitePalTags(EnumTag.REAL_PERSON.getTag())
                                .addLitePalTags(EnumTag.PORTRAYING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I just want to learn even more about my culture and about the Algonquin culture because I fell in love with Pocahontas and the Algonquin tribe.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LEARN.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Yes, I'm proud to be indigenous. I'm half-Quechua-Huachipaeri from Peru.", false, true))
                                .addLitePalTags(EnumTag.PROUD.getTag())
                                .addLitePalTags(EnumTag.YES.getTag())
                                .addLitePalTags(EnumTag.INDIGENOUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My father's Peruvian! I actually have a lot of family in Cuzco. I'm also Swiss, Alaskan, French, Spanish and Italian.", false, true))
                                .addLitePalTags(EnumTag.FATHER.getTag())
                                .addLitePalTags(EnumTag.SPANISH.getTag())
                                .addLitePalTags(EnumTag.SWISS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I feel like, as a celebrity, I have a responsibility to tell important stories.", false, true))
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.CELEBRITY.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.Q_TIP.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If there's a 'Cruel Summer' then there's got to be a 'Cruel Winter,' right? That's all I'm saying.", false, true))
                                .addLitePalTags(EnumTag.WINTER.getTag())
                                .addLitePalTags(EnumTag.CRUEL.getTag())
                                .addLitePalTags(EnumTag.THEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I definitely move to the beat of my own drummer and man, he's not playing something anyone has heard before. It's pretty cool, though. Pretty cool.", false, true))
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .addLitePalTags(EnumTag.PRETTY.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One thing the music industry has taught me is to manage my expectations.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.MUSIC_INDUSTRY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I do try to speak of positive things. I still try to, like, present two sides of the story, and I do try to relate to life in a 360 degree and not be one-dimensional. But by all means, manage expectations.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.STILL.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't really listen to my work. If I have to DJ and I play something, I hear it. But I don't sit quietly and listen to my work; I'm always off to do the next thing.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.NEXT.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I read the Koran and it appealed to me. At the time I was agnostic and it really breathed spiritually back into me. For me it's really a cushion; it's cool, I'm cool with it.", false, true))
                                .addLitePalTags(EnumTag.COOL.getTag())
                                .addLitePalTags(EnumTag.READ.getTag())
                                .addLitePalTags(EnumTag.KORAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I sang in church, but growing up in the neighborhood, music was more of an expression of relief or entertainment.", false, true))
                                .addLitePalTags(EnumTag.GROW_UP.getTag())
                                .addLitePalTags(EnumTag.GROWING.getTag())
                                .addLitePalTags(EnumTag.SANG.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You know, I hate to sound self-involved, but I feel like I haven't peaked yet.", false, true))
                                .addLitePalTags(EnumTag.SOUND.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.PEAKED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I feel like Obama in a way. His idea that hope means not shrinking from a fight; it's the courage to reach for something. My music is that. Those are principles I try to embody.", false, true))
                                .addLitePalTags(EnumTag.REACH.getTag())
                                .addLitePalTags(EnumTag.IDEA.getTag())
                                .addLitePalTags(EnumTag.OBAMA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In 1999, I just came out of putting out the song 'Vivrant Thing' and 'Breathe and Stop' off the 'Amplified' album. Clive Davis signed me to Arista.", false, true))
                                .addLitePalTags(EnumTag.SONG.getTag())
                                .addLitePalTags(EnumTag.ALBUM.getTag())
                                .addLitePalTags(EnumTag.PUTTING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.QANDEEL_BALOCH.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Love me or hate me, both are in my favour. If you love me, I will always be in your heart, and if you hate me, I will be in your mind.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I did a job. I completed my Matric and my Bachelors. I did a marketing job. I worked as a bus hostess. I did a lot of jobs; I struggled a lot. I got out from there. The first thing I did when I got out of Darul Aman was my Matric. Then I did my Bachelors privately; I kept doing it.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.BUS.getTag())
                                .addLitePalTags(EnumTag.BACHELORS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("At least international media can see how I am trying to change the typical orthodox mindset of people who don't want to come out of their shells of false beliefs and old practices.", false, true))
                                .addLitePalTags(EnumTag.MEDIA.getTag())
                                .addLitePalTags(EnumTag.OUT.getTag())
                                .addLitePalTags(EnumTag.LEAST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't know how many girls have felt support through my persona. I'm a girl power. So many girls tell me I'm a girl power, and yes, I am.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.YES.getTag())
                                .addLitePalTags(EnumTag.PERSONA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am not hungry for roles on TV or in films. I am happy being a social media sensation.", false, true))
                                .addLitePalTags(EnumTag.I_AM_HAPPY.getTag())
                                .addLitePalTags(EnumTag.TV.getTag())
                                .addLitePalTags(EnumTag.FILMS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I've fought with everyone . And now I have become so headstrong that I only do what I want.", false, true))
                                .addLitePalTags(EnumTag.EVERYONE.getTag())
                                .addLitePalTags(EnumTag.NOW.getTag())
                                .addLitePalTags(EnumTag.FOUGHT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing is good in this society. This patriarchal society is bad.", false, true))
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.BAD.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's time to bring a change because the world is changing. Let's open our minds and live in present.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.BRING.getTag())
                                .addLitePalTags(EnumTag.CHANGING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It was my wish since I was a child to become something, to be able to stand on my own two feet, to do something for myself.", false, true))
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .addLitePalTags(EnumTag.MY_OWN.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Pakistan is a free country, so according to me, in a free country, it's every right of the citizen to live the way they wish.", false, true))
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.CITIZEN.getTag())
                                .addLitePalTags(EnumTag.ACCORDING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.QUAVO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("History repeats itself. So you might wanna pay attention.", false, true))
                                .addLitePalTags(EnumTag.MIGHT.getTag())
                                .addLitePalTags(EnumTag.ITSELF.getTag())
                                .addLitePalTags(EnumTag.REPEATS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'd open doors for anyone who opens doors for me.", false, true))
                                .addLitePalTags(EnumTag.ME.getTag())
                                .addLitePalTags(EnumTag.DOORS.getTag())
                                .addLitePalTags(EnumTag.ANYONE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Wealth is just consistency... I don't want to be rich. I want to be wealthy.", false, true))
                                .addLitePalTags(EnumTag.WEALTH.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.WEALTHY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Being spontaneous is a blessing.", false, true))
                                .addLitePalTags(EnumTag.BLESSING.getTag())
                                .addLitePalTags(EnumTag.BEING.getTag())
                                .addLitePalTags(EnumTag.SPONTANEOUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you do it yourself, you feel better.", false, true))
                                .addLitePalTags(EnumTag.YOURSELF.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The people we grew up watching and listening to - Outkast, Gucci Mane, Hot Boys, Lil Wayne, Master P - all that type of stuff, we took those styles and made it our own.", false, true))
                                .addLitePalTags(EnumTag.LISTENING.getTag())
                                .addLitePalTags(EnumTag.TOOK.getTag())
                                .addLitePalTags(EnumTag.LIL_WAYNE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You gotta give everybody a new trend a new wave, something new to do.", false, true))
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm just willing to try different things. But you gotta keep it all making sense.", false, true))
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .addLitePalTags(EnumTag.GOTTA.getTag())
                                .addLitePalTags(EnumTag.WILLING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We just feel like history repeats itself. You ain't never going to see nothing brand new; you're only going to see when records are broken. And we're here to just set records and set trends and follow the footsteps that have been shown to us.", false, true))
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.REPEATS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'll tell ya, when you open up that can of dab, it's always fresh.", false, true))
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.YA.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.QUEEN_CHRISTINA.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is necessary to try to pass one's self always; this occupation ought to last as long as life.", false, true))
                                .addLitePalTags(EnumTag.LAST.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.OCCUPATION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Fools are more to be feared than the wicked.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.FEARED.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ROBIN_WILLIAMS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No matter what people tell you, words and ideas can change the world.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm sorry, if you were right, I'd agree with you.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.SORRY.getTag())
                                .addLitePalTags(EnumTag.WERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If women ran the world we wouldn't have wars, just intense negotiations every 28 days.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.DAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I used to think that the worst thing in life was to end up alone. It's not. The worst thing in life is to end up with people who make you feel alone.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.WORST_THING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Why do they call it rush hour when nothing moves?", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.CALL.getTag())
                                .addLitePalTags(EnumTag.HOUR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You're only given a little spark of madness. You mustn't lose it.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.SPARK.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never pick a fight with an ugly person, they've got nothing to lose.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.PERSON.getTag())
                                .addLitePalTags(EnumTag.PICK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Spring is nature's way of saying, 'Let's party!'", false, true))
                                .addLitePalTags(EnumTag.SPRING.getTag())
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.SAYING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People say satire is dead. It's not dead; it's alive and living in the White House.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.LIVING.getTag())
                                .addLitePalTags(EnumTag.ALIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For me, comedy starts as a spew, a kind of explosion, and then you sculpt it from there, if at all. It comes out of a deeper, darker side. Maybe it comes from anger, because I'm outraged by cruel absurdities, the hypocrisy that exists everywhere, even within yourself, where it's hardest to see.", false, true))
                                .addLitePalTags(EnumTag.ANGER.getTag())
                                .addLitePalTags(EnumTag.MAYBE.getTag())
                                .addLitePalTags(EnumTag.SCULPT.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.RUMI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Let the beauty of what you love be what you do.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.WHAT_YOU_LOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everything that is made beautiful and fair and lovely is made for the eye of one who sees.", false, true))
                                .addLitePalTags(EnumTag.BEAUTIFUL.getTag())
                                .addLitePalTags(EnumTag.EYE.getTag())
                                .addLitePalTags(EnumTag.LOVELY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We are born of love; Love is our mother.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.MOTHER.getTag())
                                .addLitePalTags(EnumTag.BORN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Beauty surrounds us, but usually we need to be walking in a garden to know it.", false, true))
                                .addLitePalTags(EnumTag.BEAUTIFUL.getTag())
                                .addLitePalTags(EnumTag.WALKING.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Grief can be the garden of compassion. If you keep your heart open through everything, your pain can become your greatest ally in your life's search for love and wisdom.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.PAIN.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't grieve. Anything you lose comes round in another form.", false, true))
                                .addLitePalTags(EnumTag.SAD.getTag())
                                .addLitePalTags(EnumTag.ROUND.getTag())
                                .addLitePalTags(EnumTag.FORM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The garden of love is green without limit and yields many fruits other than sorrow or joy. Love is beyond either condition: without spring, without autumn, it is always fresh.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everyone has been made for some particular work, and the desire for that work has been put in every heart.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("May this marriage be full of laughter, our every day in paradise.", false, true))
                                .addLitePalTags(EnumTag.MARRIAGE.getTag())
                                .addLitePalTags(EnumTag.EVERY_DAY.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Listen! Clam up your mouth and be silent like an oyster shell, for that tongue of yours is the enemy of the soul, my friend. When the lips are silent, the heart has a hundred tongues.", false, true))
                                .addLitePalTags(EnumTag.SILENT.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.HUNDRED.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.RALPH_WALDO_EMERSON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Adopt the pace of nature: her secret is patience.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.HER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Never lose an opportunity of seeing anything beautiful, for beauty is God's handwriting.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.BEAUTIFUL.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Love of beauty is taste. The creation of beauty is art.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.BEAUTY.getTag())
                                .addLitePalTags(EnumTag.ART.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For every minute you remain angry, you give up sixty seconds of peace of mind.", false, true))
                                .addLitePalTags(EnumTag.ANGER.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.SIXTY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Write it on your heart that every day is the best day in the year.", false, true))
                                .addLitePalTags(EnumTag.NEW_YEARS.getTag())
                                .addLitePalTags(EnumTag.EVERY_DAY.getTag())
                                .addLitePalTags(EnumTag.YEAR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Do not go where the path may lead, go instead where there is no path and leave a trail.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.PATH.getTag())
                                .addLitePalTags(EnumTag.TRAIL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nature always wears the colors of the spirit.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.WEARS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What lies behind you and what lies in front of you, pales in comparison to what lies inside of you.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.LIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The first wealth is health.", false, true))
                                .addLitePalTags(EnumTag.HEALTH.getTag())
                                .addLitePalTags(EnumTag.WEALTH.getTag())
                                .addLitePalTags(EnumTag.FIRST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is one of the blessings of old friends that you can afford to be stupid with them.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.STUPID.getTag())
                                .addLitePalTags(EnumTag.AFFORD.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.RICHARD_BRANSON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Business opportunities are like buses, there's always another one coming.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("By putting the employee first, the customer effectively comes first by default, and in the end, the shareholder comes first by default as well.", false, true))
                                .addLitePalTags(EnumTag.WELL.getTag())
                                .addLitePalTags(EnumTag.DEFAULT.getTag())
                                .addLitePalTags(EnumTag.PUTTING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Starting your own business isn't just a job - it's a way of life.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .addLitePalTags(EnumTag.YOUR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("From my very first day as an entrepreneur, I've felt the only mission worth pursuing in business is to make people's lives better.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.PURSUING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Treat failure as a lesson on how not to approach achieving a goal, and then use that learning to improve your chances of success when you try again. Failure is only the end if you decide to stop.", false, true))
                                .addLitePalTags(EnumTag.GOAL.getTag())
                                .addLitePalTags(EnumTag.TREAT.getTag())
                                .addLitePalTags(EnumTag.USE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Fun is one of the most important - and underrated - ingredients in any successful venture. If you're not having fun, then it's probably time to call it quits and try something else.", false, true))
                                .addLitePalTags(EnumTag.THE_MOST_IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.HAVING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A passionate belief in your business and personal objectives can make all the difference between success and failure. If you aren't proud of what you're doing, why should anybody else be?", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.PROUD.getTag())
                                .addLitePalTags(EnumTag.PASSIONATE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Do not be embarrassed by your failures, learn from them and start again.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.LEARN.getTag())
                                .addLitePalTags(EnumTag.FAILURES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My attitude has always been, if you fall flat on your face, at least you're moving forward. All you have to do is get back up and try again.", false, true))
                                .addLitePalTags(EnumTag.FORWARD.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You don't learn to walk by following rules. You learn by doing, and by falling over.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getTag())
                                .addLitePalTags(EnumTag.FALLING.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.SOCRATES.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The only true wisdom is in knowing you know nothing.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.KNOWING.getTag())
                                .addLitePalTags(EnumTag.TRUE_WISDOM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To know, is to know that you know nothing. That is the meaning of true knowledge.", false, true))
                                .addLitePalTags(EnumTag.KNOWLEDGE.getTag())
                                .addLitePalTags(EnumTag.MEANING.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Our prayers should be for blessings in general, for God knows best what is good for us.", false, true))
                                .addLitePalTags(EnumTag.SAINT_PATRICKS_DAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I know that I am intelligent, because I know that I know nothing.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getTag())
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("He is richest who is content with the least, for content is the wealth of nature.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.WEALTH.getTag())
                                .addLitePalTags(EnumTag.LEAST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("True wisdom comes to each of us when we realize how little we understand about life, ourselves, and the world around us.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .addLitePalTags(EnumTag.TRUE_WISDOM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("By all means, marry. If you get a good wife, you'll become happy; if you get a bad one, you'll become a philosopher.", false, true))
                                .addLitePalTags(EnumTag.MARRIAGE.getTag())
                                .addLitePalTags(EnumTag.PHILOSOPHER.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be as you wish to seem.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.WISH.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Death may be the greatest of all human blessings.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.BLESSINGS.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Worthless people live only to eat and drink; people of worth eat and drink only to live.", false, true))
                                .addLitePalTags(EnumTag.EAT.getTag())
                                .addLitePalTags(EnumTag.WORTHLESS.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.SAINT_AUGUSTINE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Do you wish to rise? Begin by descending. You plan a tower that will pierce the clouds? Lay first the foundation of humility.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.LAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In the absence of justice, what is sovereignty but organized robbery?", false, true))
                                .addLitePalTags(EnumTag.JUSTICE.getTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getTag())
                                .addLitePalTags(EnumTag.ABSENCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Men go abroad to wonder at the heights of mountains, at the huge waves of the sea, at the long courses of the rivers, at the vast compass of the ocean, at the circular motions of the stars, and they pass by themselves without wondering.", false, true))
                                .addLitePalTags(EnumTag.WAVES.getTag())
                                .addLitePalTags(EnumTag.RIVERS.getTag())
                                .addLitePalTags(EnumTag.ABROAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What does love look like? It has the hands to help others. It has the feet to hasten to the poor and needy. It has eyes to see misery and want. It has the ears to hear the sighs and sorrows of men. That is what love looks like.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SYMPATHY.getTag())
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Patience is the companion of wisdom.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.PATIENCE.getTag())
                                .addLitePalTags(EnumTag.COMPANION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Punishment is justice for the unjust.", false, true))
                                .addLitePalTags(EnumTag.LEGAL.getTag())
                                .addLitePalTags(EnumTag.PUNISHMENT.getTag())
                                .addLitePalTags(EnumTag.UNJUST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Pray as though everything depended on God. Work as though everything depended on you.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.FAITH.getTag())
                                .addLitePalTags(EnumTag.THOUGH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Faith is to believe what you do not see; the reward of this faith is to see what you believe.", false, true))
                                .addLitePalTags(EnumTag.FAITH.getTag())
                                .addLitePalTags(EnumTag.REWARD.getTag())
                                .addLitePalTags(EnumTag.SEE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It was pride that changed angels into devils; it is humility that makes men as angels.", false, true))
                                .addLitePalTags(EnumTag.HUMILITY.getTag())
                                .addLitePalTags(EnumTag.ANGELS.getTag())
                                .addLitePalTags(EnumTag.DEVILS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The world is a book, and those who do not travel read only a page.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.READ.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.SIGMUND_FREUD.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Dreams are often most profound when they seem the most crazy.", false, true))
                                .addLitePalTags(EnumTag.CRAZY.getTag())
                                .addLitePalTags(EnumTag.PROFOUND.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We are never so defensless against suffering as when we love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Most people do not really want freedom, because freedom involves responsibility, and most people are frightened of responsibility.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .addLitePalTags(EnumTag.INVOLVES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Being entirely honest with oneself is a good exercise.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getTag())
                                .addLitePalTags(EnumTag.GOOD_EXERCISE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The interpretation of dreams is the royal road to a knowledge of the unconscious activities of the mind.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.UNCONSCIOUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The mind is like an iceberg, it floats with one-seventh of its bulk above water.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.FLOATS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Flowers are restful to look at. They have neither emotions nor conflicts.", false, true))
                                .addLitePalTags(EnumTag.GARDENING.getTag())
                                .addLitePalTags(EnumTag.FLOWERS.getTag())
                                .addLitePalTags(EnumTag.NOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I cannot think of any need in childhood as strong as the need for a father's protection.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getTag())
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Time spent with cats is never wasted.", false, true))
                                .addLitePalTags(EnumTag.CATS.getTag())
                                .addLitePalTags(EnumTag.PET.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Civilization began the first time an angry person cast a word instead of a rock.", false, true))
                                .addLitePalTags(EnumTag.ROCK.getTag())
                                .addLitePalTags(EnumTag.CIVILIZATION.getTag())
                                .addLitePalTags(EnumTag.CAST.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.SIMON_SINEK.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is a difference between listening and waiting for your turn to speak.", false, true))
                                .addLitePalTags(EnumTag.LISTENING.getTag())
                                .addLitePalTags(EnumTag.WAITING.getTag())
                                .addLitePalTags(EnumTag.SPEAK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leadership is a way of thinking, a way of acting and, most importantly, a way of communicating.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We can't all be good at everything. This is partly the logic behind having a team in the first place, so each role can be filled with the person best suited for that role and together, every job and every strength is covered.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .addLitePalTags(EnumTag.ROLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't quit. Never give up trying to build the world you can see, even if others can't see it. Listen to your drum and your drum only. It's the one that makes the sweetest sound.", false, true))
                                .addLitePalTags(EnumTag.SOUND.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .addLitePalTags(EnumTag.MAKES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The challenge of the unknown future is so much more exciting than the stories of the accomplished past.", false, true))
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.ACCOMPLISHED.getTag())
                                .addLitePalTags(EnumTag.STORIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Champions are not the ones who always win races - champions are the ones who get out there and try. And try harder the next time. And even harder the next time. 'Champion' is a state of mind. They are devoted. They compete to best themselves as much if not more than they compete to best others. Champions are not just athletes.", false, true))
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.NEXT.getTag())
                                .addLitePalTags(EnumTag.COMPETE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no decision that we can make that doesn't come with some sort of balance or sacrifice.", false, true))
                                .addLitePalTags(EnumTag.DECISION.getTag())
                                .addLitePalTags(EnumTag.BALANCE.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A leader's job is not to do the work for others, it's to help others figure out how to do it themselves, to get things done, and to succeed beyond what they thought possible.", false, true))
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.FIGURE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leadership is not about the next election, it's about the next generation.", false, true))
                                .addLitePalTags(EnumTag.ELECTION.getTag())
                                .addLitePalTags(EnumTag.GENERATION.getTag())
                                .addLitePalTags(EnumTag.NEXT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The strong bond of friendship is not always a balanced equation; friendship is not always about giving and taking in equal shares. Instead, friendship is grounded in a feeling that you know exactly who will be there for you when you need something, no matter what or when.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.STRONG.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.SOREN_KIERKEGAARD.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The highest and most beautiful things in life are not to be heard about, nor read about, nor seen but, if one will, are to be lived.", false, true))
                                .addLitePalTags(EnumTag.BEAUTIFUL_THINGS.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.READ.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Our life always expresses the result of our dominant thoughts.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.RESULT.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What is a poet? An unhappy person who conceals profound anguish in his heart but whose lips are so formed that as sighs and cries pass over them they sound like beautiful music.", false, true))
                                .addLitePalTags(EnumTag.POETRY.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.CRIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Face the facts of being what you are, for that is what changes what you are.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.CHANGES.getTag())
                                .addLitePalTags(EnumTag.FACE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Be that self which one truly is.", false, true))
                                .addLitePalTags(EnumTag.SELF.getTag())
                                .addLitePalTags(EnumTag.TRULY.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't forget to love yourself.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LOVE_YOURSELF.getTag())
                                .addLitePalTags(EnumTag.FORGET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People demand freedom of speech as a compensation for the freedom of thought which they seldom use.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Prayer does not change God, but it changes him who prays.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getTag())
                                .addLitePalTags(EnumTag.PRAYER.getTag())
                                .addLitePalTags(EnumTag.DOES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life can only be understood backwards; but it must be lived forwards.", false, true))
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.ONLY.getTag())
                                .addLitePalTags(EnumTag.FORWARDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life is not a problem to be solved, but a reality to be experienced.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getTag())
                                .addLitePalTags(EnumTag.PROBLEM.getTag())
                                .addLitePalTags(EnumTag.SOLVED.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.THEODORE_ROOSEVELT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Believe you can and you're halfway there.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.BELIEVE.getTag())
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Keep your eyes on the stars, and your feet on the ground.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.FEET.getTag())
                                .addLitePalTags(EnumTag.KEEP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People ask the difference between a leader and a boss. The leader leads, and the boss drives.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.LEADER.getTag())
                                .addLitePalTags(EnumTag.BOSS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you could kick the person in the pants responsible for most of your trouble, you wouldn't sit for a month.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.KICK.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Far better is it to dare mighty things, to win glorious triumphs, even though checkered by failure... than to rank with those poor spirits who neither enjoy nor suffer much, because they live in a gray twilight that knows not victory nor defeat.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getTag())
                                .addLitePalTags(EnumTag.ENJOY.getTag())
                                .addLitePalTags(EnumTag.TRIUMPHS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nobody cares how much you know, until they know how much you care.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .addLitePalTags(EnumTag.HOW_MUCH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In any moment of decision, the best thing you can do is the right thing, the next best thing is the wrong thing, and the worst thing you can do is nothing.", false, true))
                                .addLitePalTags(EnumTag.BEST.getTag())
                                .addLitePalTags(EnumTag.NEXT.getTag())
                                .addLitePalTags(EnumTag.WORST_THING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To educate a man in mind and not in morals is to educate a menace to society.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Great thoughts speak only to the thoughtful mind, but great actions speak to all mankind.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.THOUGHTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("With self-discipline most anything is possible.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.TS_ELIOT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you aren't in over your head, how do you know how tall you are?", false, true))
                                .addLitePalTags(EnumTag.HEAD.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.HOW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Poetry is not a turning loose of emotion, but an escape from emotion; it is not the expression of personality, but an escape from personality. But, of course, only those who have personality and emotions know what it means to want to escape from these things.", false, true))
                                .addLitePalTags(EnumTag.POETRY.getTag())
                                .addLitePalTags(EnumTag.EXPRESSION.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I said to my soul, be still, and wait without hope, For hope would be hope for the wrong thing.", false, true))
                                .addLitePalTags(EnumTag.HOPE.getTag())
                                .addLitePalTags(EnumTag.WAIT.getTag())
                                .addLitePalTags(EnumTag.STILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Immature poets imitate; mature poets steal.", false, true))
                                .addLitePalTags(EnumTag.POETRY.getTag())
                                .addLitePalTags(EnumTag.MATURE.getTag())
                                .addLitePalTags(EnumTag.STEAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Home is where one starts from.", false, true))
                                .addLitePalTags(EnumTag.HOME.getTag())
                                .addLitePalTags(EnumTag.WHERE.getTag())
                                .addLitePalTags(EnumTag.STARTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("So the darkness shall be the light, and the stillness the dancing.", false, true))
                                .addLitePalTags(EnumTag.LIGHT.getTag())
                                .addLitePalTags(EnumTag.DANCING.getTag())
                                .addLitePalTags(EnumTag.SHALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have measured out my life with coffee spoons.", false, true))
                                .addLitePalTags(EnumTag.COFFEE.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .addLitePalTags(EnumTag.MEASURED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Moving between the legs of tables and of chairs, rising or falling, grasping at kisses and toys, advancing boldly, sudden to take alarm, retreating to the corner of arm and knee, eager to be reassured, taking pleasure in the fragrant brilliance of the Christmas tree.", false, true))
                                .addLitePalTags(EnumTag.CHRISTMAS.getTag())
                                .addLitePalTags(EnumTag.RISING.getTag())
                                .addLitePalTags(EnumTag.FRAGRANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We shall not cease from exploration, and the end of all our exploring will be to arrive where we started and know the place for the first time.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getTag())
                                .addLitePalTags(EnumTag.EXPLORATION.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Only those who will risk going too far can possibly find out how far one can go.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.HOW_FAR.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.TAYLOR_SWIFT.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am alone a lot, which is good. I need that time to just be alone after a long day, just decompress. So, I go to either my house or the hotel, or my apartment, or whatever - wherever I am, I go home and I watch TV and I sit there, with my cat, and I just watch TV or go online, check my emails.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.LONG_DAY.getTag())
                                .addLitePalTags(EnumTag.TV.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think fearless is having fears but jumping anyway.", false, true))
                                .addLitePalTags(EnumTag.FEAR.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love the scents of winter! For me, it's all about the feeling you get when you smell pumpkin spice, cinnamon, nutmeg, gingerbread and spruce.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SPICE.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My ultimate goal is to end up being happy. Most of the time.", false, true))
                                .addLitePalTags(EnumTag.GOAL.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .addLitePalTags(EnumTag.ULTIMATE_GOAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you are missing someone, time seems to move slower, and when I'm falling in love with someone, time seems to be moving faster.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.FALLING.getTag())
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No matter what happens in life, be good to people. Being good to people is a wonderful legacy to leave behind.", false, true))
                                .addLitePalTags(EnumTag.LEGACY.getTag())
                                .addLitePalTags(EnumTag.LEAVE.getTag())
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love making new friends and I respect people for a lot of different reasons.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think every girl's dream is to find a bad boy at the right time, when he wants to not be bad anymore.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.BAD.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We don't need to share the same opinions as others, but we need to be respectful.", false, true))
                                .addLitePalTags(EnumTag.RESPECT.getTag())
                                .addLitePalTags(EnumTag.NEED.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Red is such an interesting color to correlate with emotion, because it's on both ends of the spectrum. On one end you have happiness, falling in love, infatuation with someone, passion, all that. On the other end, you've got obsession, jealousy, danger, fear, anger and frustration.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.COLOR.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.THOMAS_AQUINAS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To bear with patience wrongs done to oneself is a mark of perfection, but to bear with patience wrongs done to someone else is a mark of imperfection and even of actual sin.", false, true))
                                .addLitePalTags(EnumTag.PATIENCE.getTag())
                                .addLitePalTags(EnumTag.WRONGS.getTag())
                                .addLitePalTags(EnumTag.ACTUAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Law is nothing other than a certain ordinance of reason for the common good, promulgated by the person who has the care of the community.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Good can exist without evil, whereas evil cannot exist without good.", false, true))
                                .addLitePalTags(EnumTag.EVIL.getTag())
                                .addLitePalTags(EnumTag.EXIST.getTag())
                                .addLitePalTags(EnumTag.CANNOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Better to illuminate than merely to shine, to deliver to others contemplated truths than merely to contemplate.", false, true))
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .addLitePalTags(EnumTag.CONTEMPLATED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every judgement of conscience, be it right or wrong, be it about things evil in themselves or morally indifferent, is obligatory, in such wise that he who acts against his conscience always sins.", false, true))
                                .addLitePalTags(EnumTag.JUDGEMENT.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sorrow can be alleviated by good sleep, a bath and a glass of wine.", false, true))
                                .addLitePalTags(EnumTag.SLEEP.getTag())
                                .addLitePalTags(EnumTag.SYMPATHY.getTag())
                                .addLitePalTags(EnumTag.GLASS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To one who has faith, no explanation is necessary. To one without faith, no explanation is possible.", false, true))
                                .addLitePalTags(EnumTag.FAITH.getTag())
                                .addLitePalTags(EnumTag.POSSIBLE.getTag())
                                .addLitePalTags(EnumTag.NECESSARY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If the highest aim of a captain were to preserve his ship, he would keep it in port forever.", false, true))
                                .addLitePalTags(EnumTag.LEADERSHIP.getTag())
                                .addLitePalTags(EnumTag.SHIP.getTag())
                                .addLitePalTags(EnumTag.AIM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The things that we love tell us what we are.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is nothing on this earth more to be prized than true friendship.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.PRIZED.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.THOMAS_HOBBES.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man's conscience and his judgment is the same thing; and as the judgment, so also the conscience, may be erroneous.", false, true))
                                .addLitePalTags(EnumTag.JUDGMENT.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no such thing as perpetual tranquillity of mind while we live here; because life itself is but motion, and can never be without desire, nor without fear, no more than without sense.", false, true))
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.DESIRE.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leisure is the Mother of Philosophy.", false, true))
                                .addLitePalTags(EnumTag.MOTHER.getTag())
                                .addLitePalTags(EnumTag.PHILOSOPHY.getTag())
                                .addLitePalTags(EnumTag.LEISURE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Words are the money of fools.", false, true))
                                .addLitePalTags(EnumTag.MONEY.getTag())
                                .addLitePalTags(EnumTag.WORDS.getTag())
                                .addLitePalTags(EnumTag.FOOLS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Curiosity is the lust of the mind.", false, true))
                                .addLitePalTags(EnumTag.CURIOSITY.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.LUST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("During the time men live without a common power to keep them all in awe, they are in that conditions called war; and such a war, as if of every man, against every man.", false, true))
                                .addLitePalTags(EnumTag.WAR.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .addLitePalTags(EnumTag.EVERY_MAN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The obligation of subjects to the sovereign is understood to last as long, and no longer, than the power lasteth by which he is able to protect them.", false, true))
                                .addLitePalTags(EnumTag.LAST.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .addLitePalTags(EnumTag.SUBJECTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The right of nature... is the liberty each man hath to use his own power, as he will himself, for the preservation of his own nature; that is to say, of his own life.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.USE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is not wisdom but Authority that makes a law.", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.LEGAL.getTag())
                                .addLitePalTags(EnumTag.AUTHORITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The condition of man... is a condition of war of everyone against everyone.", false, true))
                                .addLitePalTags(EnumTag.EVERYONE.getTag())
                                .addLitePalTags(EnumTag.AGAINST.getTag())
                                .addLitePalTags(EnumTag.CONDITION.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.VOLTAIRE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("God gave us the gift of life; it is up to us to give ourselves the gift of living well.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getTag())
                                .addLitePalTags(EnumTag.GIFT.getTag())
                                .addLitePalTags(EnumTag.GIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Judge a man by his questions rather than his answers.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .addLitePalTags(EnumTag.HIS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Appreciation is a wonderful thing: It makes what is excellent in others belong to us as well.", false, true))
                                .addLitePalTags(EnumTag.BELONG.getTag())
                                .addLitePalTags(EnumTag.EXCELLENT.getTag())
                                .addLitePalTags(EnumTag.MAKES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The art of medicine consists in amusing the patient while nature cures the disease.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.MEDICAL.getTag())
                                .addLitePalTags(EnumTag.DISEASE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Tears are the silent language of grief.", false, true))
                                .addLitePalTags(EnumTag.SYMPATHY.getTag())
                                .addLitePalTags(EnumTag.SILENT.getTag())
                                .addLitePalTags(EnumTag.TEARS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is difficult to free fools from the chains they revere.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.DIFFICULT.getTag())
                                .addLitePalTags(EnumTag.CHAINS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Those who can make you believe absurdities can make you commit atrocities.", false, true))
                                .addLitePalTags(EnumTag.BELIEVE.getTag())
                                .addLitePalTags(EnumTag.ATROCITIES.getTag())
                                .addLitePalTags(EnumTag.COMMIT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Each player must accept the cards life deals him or her: but once they are in hand, he or she alone must decide how to play the cards in order to win the game.", false, true))
                                .addLitePalTags(EnumTag.GAME.getTag())
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.CARDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Optimism is the madness of insisting that all is well when we are miserable.", false, true))
                                .addLitePalTags(EnumTag.OPTIMISM.getTag())
                                .addLitePalTags(EnumTag.MADNESS.getTag())
                                .addLitePalTags(EnumTag.INSISTING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It is better to risk saving a guilty man than to condemn an innocent one.", false, true))
                                .addLitePalTags(EnumTag.LEGAL.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.SAVING.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.VALENTINO_ROSSI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Riding a race bike is an art - a thing that you do because you feel something inside.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.RACE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The great fights with your strongest rivals are always the biggest motivation. When you win easily it's not the same taste.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATION.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.FIGHTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The work that we do during the winter is very important; we have a new bike and it's important to develop it during this time, and we start with this test.", false, true))
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.TEST.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The most important thing is to have a good relationship with the bike... you have to understand what she wants. I think of a motorcycle as a woman, and I know that sounds silly, but it's true.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.THE_MOST_IMPORTANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My normal life is like being on holiday.", false, true))
                                .addLitePalTags(EnumTag.NORMAL.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.BEING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I am able to ride the bike and think clearly about strategy and tyres. I also have positive thinking. I am very constructively critical.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.CRITICAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I race to win. If I am on the bike or in a car it will always be the same.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I never race for records. The motivation to try to beat the record is not enough to continue. You have to enjoy it.", false, true))
                                .addLitePalTags(EnumTag.RACE.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.RECORDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Maybe the bike is more dangerous, but the passion for the car for me is second to the bike.", false, true))
                                .addLitePalTags(EnumTag.CAR.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.MAYBE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("To be a great motorbike racer, the most important thing is passion for the bike.", false, true))
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.MOST.getTag())
                                .addLitePalTags(EnumTag.MOTORBIKE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.VICTOR_HUGO.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("How did it happen that their lips came together? How does it happen that birds sing, that snow melts, that the rose unfolds, that the dawn whitens behind the stark shapes of trees on the quivering summit of the hill? A kiss, and all was said.", false, true))
                                .addLitePalTags(EnumTag.VALENTINES_DAY.getTag())
                                .addLitePalTags(EnumTag.BEHIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is one spectacle grander than the sea, that is the sky; there is one spectacle grander than the sky, that is the interior of the soul.", false, true))
                                .addLitePalTags(EnumTag.SKY.getTag())
                                .addLitePalTags(EnumTag.SOUL.getTag())
                                .addLitePalTags(EnumTag.SPECTACLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When dictatorship is a fact, revolution becomes a right.", false, true))
                                .addLitePalTags(EnumTag.REVOLUTION.getTag())
                                .addLitePalTags(EnumTag.RIGHT.getTag())
                                .addLitePalTags(EnumTag.FACT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Life is the flower for which love is the honey.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.HONEY.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A mother's arms are made of tenderness and children sleep soundly in them.", false, true))
                                .addLitePalTags(EnumTag.MOTHERS_DAY.getTag())
                                .addLitePalTags(EnumTag.MOTHER.getTag())
                                .addLitePalTags(EnumTag.SLEEP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Concision in style, precision in thought, decision in life.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.DECISION.getTag())
                                .addLitePalTags(EnumTag.PRECISION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("He who opens a school door, closes a prison.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getTag())
                                .addLitePalTags(EnumTag.SCHOOL.getTag())
                                .addLitePalTags(EnumTag.DOOR.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When a woman is talking to you, listen to what she says with her eyes.", false, true))
                                .addLitePalTags(EnumTag.RELATIONSHIP.getTag())
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.SHE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Music expresses that which cannot be said and on which it is impossible to be silent.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.SILENT.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Laughter is the sun that drives winter from the human face.", false, true))
                                .addLitePalTags(EnumTag.FACE.getTag())
                                .addLitePalTags(EnumTag.HUMAN_FACE.getTag())
                                .addLitePalTags(EnumTag.DRIVES.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.VIKTOR_E_FRANKL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A man who becomes conscious of the responsibility he bears toward a human being who affectionately waits for him, or to an unfinished work, will never be able to throw away his life. He knows the 'why' for his existence, and will be able to bear almost any 'how.'", false, true))
                                .addLitePalTags(EnumTag.EXISTENCE.getTag())
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .addLitePalTags(EnumTag.ALMOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If there is a meaning in life at all, then there must be a meaning in suffering. Suffering is an ineradicable part of life, even as fate and death. Without suffering and death, human life cannot be complete.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getTag())
                                .addLitePalTags(EnumTag.SUFFERING.getTag())
                                .addLitePalTags(EnumTag.FATE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The last of human freedoms - the ability to chose one's attitude in a given set of circumstances.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .addLitePalTags(EnumTag.SET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Challenging the meaning of life is the truest expression of the state of being human.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getTag())
                                .addLitePalTags(EnumTag.EXPRESSION.getTag())
                                .addLitePalTags(EnumTag.TRUEST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For the meaning of life differs from man to man, from day to day and from hour to hour. What matters, therefore, is not the meaning of life in general but rather the specific meaning of a person's life at a given moment.", false, true))
                                .addLitePalTags(EnumTag.RATHER.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .addLitePalTags(EnumTag.DIFFERS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everyone has his own specific vocation or mission in life; everyone must carry out a concrete assignment that demands fulfillment. Therein he cannot be replaced, nor can his life be repeated, thus, everyone's task is unique as his specific opportunity to implement it.", false, true))
                                .addLitePalTags(EnumTag.CONCRETE.getTag())
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .addLitePalTags(EnumTag.THEREIN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Between stimulus and response there is a space. In that space is our power to choose our response. In our response lies our growth and our freedom.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.RESPONSE.getTag())
                                .addLitePalTags(EnumTag.STIMULUS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Everything can be taken from a man but one thing: the last of human freedoms - to choose one's attitude in any given set of circumstances, to choose one's own way.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.GIVEN.getTag())
                                .addLitePalTags(EnumTag.SET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When we are no longer able to change a situation - we are challenged to change ourselves.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getTag())
                                .addLitePalTags(EnumTag.LONGER.getTag())
                                .addLitePalTags(EnumTag.CHALLENGED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Happiness must happen, and the same holds for success: you have to let it happen by not caring about it.", false, true))
                                .addLitePalTags(EnumTag.CARING.getTag())
                                .addLitePalTags(EnumTag.HAPPEN.getTag())
                                .addLitePalTags(EnumTag.SAME.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.VIN_SCULLY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("As long as you live keep smiling because it brightens everybody's day.", false, true))
                                .addLitePalTags(EnumTag.SMILING.getTag())
                                .addLitePalTags(EnumTag.KEEP_SMILING.getTag())
                                .addLitePalTags(EnumTag.KEEP.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The roar of the crowd has always been the sweetest music. It's intoxicating.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.INTOXICATING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's a wonderful feeling being a bridge to the past and unite generations.", false, true))
                                .addLitePalTags(EnumTag.PAST.getTag())
                                .addLitePalTags(EnumTag.UNITE.getTag())
                                .addLitePalTags(EnumTag.GENERATIONS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Statistics are used much like a drunk uses a lamppost: for support, not illumination.", false, true))
                                .addLitePalTags(EnumTag.DRUNK.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.ILLUMINATION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Andre Dawson has a bruised knee and is listed as day-to-day. Aren't we all?", false, true))
                                .addLitePalTags(EnumTag.KNEE.getTag())
                                .addLitePalTags(EnumTag.ANDRE.getTag())
                                .addLitePalTags(EnumTag.DAY_TO_DAY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Good is not good when better is expected.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.EXPECTED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Almost all of us growing up have played baseball on some level. It has an inside track with people. It has a unifying effect.", false, true))
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .addLitePalTags(EnumTag.ALMOST_ALL.getTag())
                                .addLitePalTags(EnumTag.ALMOST.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I guess my thermometer for my baseball fever is still a goose bump.", false, true))
                                .addLitePalTags(EnumTag.GOOSE.getTag())
                                .addLitePalTags(EnumTag.STILL.getTag())
                                .addLitePalTags(EnumTag.GUESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't like to be alone, but I do cherish the moments that I'm alone with a good book.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getTag())
                                .addLitePalTags(EnumTag.MOMENTS.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Don't let the winds blow your dreams away... or steal your faith in God.", false, true))
                                .addLitePalTags(EnumTag.AWAY.getTag())
                                .addLitePalTags(EnumTag.WINDS.getTag())
                                .addLitePalTags(EnumTag.STEAL.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.VINCE_LOMBARDI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Football is like life - it requires perseverance, self-denial, hard work, sacrifice, dedication and respect for authority.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.SELF_DENIAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Winning is habit. Unfortunately, so is losing.", false, true))
                                .addLitePalTags(EnumTag.SPORTS.getTag())
                                .addLitePalTags(EnumTag.WINNING.getTag())
                                .addLitePalTags(EnumTag.HABIT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Practice does not make perfect. Only perfect practice makes perfect.", false, true))
                                .addLitePalTags(EnumTag.EXPERIENCE.getTag())
                                .addLitePalTags(EnumTag.PRACTICE.getTag())
                                .addLitePalTags(EnumTag.DOES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The achievements of an organization are the results of the combined effort of each individual.", false, true))
                                .addLitePalTags(EnumTag.INDIVIDUAL.getTag())
                                .addLitePalTags(EnumTag.ACHIEVEMENTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The measure of who we are is what we do with what we have.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.MEASURE.getTag())
                                .addLitePalTags(EnumTag.WHO.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Individual commitment to a group effort - that is what makes a team work, a company work, a society work, a civilization work.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.INDIVIDUAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Winners never quit and quitters never win.", false, true))
                                .addLitePalTags(EnumTag.SPORTS.getTag())
                                .addLitePalTags(EnumTag.WINNERS.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We didn't lose the game; we just ran out of time.", false, true))
                                .addLitePalTags(EnumTag.SPORTS.getTag())
                                .addLitePalTags(EnumTag.GAME.getTag())
                                .addLitePalTags(EnumTag.LOSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The price of success is hard work, dedication to the job at hand, and the determination that whether we win or lose, we have applied the best of ourselves to the task at hand.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.WIN_OR_LOSE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Perfection is not attainable, but if we chase perfection we can catch excellence.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getTag())
                                .addLitePalTags(EnumTag.EXCELLENCE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.VINCENT_VAN_GOGH.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What would life be if we had no courage to attempt anything?", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getTag())
                                .addLitePalTags(EnumTag.HAD.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I feel that there is nothing more truly artistic than to love people.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you hear a voice within you say 'you cannot paint,' then by all means paint, and that voice will be silenced.", false, true))
                                .addLitePalTags(EnumTag.ART.getTag())
                                .addLitePalTags(EnumTag.VOICE.getTag())
                                .addLitePalTags(EnumTag.SILENCED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There is no blue without yellow and without orange.", false, true))
                                .addLitePalTags(EnumTag.BLUE.getTag())
                                .addLitePalTags(EnumTag.YELLOW.getTag())
                                .addLitePalTags(EnumTag.ORANGE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I put my heart and my soul into my work, and have lost my mind in the process.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.MIND.getTag())
                                .addLitePalTags(EnumTag.PROCESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The fishermen know that the sea is dangerous and the storm terrible, but they have never found these dangers sufficient reason for remaining ashore.", false, true))
                                .addLitePalTags(EnumTag.STORM.getTag())
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.DANGERS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For my part I know nothing with any certainty, but the sight of the stars makes me dream.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.DREAM.getTag())
                                .addLitePalTags(EnumTag.PART.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I dream of painting and then I paint my dream.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.PAINTING.getTag())
                                .addLitePalTags(EnumTag.DREAM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I often think that the night is more alive and more richly colored than the day.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.ALIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Great things are done by a series of small things brought together.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getTag())
                                .addLitePalTags(EnumTag.SMALL_THINGS.getTag())
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.WALT_DISNEY.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you can dream it, you can do it.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.DREAM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We keep moving forward, opening new doors, and doing new things, because we're curious and curiosity keeps leading us down new paths.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.CURIOUS.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All our dreams can come true, if we have the courage to pursue them.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getTag())
                                .addLitePalTags(EnumTag.TRUE.getTag())
                                .addLitePalTags(EnumTag.PURSUE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You can design and create, and build the most wonderful place in the world. But it takes people to make the dream a reality.", false, true))
                                .addLitePalTags(EnumTag.DESIGN.getTag())
                                .addLitePalTags(EnumTag.PEOPLE.getTag())
                                .addLitePalTags(EnumTag.WONDERFUL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Times and conditions change so rapidly that we must keep our aim constantly focused on the future.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getTag())
                                .addLitePalTags(EnumTag.AIM.getTag())
                                .addLitePalTags(EnumTag.TIMES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The way to get started is to quit talking and begin doing.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.GET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's kind of fun to do the impossible.", false, true))
                                .addLitePalTags(EnumTag.FUN.getTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getTag())
                                .addLitePalTags(EnumTag.KIND.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When you're curious, you find lots of interesting things to do.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getTag())
                                .addLitePalTags(EnumTag.CURIOUS.getTag())
                                .addLitePalTags(EnumTag.LOTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All the adversity I've had in my life, all my troubles and obstacles, have strengthened me... You may not realize it when it happens, but a kick in the teeth may be the best thing in the world for you.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.ADVERSITY.getTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.W_C_FIELDS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A woman drove me to drink and I didn't even have the decency to thank her.", false, true))
                                .addLitePalTags(EnumTag.WOMAN.getTag())
                                .addLitePalTags(EnumTag.HER.getTag())
                                .addLitePalTags(EnumTag.EVEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It ain't what they call you, it's what you answer to.", false, true))
                                .addLitePalTags(EnumTag.YOU.getTag())
                                .addLitePalTags(EnumTag.ANSWER.getTag())
                                .addLitePalTags(EnumTag.CALL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Always carry a flagon of whiskey in case of snakebite and furthermore always carry a small snake.", false, true))
                                .addLitePalTags(EnumTag.SMALL.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.FURTHERMORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I never worry about being driven to drink; I just worry about being driven home.", false, true))
                                .addLitePalTags(EnumTag.WORRY.getTag())
                                .addLitePalTags(EnumTag.NEW_YEARS.getTag())
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The best cure for insomnia is to get a lot of sleep.", false, true))
                                .addLitePalTags(EnumTag.SLEEP.getTag())
                                .addLitePalTags(EnumTag.GET.getTag())
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("No doubt exists that all women are crazy; it's only a question of degree.", false, true))
                                .addLitePalTags(EnumTag.WOMEN.getTag())
                                .addLitePalTags(EnumTag.QUESTION.getTag())
                                .addLitePalTags(EnumTag.DEGREE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you can't dazzle them with brilliance, baffle them with bull.", false, true))
                                .addLitePalTags(EnumTag.BULL.getTag())
                                .addLitePalTags(EnumTag.THEM.getTag())
                                .addLitePalTags(EnumTag.BRILLIANCE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A rich man is nothing but a poor man with money.", false, true))
                                .addLitePalTags(EnumTag.MONEY.getTag())
                                .addLitePalTags(EnumTag.POOR.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Start every day off with a smile and get it over with.", false, true))
                                .addLitePalTags(EnumTag.HUMOR.getTag())
                                .addLitePalTags(EnumTag.EVERY_DAY.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I cook with wine, sometimes I even add it to the food.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getTag())
                                .addLitePalTags(EnumTag.ADD.getTag())
                                .addLitePalTags(EnumTag.EVEN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.YAEL_NAIM.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In France, I found there is a lot of attention to the little details and to the quality of life.", false, true))
                                .addLitePalTags(EnumTag.FRANCE.getTag())
                                .addLitePalTags(EnumTag.FOUND.getTag())
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I'd go to Israel, I felt like a tourist. My social and professional ties had started to dissolve, and it confused me. I didn't know whether I should stay here in Paris or go back to Israel, or even cut off all my ties with Israel so I could really plant roots here. Or maybe go somewhere else altogether.", false, true))
                                .addLitePalTags(EnumTag.MAYBE.getTag())
                                .addLitePalTags(EnumTag.CUT.getTag())
                                .addLitePalTags(EnumTag.HERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I write in Hebrew, I don't look for sophistication in music; it's just pure emotion that comes out.", false, true))
                                .addLitePalTags(EnumTag.SOPHISTICATION.getTag())
                                .addLitePalTags(EnumTag.I_WRITE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Hebrew is my first language, so it's really the most personal and the most simple. When I write in Hebrew, I don't look for sophistication in music; it's just pure emotion that comes out.", false, true))
                                .addLitePalTags(EnumTag.SOPHISTICATION.getTag())
                                .addLitePalTags(EnumTag.I_WRITE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I like to sing covers of songs that are at the extreme ends from what I usually listen to.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.ENDS.getTag())
                                .addLitePalTags(EnumTag.SONGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("English is really free for me; there's no limits to the music and the imagination. And French, it's just I live in Paris, and it's really a poetic language where you can really play with words.", false, true))
                                .addLitePalTags(EnumTag.WORDS.getTag())
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.POETIC.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My first album was full of ideas and attempts to go in all kinds of directions. I was young. I loved making music, but I didn't have a clear path. I also lacked in confidence.", false, true))
                                .addLitePalTags(EnumTag.YOUNG.getTag())
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .addLitePalTags(EnumTag.ALBUM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My big influences are Joni Mitchell, and a lot of classical and Indian music, as well as Nina Simone and the personal blues and jazz of Billie Holiday. Other influences for me include Bjork, Nick Drake, and Sufjan Stevens.", false, true))
                                .addLitePalTags(EnumTag.JAZZ.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Songs are a way to express what I have felt. A way to understand what happened to me or to other people.", false, true))
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.SONGS.getTag())
                                .addLitePalTags(EnumTag.FELT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("As always, I wrote songs. Some people cook or play sports. This is what I love to do. Sometimes I can't express myself that well in talk, so I write songs.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.YAEL_STONE.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Family hang-outs can go very late into the night and involve lots of music.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.LOTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Prison makes an interesting context for so many different characters to come together. You get to see what lines get drawn between people.", false, true))
                                .addLitePalTags(EnumTag.COME.getTag())
                                .addLitePalTags(EnumTag.DIFFERENT_CHARACTERS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I've definitely had those moments when I think a relationship with somebody is one way, and then it just flips.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.HAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Australia has a very big history of incarceration. What does that mean to us? What does it mean that we came over to a country that's not necessarily ours and filled it with white prisoners?", false, true))
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's really interesting working in television as opposed to the theater, where you know the arc of the character and you are able to create this whole backstory.", false, true))
                                .addLitePalTags(EnumTag.TELEVISION.getTag())
                                .addLitePalTags(EnumTag.WHOLE.getTag())
                                .addLitePalTags(EnumTag.OPPOSED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I never want to be anywhere else than in the rehearsal room. I mean, it's so lame to say, but it makes me supremely happy to work with people and to talk and invent and laugh.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.REHEARSAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In Australia, kids play in American accents.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.AUSTRALIA.getTag())
                                .addLitePalTags(EnumTag.ACCENTS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One thing that is not to be underestimated is American culture's influence on the rest of the world.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.REST.getTag())
                                .addLitePalTags(EnumTag.UNDERESTIMATED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("My working history as an actor is definitely in the theatre; it certainly was in Australia.", false, true))
                                .addLitePalTags(EnumTag.THEATRE.getTag())
                                .addLitePalTags(EnumTag.ACTOR.getTag())
                                .addLitePalTags(EnumTag.CERTAINLY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.YAHOO_SERIOUS.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In 1905 Albert discovered Relativity, in 1906 he invented Rock and Roll.", false, true))
                                .addLitePalTags(EnumTag.ROCK.getTag())
                                .addLitePalTags(EnumTag.RELATIVITY.getTag())
                                .addLitePalTags(EnumTag.DISCOVERED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Find your own specific voice in filmmaking and go for it. Either people will get it or they won't and that's what it's all about.", false, true))
                                .addLitePalTags(EnumTag.VOICE.getTag())
                                .addLitePalTags(EnumTag.GO_FOR_IT.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The American formula things are out there but they don't have any stories to tell - we have all the stories to tell - but they're all formula.", false, true))
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .addLitePalTags(EnumTag.THINGS.getTag())
                                .addLitePalTags(EnumTag.STORIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's an infinite creative universe to explore so why chase conservative options?", false, true))
                                .addLitePalTags(EnumTag.EXPLORE.getTag())
                                .addLitePalTags(EnumTag.CONSERVATIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("There are a thousand weird untold stories in the Australian film industry, this has been one of them.", false, true))
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.UNTOLD.getTag())
                                .addLitePalTags(EnumTag.STORIES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("All the jokes in my films, the comedy, they're not me, I just try to hold a big mirror up to us.", false, true))
                                .addLitePalTags(EnumTag.MIRROR.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.FILMS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Australians don't have a preconceived notion of what things have to be... we can go on a fantastic journey.", false, true))
                                .addLitePalTags(EnumTag.JOURNEY.getTag())
                                .addLitePalTags(EnumTag.THINGS.getTag())
                                .addLitePalTags(EnumTag.NOTION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's because we are so flooded with American culture that we're startled when we see ourselves up there on the screen.", false, true))
                                .addLitePalTags(EnumTag.AMERICAN.getTag())
                                .addLitePalTags(EnumTag.SCREEN.getTag())
                                .addLitePalTags(EnumTag.FLOODED.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We live in a time where government is not a leadership thing, it's more a business that's out there and running riot, so I guess the people have to go out there and say stuff.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.GO.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.YAIR_LAPID.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One of the things that hold together a human society is the existence of basic politeness among its members.", false, true))
                                .addLitePalTags(EnumTag.ONE_OF_THE_THINGS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I want to live in a country that is not just a place but also an idea, and Jerusalem is the heart of the idea. There may be practical considerations, but a country cannot exist without an ethos, and Jerusalem is an ethos.", false, true))
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .addLitePalTags(EnumTag.PRACTICAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't reject caution, but you also have to be careful about caution because there's a stage when it turns into paralysis.", false, true))
                                .addLitePalTags(EnumTag.BE_CAREFUL.getTag())
                                .addLitePalTags(EnumTag.CAREFUL.getTag())
                                .addLitePalTags(EnumTag.ABOUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If you want to do stuff, you have to be able to handle controversy.", false, true))
                                .addLitePalTags(EnumTag.WANT.getTag())
                                .addLitePalTags(EnumTag.HANDLE.getTag())
                                .addLitePalTags(EnumTag.ABLE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("How can Israel say that everyone is equal before the law - that you're equal before the law - when the law defines Judaism as the cultural, national and legislative basis for the state?", false, true))
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.EVERYONE.getTag())
                                .addLitePalTags(EnumTag.BEFORE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Israel can't be the only country in the Western world not to have freedom of religion.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getTag())
                                .addLitePalTags(EnumTag.WORLD.getTag())
                                .addLitePalTags(EnumTag.COUNTRY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Arab society features apartheid of women, apartheid of homosexuals, and apartheid of Christians, Jews, and democracy.", false, true))
                                .addLitePalTags(EnumTag.SOCIETY.getTag())
                                .addLitePalTags(EnumTag.APARTHEID.getTag())
                                .addLitePalTags(EnumTag.FEATURES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Every Jew is my brother, and I will not succumb to hate speech.", false, true))
                                .addLitePalTags(EnumTag.HATE.getTag())
                                .addLitePalTags(EnumTag.SPEECH.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Jerusalem will remain under Israeli sovereignty and will not be divided.", false, true))
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.JERUSALEM.getTag())
                                .addLitePalTags(EnumTag.REMAIN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("At times, we need to stop and rethink everything. Our entire history is made up of people who were sure they knew the truth yet forgot that the truth has an annoying tendency to change on occasion without us noticing it.", false, true))
                                .addLitePalTags(EnumTag.OCCASION.getTag())
                                .addLitePalTags(EnumTag.TENDENCY.getTag())
                                .addLitePalTags(EnumTag.ENTIRE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.YOTAM_OTTOLENGHI.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The combination of olive oil, garlic and lemon juice lifts the spirits in winter.", false, true))
                                .addLitePalTags(EnumTag.OIL.getTag())
                                .addLitePalTags(EnumTag.LEMON.getTag())
                                .addLitePalTags(EnumTag.GARLIC.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The moment to tell my barber I was gay just never came up.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.TELL.getTag())
                                .addLitePalTags(EnumTag.CAME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A well-made salad must have a certain uniformity; it should make perfect sense for those ingredients to share a bowl.", false, true))
                                .addLitePalTags(EnumTag.PERFECT.getTag())
                                .addLitePalTags(EnumTag.SALAD.getTag())
                                .addLitePalTags(EnumTag.UNIFORMITY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I keep returning to the combination of artichoke, broad beans and lemon. The freshness of young beans and the lemon juice 'lifts' the artichoke and balances its hearty nature.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getTag())
                                .addLitePalTags(EnumTag.YOUNG.getTag())
                                .addLitePalTags(EnumTag.HEARTY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("As is always the way with pancakes, the first hotcake to come out of the pan will probably be a bit misshapen. Just scoff it, and carry on with the rest.", false, true))
                                .addLitePalTags(EnumTag.REST.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Pasta with melted cheese is the one thing I could eat over and over again.", false, true))
                                .addLitePalTags(EnumTag.PASTA.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .addLitePalTags(EnumTag.COULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For those, like me, who can't rely on being given a home smoker this Christmas, you can buildQuotes your own approximation with just a roll of tin foil and a big wok or pan for which you have a lid.", false, true))
                                .addLitePalTags(EnumTag.OWN.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.LID.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The addition of vinaigrette to freshly roasted vegetables gives them a freshness and juiciness they don't normally have; the acidity brings out new shades of flavour, too.", false, true))
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .addLitePalTags(EnumTag.SHADES.getTag())
                                .addLitePalTags(EnumTag.THEM.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("For me, the end of childhood came when the number of candles on my birthday cake no longer reflected my age, around 19 or 20. From then on, each candle came to represent an entire decade.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getTag())
                                .addLitePalTags(EnumTag.CHILDHOOD.getTag())
                                .addLitePalTags(EnumTag.DECADE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZIG_ZIGLAR.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("What you get by achieving your goals is not as important as what you become by achieving your goals.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getTag())
                                .addLitePalTags(EnumTag.GET.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Positive thinking will let you do everything better than negative thinking will.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getTag())
                                .addLitePalTags(EnumTag.NEGATIVE.getTag())
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Your attitude, not your aptitude, will determine your altitude.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .addLitePalTags(EnumTag.ALTITUDE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You were born to win, but to be a winner, you must plan to win, prepare to win, and expect to win.", false, true))
                                .addLitePalTags(EnumTag.WINNER.getTag())
                                .addLitePalTags(EnumTag.PREPARE.getTag())
                                .addLitePalTags(EnumTag.EXPECT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("If people like you, they'll listen to you, but if they trust you, they'll do business with you.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.TRUST.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The foundation stones for a balanced success are honesty, character, integrity, faith, love and loyalty.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.CHARACTER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("With integrity, you have nothing to fear, since you have nothing to hide. With integrity, you will do the right thing, so you will have no guilt.", false, true))
                                .addLitePalTags(EnumTag.GUILT.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Try to look at your weakness and convert it into your strength. That's success.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getTag())
                                .addLitePalTags(EnumTag.SUCCESS.getTag())
                                .addLitePalTags(EnumTag.WEEKNESS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You were designed for accomplishment, engineered for success, and endowed with the seeds of greatness.", false, true))
                                .addLitePalTags(EnumTag.GREATNESS.getTag())
                                .addLitePalTags(EnumTag.ENGINEERED.getTag())
                                .addLitePalTags(EnumTag.WERE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People often say that motivation doesn't last. Well, neither does bathing - that's why we recommend it daily.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATION.getTag())
                                .addLitePalTags(EnumTag.WHY.getTag())
                                .addLitePalTags(EnumTag.LAST.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZAC_GOLDSMITH.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("A pound invested in energy efficiency buys seven times more energy solution than a pound invested in nuclear power.", false, true))
                                .addLitePalTags(EnumTag.EFFICIENCY.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.BUYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Yes, Heathrow is the U.K.'s busiest airport, but new runways or a new airport are not the answer. It is far better to focus on improving capacity.", false, true))
                                .addLitePalTags(EnumTag.FOCUS.getTag())
                                .addLitePalTags(EnumTag.YES.getTag())
                                .addLitePalTags(EnumTag.NEW.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Green policy is about triggering a shift to a cleaner way of doing things. To be effective, it needs to incentivise the right behaviour, for example through tax breaks, and that needs to be paid for by disincentives on polluting behaviour.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.NEEDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Leonardo DiCaprio is a rare phenomenon. Whereas for so many celebrities an interest in the environment is a fashionable accessory, for DiCaprio it is a thread that runs through everything he does.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.CELEBRITIES.getTag())
                                .addLitePalTags(EnumTag.THREAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't know David Cameron very well. I like him. I think you can judge a book by its cover - whoever said you can't is wrong - that's the whole point of nature giving us intuition, instinct and so on. I think the cover is pretty good.", false, true))
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .addLitePalTags(EnumTag.DAVID_CAMERON.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The 5,000 or so acres of Royal Parks are one of the things that make London special.", false, true))
                                .addLitePalTags(EnumTag.LONDON.getTag())
                                .addLitePalTags(EnumTag.SPECIAL.getTag())
                                .addLitePalTags(EnumTag.PARKS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You know I don't really have faith in politicians - this is quite a sleazy business. But there is no law which says that all politicians will turn out to be scumbags.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getTag())
                                .addLitePalTags(EnumTag.LAW.getTag())
                                .addLitePalTags(EnumTag.WHICH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In North America, more than half of all children travel to school by bus. We need a similar programme in London.", false, true))
                                .addLitePalTags(EnumTag.BUS.getTag())
                                .addLitePalTags(EnumTag.SIMILAR.getTag())
                                .addLitePalTags(EnumTag.HALF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("More than half the world's largest 100 economies are corporations. They have no loyalties to place or citizens.", false, true))
                                .addLitePalTags(EnumTag.ECONOMIES.getTag())
                                .addLitePalTags(EnumTag.LARGEST.getTag())
                                .addLitePalTags(EnumTag.HALF.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I think sometimes if you are too interested in day-to-day politics, you lose sight of the long term.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getTag())
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZAC_HANSON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's cool to have critical success because it's always nice for your peers to say, 'Good job.' But who cares about them?", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.CARES.getTag())
                                .addLitePalTags(EnumTag.CRITICAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The real reason we ended up getting into that type of music was our dad worked for an oil company so we spent a year overseas when we were young kids. Because of that, it was all Spanish TV and radio so we ended up having these '50s and '60s tapes, tapes of that music.", false, true))
                                .addLitePalTags(EnumTag.REASON.getTag())
                                .addLitePalTags(EnumTag.TAPES.getTag())
                                .addLitePalTags(EnumTag.TV.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It's pretty much run by everybody. We're very involved in everything that goes on. We always have been.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.PRETTY.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It would be nice to have radio support, not that we've ever had that much trouble with it.", false, true))
                                .addLitePalTags(EnumTag.BE_NICE.getTag())
                                .addLitePalTags(EnumTag.EVER.getTag())
                                .addLitePalTags(EnumTag.WOULD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You may be pulling from different influences because of different things that are going on in your life, different people that are around you and more experiences to pull from.", false, true))
                                .addLitePalTags(EnumTag.DIFFERENT_PEOPLE.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .addLitePalTags(EnumTag.MAY.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZHU_ZHU.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In China, we don't know about the swimming pool game, but we know about Marco Polo.", false, true))
                                .addLitePalTags(EnumTag.SWIMMING.getTag())
                                .addLitePalTags(EnumTag.GAME.getTag())
                                .addLitePalTags(EnumTag.CHINA.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Sometimes I'll do a mask if I had a lot of makeup on that day or was out in the sun. I like a hydrogen mask. It's an easy one, and it's supposed to soothe and relax your skin.", false, true))
                                .addLitePalTags(EnumTag.RELAX.getTag())
                                .addLitePalTags(EnumTag.MAKEUP.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("English is not my first language.", false, true))
                                .addLitePalTags(EnumTag.LANGUAGE.getTag())
                                .addLitePalTags(EnumTag.FIRST.getTag())
                                .addLitePalTags(EnumTag.ENGLISH.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have really long hair, so I don't cut it all that often. Sometimes, when I'm working, I just have the stylist on set trim it for me. I don't dye my hair. When I was a teenager, I dyed my hair five colors at one time. It was all different shades of red going from more orange to more purple. I thought I looked so cool.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getTag())
                                .addLitePalTags(EnumTag.SHADES.getTag())
                                .addLitePalTags(EnumTag.CUT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I was planning to study more, but it's a struggle with so many opportunities for film and trying to get better through studying. No matter what, I want to be making more movies.", false, true))
                                .addLitePalTags(EnumTag.STUDY.getTag())
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.MAKING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't mind doing action or kung fu, but I'm also really happy to do something dramatic. I'd like to show that a Chinese girl doesn't have to do crazy martial arts to get the part.", false, true))
                                .addLitePalTags(EnumTag.HAPPY.getTag())
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.PART.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I love Jo Malone. I got the Orange Blossom scent as a gift many years ago, and I fell in love with it. It's very light, natural, sweet. It's there but not that obvious.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.GIFT.getTag())
                                .addLitePalTags(EnumTag.VERY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I like the MAC Face and Body foundation. Sometimes it can't cover all my flaws, but I like it because it looks really natural and it evens out my skin tone.", false, true))
                                .addLitePalTags(EnumTag.NATURAL.getTag())
                                .addLitePalTags(EnumTag.TONE.getTag())
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZOE_KAZAN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing's going to come to you by sitting around and waiting for it.", false, true))
                                .addLitePalTags(EnumTag.WAITING.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.GOING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Writing-wise, I like to have a lot of things on the burners at once, because when I hit a wall, I like to move on to the thing I haven't hit a wall on.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.MOVE.getTag())
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I really love people. I love to meet people. I'm curious about people.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.CURIOUS.getTag())
                                .addLitePalTags(EnumTag.I_LOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I have mad luck. I'm super-good at games like backgammon or anything that requires rolling dice.", false, true))
                                .addLitePalTags(EnumTag.LUCK.getTag())
                                .addLitePalTags(EnumTag.MAD.getTag())
                                .addLitePalTags(EnumTag.ROLLING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I don't like pretentious films or pretentious people.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.PRETENTIOUS.getTag())
                                .addLitePalTags(EnumTag.FILMS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("You set up the story, but the characters start talking, and they go places that you didn't expect. You have to follow.", false, true))
                                .addLitePalTags(EnumTag.EXPECT.getTag())
                                .addLitePalTags(EnumTag.CHARACTERS.getTag())
                                .addLitePalTags(EnumTag.PLACES.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("And I think the female creative urge is intrinsically biologically linked to our ability to give birth to a child, even if we've never... I've never given birth, but I feel like it's part of our psychology.", false, true))
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.PART.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("People really do make the assumption that I had some weirdo Hollywood upbringing, but my parents are incredibly down-to-earth people who worked really hard to raise us in a way that was health.", false, true))
                                .addLitePalTags(EnumTag.HEALTH.getTag())
                                .addLitePalTags(EnumTag.HOLLYWOOD.getTag())
                                .addLitePalTags(EnumTag.SOME.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("And when I get bored, it's like the worst parts of me come out. I really veer to self-destructive tendencies quickly.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.SELF_DESTRUCTIVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Anytime that I've felt uninspired, I don't force myself to sit down and write. I only do it when I feel the impulse.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getTag())
                                .addLitePalTags(EnumTag.FELT.getTag())
                                .addLitePalTags(EnumTag.ANYTIME.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZOOEY_DESCHANEL.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The Internet's like one big bathroom wall with a lot of people who anonymously can say really mean things. It's fine, I believe in freedom of speech and I think people should think what they want, but I don't care to hear it.", false, true))
                                .addLitePalTags(EnumTag.BELIEVE.getTag())
                                .addLitePalTags(EnumTag.BIG.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("True love that lasts forever... yes, I do believe in it. My parents have been married for 40 years and my grandparents were married for 70 years. I come from a long line of true loves.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.LASTS.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Summer has always been my favorite season. I feel happier.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.HAPPIER.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I grew up believing my sister was from the planet Neptune and had been sent down to Earth to kill me.", false, true))
                                .addLitePalTags(EnumTag.PLANET.getTag())
                                .addLitePalTags(EnumTag.BEEN.getTag())
                                .addLitePalTags(EnumTag.HAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm into sincerity in music and sincerity in art. If it doesn't feel true, I don't want to do it. Things that are too dramatic scare me. I think that's why I don't always fit into the world of performing arts.", false, true))
                                .addLitePalTags(EnumTag.FEEL.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.SCARE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("From my perspective, probably women are won over by people who are sweet and respectful and courteous and kind and funny. I think those are the things that win women over.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .addLitePalTags(EnumTag.OVER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm always doing something musically - when I'm working or when I'm off.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.WORKING.getTag())
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm a person who gets better with practice. Getting older is awesome - because you get more practice.", false, true))
                                .addLitePalTags(EnumTag.PRACTICE.getTag())
                                .addLitePalTags(EnumTag.MORE.getTag())
                                .addLitePalTags(EnumTag.GETS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("One thing I love about Christmas music is that it has a tradition of warmth.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.MUSIC.getTag())
                                .addLitePalTags(EnumTag.I_LOVE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Nothing's better than a picnic.", false, true))
                                .addLitePalTags(EnumTag.BETTER.getTag())
                                .addLitePalTags(EnumTag.NOTHING.getTag())
                                .addLitePalTags(EnumTag.THAN.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZULEIKHA_ROBINSON.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The only time a friend has ever helped me in the industry was how I got my first job - that was through Mike Figgis.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.INDUSTRY.getTag())
                                .addLitePalTags(EnumTag.MIKE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("It took a lot of time to find my stride, and it was really humbling.", false, true))
                                .addLitePalTags(EnumTag.LOT.getTag())
                                .addLitePalTags(EnumTag.TOOK.getTag())
                                .addLitePalTags(EnumTag.HUMBLING.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I honestly never really watch the Emmys.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getTag())
                                .addLitePalTags(EnumTag.WATCH.getTag())
                                .addLitePalTags(EnumTag.HONESTLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I did go through a phase where I played videogames quite often, but I haven't in a few years.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getTag())
                                .addLitePalTags(EnumTag.GO.getTag())
                                .addLitePalTags(EnumTag.PHASE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I like to frequent antiques shops and flea markets like the Rose Bowl in Pasadena.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.PASADENA.getTag())
                                .addLitePalTags(EnumTag.MARKETS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("When I got the role in 'Homeland,' it really opened something up. Other people respected me more as an actor, doors were opened, and I understood for the first time that it wasn't personal. All that rejection wasn't personal.", false, true))
                                .addLitePalTags(EnumTag.ROLE.getTag())
                                .addLitePalTags(EnumTag.HOMELAND.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("'Lone Gunmen' was my first job, and I got a little cocky, thinking I'm brilliant and don't have to work that hard because it comes so naturally.", false, true))
                                .addLitePalTags(EnumTag.WORK.getTag())
                                .addLitePalTags(EnumTag.COCKY.getTag())
                                .addLitePalTags(EnumTag.BRILLIANT.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I'm mostly vegetarian.", false, true))
                                .addLitePalTags(EnumTag.VEGETARIAN.getTag())
                                .addLitePalTags(EnumTag.MOSTLY.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Only twice have I really had a hard time leaving a character. The first was my character in 'Rome' and then in 'Homeland.'", false, true))
                                .addLitePalTags(EnumTag.ROME.getTag())
                                .addLitePalTags(EnumTag.HOMELAND.getTag())
                                .addLitePalTags(EnumTag.HAD.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I do like to play the darker characters; I don't really know why.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getTag())
                                .addLitePalTags(EnumTag.CHARACTERS.getTag())
                                .addLitePalTags(EnumTag.DARKER.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        appDataBuilders.add(
                new AppDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLanguage(EnumLanguage.ENGLISH.getLanguage())
                        .setAuthor(EnumAuthor.ZYGMUNT_BAUMAN.getAuthor())
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("In a liquid modern life there are no permanent bonds, and any that we take up for a time must be tied loosely so that they can be untied again, as quickly and as effortlessly as possible, when circumstances change - as they surely will in our liquid modern society, over and over again.", false, true))
                                .addLitePalTags(EnumTag.SURELY.getTag())
                                .addLitePalTags(EnumTag.QUICKLY.getTag())
                                .addLitePalTags(EnumTag.BONDS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("We live in a globalising world. That means that all of us, consciously or not, depend on each other. Whatever we do or refrain from doing affects the lives of people who live in places we'll never visit.", false, true))
                                .addLitePalTags(EnumTag.DOING.getTag())
                                .addLitePalTags(EnumTag.OTHER.getTag())
                                .addLitePalTags(EnumTag.MEANS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("This awful concept of underclass is really horrifying. You're not lower class, you are excluded - outside.", false, true))
                                .addLitePalTags(EnumTag.AWFUL.getTag())
                                .addLitePalTags(EnumTag.CONCEPT.getTag())
                                .addLitePalTags(EnumTag.LOWER.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("As far as love is concerned, possession, power, fusion and disenchantment are the Four Horsemen of the Apocalypse.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getTag())
                                .addLitePalTags(EnumTag.CONCERNED.getTag())
                                .addLitePalTags(EnumTag.POSSESSION.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Relationships, like cars, should undergo regular services to make sure they are still roadworthy.", false, true))
                                .addLitePalTags(EnumTag.RELATIONSHIPS.getTag())
                                .addLitePalTags(EnumTag.STILL.getTag())
                                .addLitePalTags(EnumTag.SURE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Like the phoenix, socialism is reborn from every pile of ashes left day in, day out, by burnt-out human dreams and charred hopes.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getTag())
                                .addLitePalTags(EnumTag.ASHES.getTag())
                                .addLitePalTags(EnumTag.PILE.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("Why do I write books? Why do I think? Why should I be passionate? Because things could be different, they could be made better.", false, true))
                                .addLitePalTags(EnumTag.THINK.getTag())
                                .addLitePalTags(EnumTag.PASSIONATE.getTag())
                                .addLitePalTags(EnumTag.I_THINK.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The task for sociology is to come to the help of the individual. We have to be in service of freedom. It is something we have lost sight of.", false, true))
                                .addLitePalTags(EnumTag.HELP.getTag())
                                .addLitePalTags(EnumTag.TASK.getTag())
                                .addLitePalTags(EnumTag.INDIVIDUAL.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("The carrying power of a bridge is not the average strength of the pillars, but the strength of the weakest pillar. I have always believed that you do not measure the health of a society by GNP but by the condition of its worst off.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getTag())
                                .addLitePalTags(EnumTag.AVERAGE.getTag())
                                .addLitePalTags(EnumTag.PILLARS.getTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new AppDataBuilder.QuoteBuilder()
                                .setQuote(new Quote("I was leftwing, I am leftwing, and I will die leftwing.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getTag())
                                .addLitePalTags(EnumTag.DIE.getTag())
                                .addLitePalTags(EnumTag.WILL.getTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        return appDataBuilders;
    }

    public static ArrayList<AppDataBuilder> getAllQuotes() {
        ArrayList<AppDataBuilder> appDataBuilders = new ArrayList<>();
        if (!AllSettingsManager.isNullOrEmpty(SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_APP_DATA_BUILDER))) {
            DataAppDataBuilder dataAppDataBuilder = DataAppDataBuilder.convertFromStringToObject(SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_APP_DATA_BUILDER), DataAppDataBuilder.class);
            appDataBuilders = dataAppDataBuilder.getAppDataBuilders();
        }
        return appDataBuilders;
    }

//    public static ArrayList<AppDataBuilder> getAllQuoteAdvertises() {
//        ArrayList<AppDataBuilder> advertises = new ArrayList<AppDataBuilder>();
//        advertises.add(new AppDataBuilder(new Language(), new Author(), new ArrayList<AppDataBuilder.QuoteBuilder>(),false));
//        advertises.add(new AppDataBuilder("Add 2", false, false, null, null));
//        advertises.add(new AppDataBuilder("Add 3", false, false, null, null));
//        advertises.add(new AppDataBuilder("Add 4", false, false, null, null));
//        advertises.add(new AppDataBuilder("Add 5", false, false, null, null));
//        return advertises;
//    }

    /**********************
     * Methods for Author *
     **********************/
    public static AppDataBuilder.QuoteBuilder updateQuote(AppDataBuilder appDataBuilder, AppDataBuilder.QuoteBuilder quoteBuilder) {
        //Update data into database
        int id = quoteBuilder.getQuote().update(quoteBuilder.getQuote().getId());
        //Search the updated data from database
        Quote quoteUpdated = Quote.find(Quote.class, quoteBuilder.getQuote().getId());
        //Update data into adapter view
        if ((id == 1) && (quoteUpdated != null) && (quoteUpdated.isFavourite() == quoteBuilder.getQuote().isFavourite())) {
            Log.d(TAG, "Updated quote(success response): " + quoteUpdated.toString());
            ArrayList<AppDataBuilder> appDataBuilders = getAllQuotes();
            for (AppDataBuilder dataBuilder : appDataBuilders) {
                if (dataBuilder.getAuthor().getAuthorName().equalsIgnoreCase(appDataBuilder.getAuthor().getAuthorName())) {
                    Log.d(TAG, "Updated quote: " + "found author");
                    int quotePosition = getQuotePosition(dataBuilder.getQuoteBuilders(), quoteBuilder);
                    Log.d(TAG, "Updated quote(id session): " + quotePosition);
                    if (quotePosition != -1) {
                        dataBuilder.getQuoteBuilders().remove(quotePosition);
                        quoteBuilder.setQuote(quoteUpdated);
                        dataBuilder.getQuoteBuilders().add(quotePosition, quoteBuilder);
                        Log.d(TAG, "Updated quote: " + dataBuilder.getQuoteBuilders().get(quotePosition).toString());

                        //Set updated value into session
                        DataAppDataBuilder dataAppDataBuilder = new DataAppDataBuilder(appDataBuilders);
                        SessionManager.setStringSetting(getGlobalContext(), SESSION_DATA_APP_DATA_BUILDER, DataAppDataBuilder.convertFromObjectToString(dataAppDataBuilder));
                        //Log.d(TAG, "Updated quote(All session): " + SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_APP_DATA_BUILDER));
                        //Set update to the quote of the day item
                        QuoteOfTheDay quoteOfTheDay = QuoteOfTheDay.convertFromStringToObject(SessionManager.getStringSetting(getGlobalContext(), SESSION_QUOTE_OF_THE_DAY), QuoteOfTheDay.class);
                        if (quoteOfTheDay != null && quoteOfTheDay.getQuoteBuilder().getQuote().getQuoteDescription().equalsIgnoreCase(quoteUpdated.getQuoteDescription())) {
                            quoteOfTheDay.setAppDataBuilder(dataBuilder);
                            quoteOfTheDay.setQuoteBuilder(quoteBuilder);
                            SessionManager.setStringSetting(getGlobalContext(), SESSION_QUOTE_OF_THE_DAY, QuoteOfTheDay.convertFromObjectToString(quoteOfTheDay));
                        }

                        return quoteBuilder;
                    }
                }
            }
        }
        return null;
    }

    public static int getQuotePosition(ArrayList<AppDataBuilder.QuoteBuilder> quoteBuilders, AppDataBuilder.QuoteBuilder quoteBuilder) {
        for (int i = 0; i < quoteBuilders.size(); i++) {
            if (quoteBuilders.get(i).getQuote().getQuoteDescription().equalsIgnoreCase(quoteBuilder.getQuote().getQuoteDescription())) {
                return i;
            }
        }
        return -1;
    }

    public static AppDataBuilder getAuthorData(int dataPosition) {
        ArrayList<AppDataBuilder> appDataBuilders = getAllQuotes();
        if (dataPosition < appDataBuilders.size()) {
            return appDataBuilders.get(dataPosition);
        }
        return null;
    }

    public static ArrayList<GlazyCard> getAllGlazyCards(ArrayList<AppDataBuilder> appDataBuilders) {

        ArrayList<GlazyCard> glazyCards = new ArrayList<GlazyCard>();
        GlazyCard glazyCard;
        AppDataBuilder quote;
        GlazyImageView.ImageCutType lastTransitionType = GlazyImageView.ImageCutType.LINE_POSITIVE;
        for (int i = 0; i < appDataBuilders.size(); i++) {

            quote = appDataBuilders.get(i);
            glazyCard = new GlazyCard()
                    .withTitle(quote.isData() ? quote.getAuthor().getAuthorName() : "Advertise")
                    .withSubTitle(quote.isData() ? quote.getAuthor().getOccupation() : "")
                    .withOccupation(quote.isData() ? quote.getAuthor().getOccupation() : "")
                    .withNationality(quote.isData() ? quote.getAuthor().getNationality() : "")
                    .withBirthDate(quote.isData() ? quote.getAuthor().getBirthDate() : "")
                    .withDeathDate(quote.isData() ? quote.getAuthor().getDeathDate() : "")
                    .withDescription(quote.isData() ? (quote.getQuoteBuilders().size() > 0 ? quote.getQuoteBuilders().get(0).getQuote().getQuoteDescription() : "") : "")
                    .withImageRes((quote.getAuthor().getProfileImage() != -1) ? quote.getAuthor().getProfileImage() : R.drawable.avatar_male)
                    .withImageCutType(lastTransitionType)
                    .withImageCutHeightDP(50);
            glazyCards.add(glazyCard);

            if (lastTransitionType == GlazyImageView.ImageCutType.LINE_POSITIVE) {
                lastTransitionType = GlazyImageView.ImageCutType.ARC;
            } else if (lastTransitionType == GlazyImageView.ImageCutType.ARC) {
                lastTransitionType = GlazyImageView.ImageCutType.WAVE;
            } else if (lastTransitionType == GlazyImageView.ImageCutType.WAVE) {
                lastTransitionType = GlazyImageView.ImageCutType.LINE_POSITIVE;
            }
        }

        return glazyCards;
    }

    /*************************
     * Methods for Favourite *
     *************************/
    public static ArrayList<AppDataBuilder> getAllFavouriteQuotes() {
        ArrayList<AppDataBuilder> appDataBuilders = getAllQuotes();
        ArrayList<AppDataBuilder> favouriteDataBuilders = new ArrayList<>();

        for (AppDataBuilder appDataBuilder : appDataBuilders) {
            AppDataBuilder tempAppDataBuilder = appDataBuilder;
            ArrayList<AppDataBuilder.QuoteBuilder> tempQuoteBuilders = new ArrayList<>();
            for (AppDataBuilder.QuoteBuilder quoteBuilder : appDataBuilder.getQuoteBuilders()) {
                if (quoteBuilder.getQuote().isFavourite()) {
                    tempQuoteBuilders.add(quoteBuilder);
                }
            }
            if (tempQuoteBuilders.size() > 0) {
                tempAppDataBuilder.setQuoteBuilders(tempQuoteBuilders);
                favouriteDataBuilders.add(tempAppDataBuilder);
            }
        }

        return favouriteDataBuilders;
    }

    /*******************
     * Methods for Tag *
     *******************/
//    public static ArrayList<Tag> insetTags(ArrayList<Tag> litePalTags) {
//        ArrayList<Tag> mLitePalTags = new ArrayList<>();
//        for (int i = 0; i < litePalTags.size(); i++) {
//            mLitePalTags.add(insetTag(litePalTags.get(i)));
//        }
//        return mLitePalTags;
//    }
    public static Tag insetTag(Tag tag, DataInputListener dataInputListener) {
        Tag mSavedTag = getTag(tag.getTagName());
        if (mSavedTag != null) {
            Log.d(TAG, "insetTag(existing): " + mSavedTag.toString());
            if (dataInputListener != null) {
                dataInputListener.InputListener(mSavedTag);
            }
            return mSavedTag;
        } else {
            if (tag.save()) {
                Tag savedTag = getTag(tag.getTagName());
                if (savedTag != null) {
                    Log.d(TAG, "insetTag(new): " + savedTag.toString());
                    if (dataInputListener != null) {
                        dataInputListener.InputListener(savedTag);
                    }
                    return savedTag;
                }
            }
        }
        return null;
    }

    public static Tag getTag(String tagName) {
        List<Tag> savedTags = DataSupport.where("tagName = ?", tagName).find(Tag.class);
        if (savedTags != null) {
            if (savedTags.size() == 1) {
                Log.d(TAG, "getTag: " + savedTags.get(0).toString());
                return savedTags.get(0);
            }
        }
        return null;
    }

    /**********************
     * Methods for Author *
     **********************/
    public static Author insetAuthor(Author author, DataInputListener dataInputListener) {
//        Author savedAuthor = getAuthor(author.getAuthorName());
//        if (savedAuthor != null) {
//            Log.d(TAG, "insetAuthor(existing): " + savedAuthor.toString());
//            if(InputListener !=null){
//                InputListener.InputListener(savedAuthor);
//            }
//            return savedAuthor;
//        } else {
        if (author.save()) {
            Author mSavedAuthor = getAuthor(author.getAuthorName());
            if (mSavedAuthor != null) {
                Log.d(TAG, "insetAuthor(new): " + mSavedAuthor.toString());
                if (dataInputListener != null) {
                    dataInputListener.InputListener(mSavedAuthor);
                }
                return mSavedAuthor;
            }
        }
//        }
        return null;
    }

    public static Author getAuthor(String authorName) {
        List<Author> savedAuthors = DataSupport.where("authorName = ?", authorName).find(Author.class);
        if (savedAuthors != null) {
            if (savedAuthors.size() == 1) {
                Log.d(TAG, "getAuthor: " + savedAuthors.get(0).toString());
                return savedAuthors.get(0);
            }
        }
        return null;
    }

    /************************
     * Methods for Language *
     ************************/
    public static Language insetLanguage(Language language, DataInputListener dataInputListener) {
        Log.d(TAG, "TAG-insetLanguage-1");
        Language savedLanguage = getLanguage(language.getLanguageName());
        Log.d(TAG, "TAG-insetLanguage-2");

        if (savedLanguage != null) {
            Log.d(TAG, "insetLanguage(Existing): " + savedLanguage.toString());
            Log.d(TAG, "TAG-insetLanguage-3");
            if (dataInputListener != null) {
                Log.d(TAG, "TAG-insetLanguage-4");
                dataInputListener.InputListener(savedLanguage);
                Log.d(TAG, "TAG-insetLanguage-5");
            }
            Log.d(TAG, "TAG-insetLanguage-6");

            return savedLanguage;
        } else {
            Log.d(TAG, "TAG-insetLanguage-7");
            if (language.save()) {
                Log.d(TAG, "TAG-insetLanguage-8");
                Language mSavedLanguage = getLanguage(language.getLanguageName());
                Log.d(TAG, "TAG-insetLanguage-9");

                if (mSavedLanguage != null) {
                    Log.d(TAG, "TAG-insetLanguage-10");
                    Log.d(TAG, "insetLanguage(new): " + language.toString());

                    if (dataInputListener != null) {
                        Log.d(TAG, "TAG-insetLanguage-11");
                        dataInputListener.InputListener(mSavedLanguage);
                        Log.d(TAG, "TAG-insetLanguage-12");
                    }
                    Log.d(TAG, "TAG-insetLanguage-13");

                    return mSavedLanguage;
                }
            }
        }
        return null;
    }

    public static Language getLanguage(String languageName) {
        Log.d(TAG, "TAG-getLanguage-1");
        List<Language> savedLanguage = DataSupport.where("languageName = ?", languageName).find(Language.class);
        Log.d(TAG, "TAG-getLanguage-2");

        if (savedLanguage != null && savedLanguage.size() == 1) {
            Log.d(TAG, "getLanguage: " + savedLanguage.get(0).toString());
            return savedLanguage.get(0);
        }
        return null;
    }

    /*********************
     * Methods for Quote *
     *********************/
    public static Quote insertQuote(Quote quote, DataInputListener dataInputListener) {
//        Quote savedQuote = getQuote(quote.getQuoteDescription());
//        if (savedQuote != null) {
//            Log.d(TAG, "insetQuote(existing): " + savedQuote.toString());
//            return savedQuote;
//        } else {
        if (quote.save()) {
            Quote mSavedQuote = getQuote(quote.getQuoteDescription());
            if (mSavedQuote != null) {
                Log.d(TAG, "insetQuote(new): " + mSavedQuote.toString());
                if (dataInputListener != null) {
                    dataInputListener.InputListener(mSavedQuote);
                }
                return mSavedQuote;
            }
//            return quote;
//            }
        }
        return null;
    }

    public static Quote getQuote(String quoteDescription) {
        List<Quote> savedQuotes = DataSupport.where("quoteDescription = ?", quoteDescription).find(Quote.class);
        if (savedQuotes != null) {
            if (savedQuotes.size() == 1) {
                Log.d(TAG, "getQuote(existing): " + savedQuotes.get(0).toString());
                return savedQuotes.get(0);
            }
        }
        return null;
    }

    /********************************************
     * Methods for Quote, Language, Author, Tag *
     ********************************************/
    public static void insertQuoteLanguageAuthorTag(AppDataBuilder appDataBuilder, DataInputListener dataInputListener) {
        for (int i = 0; i < appDataBuilder.getQuoteBuilders().size(); i++) {
            AppDataBuilder.QuoteBuilder quoteBuilder = appDataBuilder.getQuoteBuilders().get(i);

            Log.d(TAG, "insertQuoteLanguageAuthorTag(quote)(inserting): " + quoteBuilder.getQuote().toString());
            for (int j = 0; j < quoteBuilder.getTags().size(); j++) {
                QuoteLanguageAuthorTag quoteLanguageAuthorTag = new QuoteLanguageAuthorTag(quoteBuilder.getQuote().getId(), appDataBuilder.getLanguage().getId(), appDataBuilder.getAuthor().getId(), quoteBuilder.getTags().get(j).getId());

//                QuoteLanguageAuthorTag mSavedData = getQuoteLanguageAuthorTag(quoteLanguageAuthorTag.getMd5());
//                if (mSavedData == null) {
                Log.d(TAG, "insertQuoteLanguageAuthorTag(new): " + quoteLanguageAuthorTag.toString());
                if (quoteLanguageAuthorTag.save()) {
//                        QuoteLanguageAuthorTag mSavedData = getQuoteLanguageAuthorTag(quoteLanguageAuthorTag.getMd5());

                    if (dataInputListener != null) {
                        dataInputListener.InputListener(quoteLanguageAuthorTag);
                    }
                }

//                }
            }
        }
    }

    public static QuoteLanguageAuthorTag getQuoteLanguageAuthorTag(String md5) {
        List<QuoteLanguageAuthorTag> savedQuotes = DataSupport.where("md5 = ?", md5).find(QuoteLanguageAuthorTag.class);
        if (savedQuotes != null) {
            if (savedQuotes.size() == 1) {
                Log.d(TAG, "getQuoteLanguageAuthorTag(existing): " + savedQuotes.get(0).toString());
                return savedQuotes.get(0);
            }
        }
        return null;
    }
}