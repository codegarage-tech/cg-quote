package tech.codegarage.quotes.model.database;

import android.util.Log;

import com.kannan.glazy.GlazyCard;
import com.kannan.glazy.views.GlazyImageView;
import com.reversecoder.library.storage.SessionManager;
import com.reversecoder.library.util.AllSettingsManager;

import org.litepal.crud.DataSupport;

import java.util.ArrayList;
import java.util.List;

import tech.codegarage.quotes.R;

import static tech.codegarage.quotes.application.QuoteApp.getGlobalContext;
import static tech.codegarage.quotes.util.AllConstants.SESSION_DATA_DATA_BUILDER;
import static tech.codegarage.quotes.util.AllConstants.SESSION_QUOTE_OF_THE_DAY;

public class LitePalDataHandler {

    private static String TAG = LitePalDataHandler.class.getSimpleName();

    /**************
     * Data input *
     **************/
    public static ArrayList<LitePalDataBuilder> initAllQuotes(DataInputListener dataInputListener) {
        ArrayList<LitePalDataBuilder> litePalDataBuilders = new ArrayList<>();

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.APJ_ABDUL_KALAM.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Teaching is a very noble profession that shapes the character, caliber, and future of an individual. If the people remember me as a good teacher, that will be the biggest honour for me.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.TEACHER.getLitePalTag())
                                .addLitePalTags(EnumTag.CHARACTER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We should not give up and we should not allow the problem to defeat us.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DEFEAT.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Let us sacrifice our today so that our children can have a better tomorrow.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.TODAY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you want to shine like a sun, first burn like a sun.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.SUN.getLitePalTag())
                                .addLitePalTags(EnumTag.SHINE.getLitePalTag())
                                .addLitePalTags(EnumTag.WANT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If a country is to be corruption free and become a nation of beautiful minds, I strongly feel there are three key societal members who can make a difference. They are the father, the mother and the teacher.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FAMILY.getLitePalTag())
                                .addLitePalTags(EnumTag.BEAUTIFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.FATHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To succeed in your mission, you must have single-minded devotion to your goal.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.GOAL.getLitePalTag())
                                .addLitePalTags(EnumTag.MISSION.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Look at the sky. We are not alone. The whole universe is friendly to us and conspires only to give the best to those who dream and work.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .addLitePalTags(EnumTag.ALONE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Never stop fighting until you arrive at your destined place - that is, the unique you. Have an aim in life, continuously acquire knowledge, work hard, and have perseverance to realise the great life.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.PERSEVERANCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Science is a beautiful gift to humanity; we should not distort it.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.BEAUTIFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.SCIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIFT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The bird is powered by its own life and by its motivation.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.BIRD.getLitePalTag())
                                .buildQuotes()
                        )
                        .setDataInputListener(dataInputListener)
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ALBERT_CAMUS.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Don't walk behind me; I may not lead. Don't walk in front of me; I may not follow. Just walk Autumn is a second spring when every leaf is a flower.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.FLOWER.getLitePalTag())
                                .addLitePalTags(EnumTag.SPRING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Don't walk behind me; I may not lead. Don't walk in front of me; I may not follow. Just walk beside me and be my friend.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FRIENDSHIP.getLitePalTag())
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.WALK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Blessed are the hearts that can bend; they shall never be broken.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.MOVING_ON.getLitePalTag())
                                .addLitePalTags(EnumTag.BLESSED.getLitePalTag())
                                .addLitePalTags(EnumTag.BROKEN.getLitePalTag())
                                .buildQuotes()
                        )

                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The only way to deal with an unfree world is to become so absolutely free that your very existence is an act of rebellion.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.FREE.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In the depth of winter I finally learned that there was in me an invincible summer.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.WINTER.getLitePalTag())
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A man without ethics is a wild beast loosed upon this world.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .addLitePalTags(EnumTag.ETHICS.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You will never be happy if you continue to search for what happiness consists of. You will never live if you are looking for the meaning of life.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPINESS.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Integrity has no need of rules.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.INTEGRITY.getLitePalTag())
                                .addLitePalTags(EnumTag.RULES.getLitePalTag())
                                .addLitePalTags(EnumTag.NEED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Real generosity toward the future lies in giving all to the present.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVING.getLitePalTag())
                                .addLitePalTags(EnumTag.GENEROSITY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The evil that is in the world almost always comes of ignorance, and good intentions may do as much harm as malevolence if they lack understanding.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.GOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.IGNORANCE.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .setDataInputListener(dataInputListener)
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ARISTOTLE.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is during our darkest moments that we must focus to see the light.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.LIGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.FOCUS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Quality is not an act, it is a habit.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.QUALITY.getLitePalTag())
                                .addLitePalTags(EnumTag.HABIT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The roots of education are bitter, but the fruit is sweet.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.ROOTS.getLitePalTag())
                                .addLitePalTags(EnumTag.SWEET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is the mark of an educated mind to be able to entertain a thought without accepting it.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.THOUGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Excellence is an art won by training and habituation. We do not act rightly because we have virtue or excellence, but we rather have those because we have acted rightly. We are what we repeatedly do. Excellence, then, is not an act but a habit.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.ART.getLitePalTag())
                                .addLitePalTags(EnumTag.TRAINING.getLitePalTag())
                                .addLitePalTags(EnumTag.EXCELLENCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Pleasure in the job puts perfection in the work.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.JOB.getLitePalTag())
                                .addLitePalTags(EnumTag.PERFECTION.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is no great genius without some touch of madness.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.INTELLIGENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.GREAT.getLitePalTag())
                                .addLitePalTags(EnumTag.GENIUS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Love is composed of a single soul inhabiting two bodies.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.LOVE_IS.getLitePalTag())
                                .addLitePalTags(EnumTag.SOUL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The one exclusive sign of thorough knowledge is the power of teaching.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.TEACHER.getLitePalTag())
                                .addLitePalTags(EnumTag.KNOWLEDGE.getLitePalTag())
                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The worst form of inequality is to try to make unequal things equal.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.EQUALITY.getLitePalTag())
                                .addLitePalTags(EnumTag.INEQUALITY.getLitePalTag())
                                .addLitePalTags(EnumTag.TRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .setDataInputListener(dataInputListener)
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.AUDREY_HEPBURN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nothing is impossible, the word itself says 'I'm possible'!", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The beauty of a woman must be seen from in her eyes, because that is the doorway to her heart, the place where love resides.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.BEAUTY.getLitePalTag())
                                .addLitePalTags(EnumTag.EYES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For beautiful eyes, look for the good in others; for beautiful lips, speak only words of kindness; and for poise, walk with the knowledge that you are never alone.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.KINDNESS.getLitePalTag())
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.BEAUTIFUL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The most important thing is to enjoy your life - to be happy - it's all that matters.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.BE_HAPPY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The beauty of a woman is not in a facial mode but the true beauty in a woman is reflected in her soul. It is the caring that she lovingly gives the passion that she shows. The beauty of a woman grows with the passing years.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.BEAUTY.getLitePalTag())
                                .addLitePalTags(EnumTag.PASSION.getLitePalTag())
                                .addLitePalTags(EnumTag.SOUL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I believe in pink. I believe that laughing is the best calorie burner. I believe in kissing, kissing a lot. I believe in being strong when everything seems to be going wrong. I believe that happy girls are the prettiest girls. I believe that tomorrow is another day and I believe in miracles.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The best thing to hold onto in life is each other. ", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The beauty of a woman is not in the clothes she wears, the figure that she carries or the way she combs her hair.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.BEAUTY.getLitePalTag())
                                .addLitePalTags(EnumTag.HAIR.getLitePalTag())
                                .addLitePalTags(EnumTag.WOMAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I believe in manicures. I believe in overdressing. I believe in primping at leisure and wearing lipstick. I believe in pink. I believe happy girls are the prettiest girls. I believe that tomorrow is another day, and... I believe in miracles.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.TOMORROW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Let's face it, a nice creamy chocolate cake does a lot for a lot of people; it does for me.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.CAKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .setDataInputListener(dataInputListener)
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ABRAHAM_LINCOLN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If this is coffee, please bring me some tea; but if this is tea, please bring me some coffee.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.COFFEE.getLitePalTag())
                                .addLitePalTags(EnumTag.TEA.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Character is like a tree and reputation like a shadow. The shadow is what we think of it; the tree is the real thing.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.CHARACTER.getLitePalTag())
                                .addLitePalTags(EnumTag.TREE.getLitePalTag())
                                .addLitePalTags(EnumTag.SHADOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I am a slow walker, but I never walk back.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.I_AM.getLitePalTag())
                                .addLitePalTags(EnumTag.WALK.getLitePalTag())
                                .addLitePalTags(EnumTag.SLOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My dream is of a place and a time where America will once again be seen as the last best hope of earth.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.HOPE.getLitePalTag())
                                .addLitePalTags(EnumTag.TIME.getLitePalTag())
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Be sure you put your feet in the right place, then stand firm.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.STRENGTH.getLitePalTag())
                                .addLitePalTags(EnumTag.STAND.getLitePalTag())
                                .addLitePalTags(EnumTag.FEET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You cannot escape the responsibility of tomorrow by evading it today.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.TODAY.getLitePalTag())
                                .addLitePalTags(EnumTag.TOMORROW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("No man has a good enough memory to be a successful liar.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.GOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All that I am, or hope to be, I owe to my angel mother.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.HOPE.getLitePalTag())
                                .addLitePalTags(EnumTag.MOTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.I_AM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nearly all men can stand adversity, but if you want to test a man's character, give him power.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.CHARACTER.getLitePalTag())
                                .addLitePalTags(EnumTag.ADVERSITY.getLitePalTag())
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("America will never be destroyed from the outside. If we falter and lose our freedoms, it will be because we destroyed ourselves.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.AMERICA.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .setDataInputListener(dataInputListener)
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ALDOUS_HUXLEY.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is only one corner of the universe you can be certain of improving, and that's your own self.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There are things known and there are things unknown, and in between are the doors of perception.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The secret of genius is to carry the spirit of the child into old age, which means never losing your enthusiasm.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("After silence, that which comes nearest to expressing the inexpressible is music.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To travel is to discover that everyone is wrong about other countries.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Experience is not what happens to you; it's what you do with what happens to you.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Facts do not cease to exist because they are ignored.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The more powerful and original a mind, the more it will incline towards the religion of solitude.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All gods are homemade, and it is we who pull their strings, and so, give them the power to pull ours.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A democracy which makes or even effectively prepares for modern, scientific war must necessarily cease to be democratic. No country can be really well prepared for modern war unless it is governed by a tyrant, at the head of a highly trained and perfectly obedient bureaucracy.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .setDataInputListener(dataInputListener)
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ALEXANDER_HAMILTON.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Learn to think continentally.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.LEARN.getLitePalTag())
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Real liberty is neither found in despotism or the extremes of democracy, but in moderate governments.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
                                .addLitePalTags(EnumTag.LIBERTY.getLitePalTag())
                                .addLitePalTags(EnumTag.REAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In framing a government which is to be administered by men over men, the great difficulty lies in this: you must first enable the government to control the governed; and in the next place, oblige it to control itself.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.GREAT.getLitePalTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.MEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A promise must never be broken.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.BROKEN.getLitePalTag())
                                .addLitePalTags(EnumTag.PROMISE.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's not tyranny we desire; it's a just, limited, federal government.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.GOVERNMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.DESIRE.getLitePalTag())
                                .addLitePalTags(EnumTag.TYRANNY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I never expect to see a perfect work from an imperfect man.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .addLitePalTags(EnumTag.PERFECT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I think the first duty of society is justice.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.JUSTICE.getLitePalTag())
                                .addLitePalTags(EnumTag.SOCIETY.getLitePalTag())
                                .addLitePalTags(EnumTag.FIRST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A well adjusted person is one who makes the same mistake twice without getting nervous.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.MISTAKE.getLitePalTag())
                                .addLitePalTags(EnumTag.NERVOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.SAME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Unless your government is respectable, foreigners will invade your rights; and to maintain tranquillity, it must be respectable - even to observe neutrality, you must have a strong government.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.STRONG.getLitePalTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is a certain enthusiasm in liberty, that makes human nature rise above itself, in acts of bravery and heroism.", false, true))
                                .setDataInputListener(dataInputListener)
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.LIBERTY.getLitePalTag())
                                .addLitePalTags(EnumTag.RISE.getLitePalTag())
                                .buildQuotes()
                        )
                        .setDataInputListener(dataInputListener)
                        .buildAuthor()
        );
//        ////////////////////////////////
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ALEXANDER_POPE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The greatest magnifying glasses in the world are a man's own eyes when they look upon his own person.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fools rush in where angels fear to tread.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All nature is but art unknown to thee.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No one should be ashamed to admit they are wrong, which is but saying, in other words, that they are wiser today than they were yesterday.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No woman ever hates a man for being in love with her, but many a woman hate a man for being a friend to her.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Teach me to feel another's woe, to hide the fault I see, that mercy I to others show, that mercy show to me.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Charms strike the sight, but merit wins the soul.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("On life's vast ocean diversely we sail. Reasons the card, but passion the gale.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To be angry is to revenge the faults of others on ourselves.\n", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To err is human; to forgive, divine.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ARNOLD_SCHWARZENEGGER.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The worst thing I can be is the same as everybody else. I hate that.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's simple, if it jiggles, it's fat.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Bodybuilding is much like any other sport. To be successful, you must dedicate yourself 100% to your training, diet and mental approach.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Help others and give something back. I guarantee you will discover that while public service improves the lives and the world around you, its greatest reward is the enrichment and new meaning it will bring your own life.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The mind is the limit. As long as the mind can envision the fact that you can do something, you can do it, as long as you really believe 100 percent.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The future is green energy, sustainability, renewable energy.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Milk is for babies. When you grow up you have to drink beer.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For me life is continuously being hungry. The meaning of life is not simply to exist, to survive, but to move ahead, to go up, to achieve, to conquer.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Just remember, you can't climb the ladder of success with your hands in your pockets.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Strength does not come from winning. Your struggles develop your strengths. When you go through hardships and decide not to surrender, that is strength.", false, true))
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .addLitePalTags(EnumTag..getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BARACK_OBAMA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Change will not come if we wait for some other person or some other time. We are the ones we've been waiting for. We are the change that we seek.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I see Americans of every party, every background, every faith who believe that we are stronger together: black, white, Latino, Asian, Native American; young, old; gay, straight; men, women, folks with disabilities, all pledging allegiance under the same proud flag to this big, bold country that we love. That's what I see. That's the America I know!", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We need to reject any politics that targets people because of race or religion. This isn't a matter of political correctness. It's a matter of understanding what makes us strong. The world respects us not just for our arsenal; it respects us for our diversity and our openness and the way we respect every faith.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Let us remember we are all part of one American family. We are united in common values, and that includes belief in equality under the law, basic respect for public order, and the right of peaceful protest.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you're walking down the right path and you're willing to keep walking, eventually you'll make progress.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If the people cannot trust their government to do the job for which it exists - to protect them and to promote their common welfare - all else is lost.\n", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The future rewards those who press on. I don't have time to feel sorry for myself. I don't have time to complain. I'm going to press on.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Money is not the only answer, but it makes a difference.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("America isn't Congress. America isn't Washington. America is the striving immigrant who starts a business, or the mom who works two low-wage jobs to give her kid a better life. America is the union leader and the CEO who put aside their differences to make the economy stronger.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("After a century of striving, after a year of debate, after a historic vote, health care reform is no longer an unmet promise. It is the law of the land.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BEN_SHAPIRO.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("During the Great Depression, levels of crime actually dropped. During the 1920s, when life was free and easy, so was crime. During the 1930s, when the entire American economy fell into a government-owned alligator moat, crime was nearly non-existent. During the 1950s and 1960s, when the economy was excellent, crime rose again.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Socialism violates at least three of the Ten Commandments: It turns government into God, it legalizes thievery and it elevates covetousness. Discussions of income inequality, after all, aren't about prosperity but about petty spite. Why should you care how much money I make, so long as you are happy?", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Distrust of government isn't baseless cynicism. It's realism.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Matt Damon's anti-fracking diatribe was funded by the royal family of the United Arab Emirates.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Capitalism requires individual responsibility and accountability. People are seen as atomized units in a capitalist system - they are either useful, or they are not. They are not seen racially or ethnically or religiously. They consume and they produce, and those are their only relevant characteristics.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The story of Detroit's bankruptcy was simple enough: Allow capitalism to grow the city, campaign against income inequality, tax the job creators until they flee, increase government spending in order to boost employment, promise generous pension plans to keep people voting for failure. Rinse, wash and repeat.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Socialism has no moral justification whatsoever; poor people are not morally superior to rich people, nor are they owed anything by rich people simply because of their lack of success. Charity is not a socialist concept - it is a religious one, an acknowledgment of God's sovereignty over property, a sovereignty the Left utterly rejects.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every so often, we all gaze into the abyss. It's a depressing fact of life that eventually the clock expires; eventually the sand in the hourglass runs out. It's the leaving behind of everything that matters to us that hurts the most.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Socialism states that you owe me something simply because I exist. Capitalism, by contrast, results in a sort of reality-forced altruism: I may not want to help you, I may dislike you, but if I don't give you a product or service you want, I will starve. Voluntary exchange is more moral than forced redistribution.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Freedom of speech and thought matters, especially when it is speech and thought with which we disagree. The moment the majority decides to destroy people for engaging in thought it dislikes, thought crime becomes a reality.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BENJAMIN_DISRAELI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A great city, whose image dwells in the memory of man, is the type of some great idea. Rome represents conquest; Faith hovers over the towers of Jerusalem; and Athens embodies the pre-eminent quality of the antique world, Art.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Power has only one duty - to secure the social welfare of the People.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never apologize for showing feeling. When you do so, you apologize for the truth.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The secret of success is constancy to purpose.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Like all great travellers, I have seen more than I remember, and remember more than I have seen.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Youth is a blunder; Manhood a struggle, Old Age a regret.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nurture your minds with great thoughts. To believe in the heroic makes heroes.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Seeing much, suffering much, and studying much, are the three pillars of learning.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never complain and never explain.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Courage is fire, and bullying is smoke.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BENJAMIN_FRANKLIN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Without freedom of thought, there can be no such thing as wisdom - and no such thing as public liberty without freedom of speech.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Early to bed and early to rise makes a man healthy, wealthy and wise.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Either write something worth reading or do something worth writing.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("By failing to prepare, you are preparing to fail.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Wine is constant proof that God loves us and loves to see us happy.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We are all born ignorant, but one must work hard to remain stupid.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Well done is better than well said.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Without continual growth and progress, such words as improvement, achievement, and success have no meaning.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Tell me and I forget. Teach me and I remember. Involve me and I learn.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An investment in knowledge pays the best interest.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BERTRAND_RUSSELL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would never die for my beliefs because I might be wrong.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Science is what you know, philosophy is what you don't know.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Men are born ignorant, not stupid. They are made stupid by education.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The only thing that will redeem mankind is cooperation.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The world is full of magical things patiently waiting for our wits to grow sharper.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fear is the main source of superstition, and one of the main sources of cruelty. To conquer fear is the beginning of wisdom.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The fact that an opinion has been widely held is no evidence whatever that it is not utterly absurd.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The trouble with the world is that the stupid are cocksure and the intelligent are full of doubt.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("War does not determine who is right - only who is left.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The good life is one inspired by love and guided by knowledge.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BEYONCE_KNOWLES.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If everything was perfect, you would never learn and you would never grow.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Who I am on stage is very, very different to who I am in real life.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I can never be safe; I always try and go against the grain. As soon as I accomplish one thing, I just set a higher goal. That's how I've gotten to where I am.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think it's healthy for a person to be nervous. It means you care - that you work hard and want to give a great performance. You just have to channel that nervous energy into the show.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Whenever I'm confused about something, I ask God to reveal the answers to my questions, and he does.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I feel like you get more bees with honey. But that doesn't mean I don't get frustrated in my life. My way of dealing with frustration is to shut down and to think and speak logically.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I always treat myself to one meal on Sundays when I can have whatever I want. Usually it's pizza, which is my favorite indulgence.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I get nervous when I don't get nervous. If I'm nervous I know I'm going to have a good show.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I hold a lot of things in. I'm always making sure everybody is okay. I usually don't rage; I usually don't curse. So for me, it's a great thing to be able to scream and say whatever I want.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There's my personal life, my sensitive side, and then me as a performer, sexy and energised and fun.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BILL_GATES.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The first rule of any technology used in a business is that automation applied to an efficient operation will magnify the efficiency. The second is that automation applied to an inefficient operation will magnify the inefficiency.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Research shows that there is only half as much variation in student achievement between schools as there is among classrooms in the same school. If you want your child to get the best education possible, it is actually more important to get him assigned to a great teacher than to a great school.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We all need people who will give us feedback. That's how we improve.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Your most unhappy customers are your greatest source of learning.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The advance of technology is based on making it fit in so that you don't really even notice it, so it's part of everyday life.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The Internet is becoming the town square for the global village of tomorrow.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Information technology and business are becoming inextricably interwoven. I don't think anybody can talk meaningfully about one without the talking about the other.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's fine to celebrate success but it is more important to heed the lessons of failure.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Technology is just a tool. In terms of getting the kids working together and motivating them, the teacher is the most important.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Success is a lousy teacher. It seduces smart people into thinking they can't lose.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BILLY_GRAHAM.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Racial prejudice, anti-Semitism, or hatred of anyone with different beliefs has no place in the human mind or heart.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Make sure of your commitment to Jesus Christ, and seek to follow Him every day. Don't be swayed by the false values and goals of this world, but put Christ and His will first in everything you do.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When wealth is lost, nothing is lost; when health is lost, something is lost; when character is lost, all is lost.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("God proved His love on the Cross. When Christ hung, and bled, and died, it was God saying to the world, 'I love you.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think that the Bible teaches that homosexuality is a sin, but the Bible also teaches that pride is a sin, jealousy is a sin, and hate is a sin, evil thoughts are a sin. So I don't think that homosexuality should be chosen as the overwhelming sin that we are doing today.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("God has given us two hands, one to receive with and the other to give with.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nothing can bring a real sense of security into the home except true love.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Each life is made up of mistakes and learning, waiting and growing, practicing patience and being persistent.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A child who is allowed to be disrespectful to his parents will not have true respect for anyone.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The greatest legacy one can pass on to one's children and grandchildren is not money or other material things accumulated in one's life, but rather a legacy of character and faith.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BLAISE_PASCAL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We view things not only from different sides, but with different eyes; we have no wish to find them alike.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Belief is a wise wager. Granted that faith cannot be proved, what harm will come to you if you gamble on its truth and it proves false? If you gain, you gain all; if you lose, you lose nothing. Wager, then, without hesitation, that He exists.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Men never do evil so completely and cheerfully as when they do it from religious conviction.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Noble deeds that are concealed are most esteemed.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Small minds are concerned with the extraordinary, great minds with the ordinary.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In faith there is enough light for those who want to believe and enough shadows to blind those who don't.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Love has reasons which reason cannot understand.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All men's miseries derive from not being able to sit in a quiet room alone.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Human beings must be known to be loved; but Divine beings must be loved to be known.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Kind words do not cost much. Yet they accomplish much.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.BOB_DYLAN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'll let you be in my dreams if I can be in yours.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I accept chaos, I'm not sure whether it accepts me.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A mistake is to commit a misunderstanding.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What's money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All I can do is be me, whoever that is.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Inspiration is hard to come by. You have to take it where you find it.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Yesterday's just a memory, tomorrow is never what it's supposed to be.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No one is free, even the birds are chained to the sky.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Take care of all your memories. For you cannot relive them.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A hero is someone who understands the responsibility that comes with his freedom.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CS_LEWIS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The task of the modern educator is not to cut down jungles, but to irrigate deserts.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Education without values, as useful as it is, seems rather to make man a more clever devil.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("History isn't just the story of bad people doing bad things. It's quite as much a story of people trying to do good things. But somehow, something goes wrong.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Friendship is unnecessary, like philosophy, like art... It has no survival value; rather it is one of those things that give value to survival.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I believe in Christianity as I believe that the sun has risen: not only because I see it, but because by it I see everything else.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If I find in myself a desire which no experience in this world can satisfy, the most probable explanation is that I was made for another world.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Failures, repeated failures, are finger posts on the road to achievement. One fails forward toward success.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We all want progress, but if you're on the wrong road, progress means doing an about-turn and walking back to the right road; in that case, the man who turns back soonest is the most progressive.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Look for yourself, and you will find in the long run only hatred, loneliness, despair, rage, ruin, and decay. But look for Christ, and you will find Him, and with Him everything else thrown in.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Courage is not simply one of the virtues, but the form of every virtue at the testing point.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CARL_JUNG.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In all chaos there is a cosmos, in all disorder a secret order.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every form of addiction is bad, no matter whether the narcotic be alcohol or morphine or idealism.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Children are educated by what the grown-up is and not by his talk.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The meeting of two personalities is like the contact of two chemical substances: if there is any reaction, both are transformed.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everything that irritates us about others can lead us to an understanding of ourselves.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Your vision will become clear only when you can look into your own heart. Who looks outside, dreams; who looks inside, awakes.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Knowing your own darkness is the best method for dealing with the darknesses of other people.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("One looks back with appreciation to the brilliant teachers, but with gratitude to those who touched our human feelings. The curriculum is so much necessary raw material, but warmth is the vital element for the growing plant and for the soul of the child.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Even a happy life cannot be without a measure of darkness, and the word happy would lose its meaning if it were not balanced by sadness. It is far better take things as they come along with patience and equanimity.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The word 'happy' would lose its meaning if it were not balanced by sadness.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CARL_SAGAN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The universe is not required to be in perfect harmony with human ambition.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is far better to grasp the universe as it really is than to persist in delusion, however satisfying and reassuring.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For small creatures such as we the vastness is bearable only through love.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Extinction is the rule. Survival is the exception.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The brain is like a muscle. When it is in use we feel very good. Understanding is joyous.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Imagination will often carry us to worlds that never were. But without it we go nowhere.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Who are we? We find that we live on an insignificant planet of a humdrum star lost in a galaxy tucked away in some forgotten corner of a universe in which there are far more galaxies than people.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you wish to make an apple pie from scratch, you must first invent the universe.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We live in a society exquisitely dependent on science and technology, in which hardly anyone knows anything about science and technology.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Science is a way of thinking much more than it is a body of knowledge.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CARL_BURNETT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Only I can change my life. No one can do it for me.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you have a dream, you've got to grab it and never let go.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Words, once they are printed, have a life of their own.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I liked myself better when I wasn't me.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You have to go through the falling down in order to learn to walk. It helps to know that you can survive it. That's an education in itself.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everybody I know who is funny, it's in them. You can teach timing, or some people are able to tell a joke, though I don't like to tell jokes. But I think you have to be born with a sense of humor and a sense of timing.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My grandmother and I would go see movies, and we'd come back to the apartment - we had a one-room apartment in Hollywood - and I would kind of lock myself in this little dressing room area with a cracked mirror on the door and act out what I had just seen.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It costs a lot to sue a magazine, and it's too bad that we don't have a system where the losing team has to pay the winning team's lawyers.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not always optimistic. You wouldn't have all cylinders cooking if you were always like Mary Poppins.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love to write. I have always loved writing. That was my first love.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CHARLES_DICKENS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A moral being is one who is capable of reflecting on his past actions and their motives - of approving of some and disapproving of others.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Man is descended from a hairy, tailed quadruped, probably arboreal in its habits. ", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The very essence of instinct is that it's followed independently of reason. ", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A scientific man ought to have no wishes, no affections, - a mere heart of stone.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love fools' experiments. I am always making them.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Ignorance more frequently begets confidence than does knowledge: it is those who know little, and not those who know much, who so positively assert that this or that problem will never be solved by science.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The mystery of the beginning of all things is insoluble by us; and I for one must be content to remain an agnostic.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An American monkey, after getting drunk on brandy, would never touch it again, and thus is much wiser than most men.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A man's friendships are one of the best measures of his worth.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A man who dares to waste one hour of time has not discovered the value of life.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CHARLES_R_SWINDOLL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The remarkable thing is, we have a choice everyday regarding the attitude we will embrace for that day.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A teardrop on earth summons the King of heaven.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We are all faced with a series of great opportunities brilliantly disguised as impossible situations.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Prejudice is a learned trait. You're not born prejudiced; you're taught it.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We cannot change our past. We can not change the fact that people act in a certain way. We can not change the inevitable. The only thing we can do is play on the one string we have, and that is our attitude.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Attitude is more important than the past, than education, than money, than circumstances, than what people do or say. It is more important than appearance, giftedness, or skill.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The difference between something good and something great is attention to detail.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Each day of our lives we make deposits in the memory banks of our children.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I cannot even imagine where I would be today were it not for that handful of friends who have given me a heart full of joy. Let's face it, friends make life a lot more fun.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life is 10% what happens to you and 90% how you react to it.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CHE_GUEVARA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The revolution is not an apple that falls when it is ripe. You have to make it fall.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have a wish. It as a fear as well - that in my end will be my beginning.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The true revolutionary is guided by a great feeling of love. It is impossible to think of a genuine revolutionary lacking this quality.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We cannot be sure of having something to live for unless we are willing to die for it.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I know you are here to kill me. Shoot, coward, you are only going to kill a man.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The only passion that guides me is for the truth... I look at everything from this point of view.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Passion is needed for any great work, and for the revolution, passion and audacity are required in big doses.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Remember that the revolution is what is important, and each one of us, alone, is worth nothing.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Study hard so that you can master technology, which allows us to master nature.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am one of those people who believes that the solution to the world's problems is to be found behind the Iron Curtain.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CHRISTOPHER_HITCHENS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The concept of loneliness and exile and self-sufficiency continually bucks me up.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't think it's possible to have a sense of tragedy without having a sense of humor.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To 'choose' dogma and faith over doubt and experience is to throw out the ripening vintage and to reach greedily for the Kool-Aid.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Trust is not the same as faith. A friend is someone you trust. Putting faith in anyone is a mistake.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To the dumb question, 'Why me?' the cosmos barely bothers to return the reply, 'Why not?'", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Religion is part of the human make-up. It's also part of our cultural and intellectual history. Religion was our first attempt at literature, the texts, our first attempt at cosmology, making sense of where we are in the universe, our first attempt at health care, believing in faith healing, our first attempt at philosophy.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What can be asserted without evidence can be dismissed without evidence.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I learned that very often the most intolerant and narrow-minded people are the ones who congratulate themselves on their tolerance and open-mindedness.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A gentleman is never rude except on purpose - I can honestly be nasty sober, believe you me.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Owners of dogs will have noticed that, if you provide them with food and water and shelter and affection, they will think you are God. Whereas owners of cats are compelled to realize that, if you provide them with food and water and affection, they draw the conclusion that they are God.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CLINT_EASTWOOD.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("God gave you a brain. Do the best you can with it. And you don't have to be Einstein, but Einstein was mentally tough. He believed what he believed. And he worked out things. And he argued with people who disagreed with him. But I'm sure he didn't call everybody jerks.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I tried being reasonable, I didn't like it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What you put into life is what you get out of it.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes if you want to see a change for the better, you have to take things into your own hands.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you want a guarantee, buy a toaster.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You should never give up your inner self.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have a very strict gun control policy: if there's a gun around, I want to be in control of it.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("They say marriages are made in Heaven. But so is thunder and lightning.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There's a rebel lying deep in my soul.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Respect your efforts, respect yourself. Self-respect leads to self-discipline. When you have both firmly under your belt, that's real power.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.CONOR_MCGREGOR.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You might win some, you might lose some. But you go in, you challenge yourself, you become a better man, a better individual, a better fighter.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I enjoy competition. I enjoy challenges. If a challenge is in front of me and it appeals to me, I will go ahead and conquer it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My success isn't a result of arrogance - it's a result of belief.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The more you seek the uncomfortable, the more you will become comfortable.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am in the fighting game. I don't care about anything else. I don't watch the news, I don't care about politics, I don't care about other sports. I don't care about anything I don't need to care about. This is my sport: it is my life. I study it; I think about it all the time. Nothing else matters.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm just looking to learn, grow, stay focused, and become a better fighter and a better athlete.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not going to get somewhere and say, 'OK, I'm done.' Success is never final; I'll just keep on going. The same way as failure never being fatal. Just keep going. I'm going to the stars and then past them.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm just trying to be myself. I'm not trying to be anyone else.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The thing about the truth is, not a lot of people can handle it.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't feel pressure in a negative way. I like pressure. I feel excitement and calm at the same time. No pressure, no diamonds. I want pressure: pressure creates drama, creates emotion.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DALAI_LAMA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Happiness is not something ready made. It comes from your own actions.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Calm mind brings inner strength and self-confidence, so that's very important for good health.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In order to carry a positive action we must develop here a positive vision.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Love and compassion are necessities, not luxuries. Without them humanity cannot survive.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Old friends pass away, new friends appear. It is just like the days. An old day passes, a new day arrives. The important thing is to make it meaningful: a meaningful friend - or a meaningful day.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be kind whenever possible. It is always possible.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you want others to be happy, practice compassion. If you want to be happy, practice compassion.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When we meet real tragedy in life, we can react in two ways - either by losing hope and falling into self-destructive habits, or by using the challenge to find our inner strength. Thanks to the teachings of Buddha, I have been able to take this second way.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you practice gratefulness, there is a sense of respect toward others.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Our prime purpose in this life is to help others. And if you can't help them, at least don't hurt them.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DOUGLAS_ADAMS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is a well-known fact that those people who must want to rule people are, ipso facto, those least suited to do it... anyone who is capable of getting themselves made President should on no account be allowed to do the job.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("This must be Thursday. I never could get the hang of Thursdays.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is a mistake to think you can solve any major problems just with potatoes.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Human beings, who are almost unique in having the ability to learn from the experience of others, are also remarkable for their apparent disinclination to do so.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A common mistake that people make when trying to design something completely foolproof is to underestimate the ingenuity of complete fools.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I may not have gone where I intended to go, but I think I have ended up where I intended to be.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Flying is learning how to throw yourself at the ground and miss.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love deadlines. I like the whooshing sound they make as they fly by.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To give real service you must add something which cannot be bought or measured with money, and that is sincerity and integrity.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DICK_GREGORY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Political promises are much like marriage vows. They are made at the beginning of the relationship between candidate and voter, but are quickly forgotten.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I lost my rifle, the Army charged me 85 dollars. That is why in the Navy the Captain goes down with the ship.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Riches do not delight us so much with their possession, as torment us with their loss.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There's a God force inside of you that gives you a will to live.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am really enjoying the new Martin Luther King Jr stamp - just think about all those white bigots, licking the backside of a black man.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Just being a Negro doesn't qualify you to understand the race situation any more than being sick makes you an expert on medicine.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You know, I always say white is not a colour, white is an attitude, and if you haven't got trillions of dollars in the bank that you don't need, you can't be white.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We thought I was going to be a great athlete, and we were wrong, and I thought I was going to be a great entertainer, and that wasn't it either. I'm going to be an American Citizen. First class.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We used to root for the Indians against the cavalry, because we didn't think it was fair in the history books that when the cavalry won it was a great victory, and when the Indians won it was a massacre.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Coconut milk is the only thing on this planet that comes identically to mother's milk.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DOLLY_PARTON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I wake up, I expect things to be good. If they're not, then I try to set about trying to make them as good as I can 'cause I know I'm gonna have to live that day anyway. So why not try to make the most of it if you can? Some days, they pan out a little better than others, but you still gotta always just try.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You can be rich in spirit, kindness, love and all those things that you can't put a dollar sign on.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I wanted to write a book that talked about the emotions of children, which is the rainbow. We all have moods. We talk about being blue when we're sad, and being yellow when we're cowards, and when we're mad, we're red.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not offended by all the dumb blonde jokes because I know I'm not dumb... and I also know that I'm not blonde.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Storms make trees take deeper roots.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No matter what, I always make it home for Christmas. I love to go to my Tennessee Mountain Home and invite all of my nieces and nephews and their spouses and kids and do what we all like to do - eat, laugh, trade presents and just enjoy each other... and sometimes I even dress up like Santa Claus!", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's a good thing I was born a girl, otherwise I'd be a drag queen.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I thank God for my failures. Maybe not at the time but after some reflection. I never feel like a failure just because something I tried has failed.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you don't like the road you're walking, start paving another one.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The way I see it, if you want the rainbow, you gotta put up with the rain.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DONALD_TRUMP.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you open your heart to patriotism, there is no room for prejudice. The Bible tells us, 'How good and pleasant it is when God's people live together in unity.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When somebody challenges you, fight back. Be brutal, be tough.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have embraced crying mothers who have lost their children because our politicians put their personal agendas before the national good. I have no patience for injustice, no tolerance for government incompetence, no sympathy for leaders who fail their citizens.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We will make America strong again. We will make America proud again. We will make America safe again. And we will make America great again.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("One of the key problems today is that politics is such a disgrace, good people don't go into government.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is time to remember that old wisdom our soldiers will never forget: that whether we are black or brown or white, we all bleed the same red blood of patriots, we all enjoy the same glorious freedoms, and we all salute the same great American Flag.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My whole life is about winning. I don't lose often. I almost never lose.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You have to think anyway, so why not think big?", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No dream is too big. No challenge is too great. Nothing we want for our future is beyond our reach.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes by losing a battle you find a new way to win the war.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DR_SEUSS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Think left and think right and think low and think high. Oh, the thinks you can think up if only you try!", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The more that you read, the more things you will know. The more that you learn, the more places you'll go.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Unless someone like you cares a whole awful lot, nothing is going to get better. It's not.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Step with care and great tact, and remember that Life's a Great Balancing Act.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I like nonsense; it wakes up the brain cells.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("From there to here, and here to there, funny things are everywhere.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You have brains in your head. You have feet in your shoes. You can steer yourself in any direction you choose. You're on your own, and you know what you know. And you are the guy who'll decide where to go.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A person's a person, no matter how small.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't cry because it's over. Smile because it happened.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Today you are you! That is truer than true! There is no one alive who is you-er than you!", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DRAKE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes it's the journey that teaches you a lot about your destination.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Jealousy is just love and hate at the same time.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People like to buildQuotes their own story about my life. I don't know if it makes them feel better, or if it makes it okay for them to not like me, but the last thing I grew up as was rich.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People like to buildQuotes their own story about my life. I don't know if it makes them feel better, or if it makes it okay for them to not like me, but the last thing I grew up as was rich.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Me and my dad are friends. We're cool. I'll never be disappointed again, because I don't expect anything anymore from him. I just let him exist, and that's how we get along.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Trying to meet new women, it's always a little more difficult as opposed to calling somebody I knew that's single and trying to rebuild that connection.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I'm writing, I'm thinking about how the songs are going to play live. Fifty bars of rap don't translate onstage. No matter how potent the music, you lose the crowd. They want a hook; they want to sing your stuff back to you.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Reviews condition people. At the end of the day, a lot of human minds are malleable. They can be easily shaped with strong words.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My dad is a great writer. Naturally talented, naturally charming. He embodies that back-in-the-day cool.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I like Ryan Gosling as an actor. I watch all of his movies, and he's Canadian and I just like his swag. I read his interviews and I'm a big fan of his.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DWIGHT_D_EISENHOWER.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leadership is the art of getting someone else to do something you want done because he wants to do it.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A people that values its privileges above its principles soon loses both.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Neither a wise man nor a brave man lies down on the tracks of history to wait for the train of the future to run over him.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Here in America we are descended in blood and in spirit from revolutionists and rebels - men and women who dare to dissent from accepted doctrine. As their heirs, may we never confuse honest dissent with disloyal subversion.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Plans are nothing; planning is everything.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In preparing for battle I have always found that plans are useless, but planning is indispensable.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You don't lead by hitting people over the head - that's assault, not leadership.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Motivation is the art of getting people to do what you want them to do because they want to do it.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("How far you can go without destroying from within what you are trying to defend from without?", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The supreme quality for leadership is unquestionably integrity. Without it, no real success is possible, no matter whether it is on a section gang, a football field, in an army, or in an office.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELIE_WIESEL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Just as despair can come to one only from other human beings, hope, too, can be given to one only by other human beings.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Wherever men and women are persecuted because of their race, religion, or political views, that place must - at that moment - become the center of the universe.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I marvel at the resilience of the Jewish people. Their best characteristic is their desire to remember. No other people has such an obsession with memory.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Most people think that shadows follow, precede or surround beings or objects. The truth is that they also surround words, ideas, desires, deeds, impulses and memories.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("That I survived the Holocaust and went on to love beautiful girls, to talk, to write, to have toast and tea and live my life - that is what is abnormal.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For me, every hour is grace. And I feel gratitude in my heart each time I can meet someone and look at his or her smile.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The opposite of love is not hate, it's indifference.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There may be times when we are powerless to prevent injustice, but there must never be a time when we fail to protest.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We must take sides. Neutrality helps the oppressor, never the victim. Silence encourages the tormentor, never the tormented.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Without memory, there is no culture. Without memory, there would be no civilization, no society, no future.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELIZABETH_I.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I know I have the body of a weak and feeble woman, but I have the heart and stomach of a king, and of a king of England too.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I do not want a husband who honours me as a queen, if he does not love me as a woman.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Though the sex to which I belong is considered weak you will nevertheless find me a rock that bends to no wind.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fear not, we are of the nature of the lion, and cannot descend to the destruction of mice and such small beasts.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing about which I am more anxious than my country, and for its sake I am willing to die ten deaths, if that be possible.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have the heart of a man, not a woman, and I am not afraid of anything.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("God has given such brave soldiers to this Crown that, if they do not frighten our neighbours, at least they prevent us from being frightened by them.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Must! Is must a word to be addressed to princes? Little man, little man! Thy father, if he had been alive, durst not have used that word.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Ye may have a greater prince, but ye shall never have a more loving prince.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My mortal foe can no ways wish me a greater harm than England's hate; neither should death be less welcome unto me than such a mishap betide me.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELLEN_DEGENERES.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes you can't see yourself clearly until you see yourself through the eyes of others.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's our challenges and obstacles that give us layers of depth and make us interesting. Are they fun when they happen? No. But they are what make us unique. And that's what I know for sure... I think.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Find out who you are and be that person. That's what your soul was put on this Earth to be. Find that truth, live that truth and everything else will come.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not an activist; I don't look for controversy. I'm not a political person, but I'm a person with compassion. I care passionately about equal rights. I care about human rights. I care about animal rights.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We need more kindness, more compassion, more joy, more laughter. I definitely want to contribute to that.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I had everything I'd hoped for, but I wasn't being myself. So I decided to be honest about who I was. It was strange: The people who loved me for being funny suddenly didn't like me for being... me.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We focus so much on our differences, and that is creating, I think, a lot of chaos and negativity and bullying in the world. And I think if everybody focused on what we all have in common - which is - we all want to be happy.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If we're destroying our trees and destroying our environment and hurting animals and hurting one another and all that stuff, there's got to be a very powerful energy to fight that. I think we need more love in the world. We need more kindness, more compassion, more joy, more laughter. I definitely want to contribute to that.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Here are the values that I stand for: honesty, equality, kindness, compassion, treating people the way you want to be treated and helping those in need. To me, those are traditional values.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I was raised around heterosexuals, as all heterosexuals are, that's where us gay people come from... you heterosexuals.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELON_MUSK.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We're running the most dangerous experiment in history right now, which is to see how much carbon dioxide the atmosphere... can handle before there is an environmental catastrophe.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you get up in the morning and think the future is going to be better, it is a bright day. Otherwise, it's not.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I was in college, I wanted to be involved in things that would change the world.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think that's the single best piece of advice: constantly think about how you could be doing things better and questioning yourself.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you're trying to create a company, it's like baking a cake. You have to have all the ingredients in the right proportion.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would like to die on Mars. Just not on impact.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Patience is a virtue, and I'm learning patience. It's a tough lesson.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Some people don't like change, but you need to embrace change if the alternative is disaster.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think it's very important to have a feedback loop, where you're constantly thinking about what you've done and how you could be doing it better. I think that's the single best piece of advice: constantly think about how you could be doing things better and questioning yourself.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When something is important enough, you do it even if the odds are not in your favor.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELVIS_PRESLEY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not trying to be sexy. It's just my way of expressing myself when I move around.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Truth is like the sun. You can shut it out for a time, but it ain't goin' away.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Rock and roll music, if you like it, if you feel it, you can't help but move to it. That's what happens to me. I can't help it.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A live concert to me is exciting because of all the electricity that is generated in the crowd and on stage. It's my favorite part of the business, live concerts.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Rhythm is something you either have or don't have, but when you have it, you have it all over.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Adversity is sometimes hard upon a man; but for one man who can stand prosperity, there are a hundred that will stand adversity.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'll never feel comfortable taking a strong drink, and I'll never feel easy smoking a cigarette. I just don't think those things are right for me.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I was a boy, I always saw myself as a hero in comic books and in movies. I grew up believing this dream.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Man, that record came out and was real big in Memphis. They started playing it, and it got real big. Don't know why-the lyrics had no meaning.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's human nature to gripe, but I'm going ahead and doing the best I can.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.EMINEM.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A lot of truth is said in jest.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes I feel like rap music is almost the key to stopping racism.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dealing with backstabbers, there was one thing I learned. They're only powerful when you got your back turned.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everybody has goals, aspirations or whatever, and everybody has been at a point in their life where nobody believed in them.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am whatever you say I am; if I wasn't, then why would you say I am.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm stupid, I'm ugly, I'm dumb, I smell. Did I mention I'm stupid?", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I say what I want to say and do what I want to do. There's no in between. People will either love you for it or hate you for it.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Somewhere deep down there's a decent man in me, he just can't be found.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Trust is hard to come by. That's why my circle is small and tight. I'm kind of funny about making new friends.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The truth is you don't know what is going to happen tomorrow. Life is a crazy ride, and nothing is guaranteed.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ERMA_BOMBECK.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't confuse fame with success. Madonna is one; Helen Keller is the other.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For years my wedding ring has done its job. It has led me not into temptation. It has reminded my husband numerous times at parties that it's time to go home. It has been a source of relief to a dinner companion. It has been a status symbol in the maternity ward.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When your mother asks, 'Do you want a piece of advice?' it is a mere formality. It doesn't matter if you answer yes or no. You're going to get it anyway.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I stand before God at the end of my life, I would hope that I would not have a single bit of talent left, and could say, 'I used everything you gave me'.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never have more children than you have car windows.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dreams have only one owner at a time. That's why dreamers are lonely.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Thanksgiving dinners take eighteen hours to prepare. They are consumed in twelve minutes. Half-times take twelve minutes. This is not coincidence.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never go to a doctor whose office plants have died.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is a thin line that separates laughter and pain, comedy and tragedy, humor and hurt.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A grandmother pretends she doesn't know who you are on Halloween.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ERNEST_HEMINGWAY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is no friend as loyal as a book.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Courage is grace under pressure.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing noble in being superior to your fellow men. True nobility lies in being superior to your former self.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("But man is not made for defeat. A man can be destroyed but not defeated.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never go on trips with anyone you do not love.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I like to listen. I have learned a great deal from listening carefully. Most people never listen.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An intelligent man is sometimes forced to be drunk to spend time with his fools.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love sleep. My life has the tendency to fall apart when I'm awake, you know?", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The world breaks everyone, and afterward, some are strong at the broken places.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The best way to find out if you can trust somebody is to trust them.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.EDGAR_ALLAN_POE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Deep into that darkness peering, long I stood there, wondering, fearing, doubting, dreaming dreams no mortal ever dared to dream before.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would define, in brief, the poetry of words as the rhythmical creation of Beauty.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Words have no power to impress the mind without the exquisite horror of their reality.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All that we see or seem is but a dream within a dream.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("They who dream by day are cognizant of many things which escape those who dream only by night.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I became insane, with long intervals of horrible sanity.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The boundaries which divide Life from Death are at best shadowy and vague. Who shall say where the one ends, and where the other begins?", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We loved with a love that was more than love.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Once upon a midnight dreary, while I pondered weak and weary.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Science has not yet taught us if madness is or is not the sublimity of the intelligence.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANCIS_OF_ASSISI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Start by doing what's necessary; then do what's possible; and suddenly you are doing the impossible.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Lord, make me an instrument of thy peace. Where there is hatred, let me sow love.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A single sunbeam is enough to drive away many shadows.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Where there is charity and wisdom, there is neither fear nor ignorance.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is no use walking anywhere to preach unless our walking is our preaching.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("While you are proclaiming peace with your lips, be careful to have it even more fully in your heart.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If God can work through me, he can work through anyone.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Men lose all the material things they leave behind them in this world, but they carry with them the reward of their charity and the alms they give. For these, they will receive from the Lord the reward and recompense they deserve.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For it is in giving that we receive.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Lord, grant that I might not so much seek to be loved as to love.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANK_LIOYD_WRIGHT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Less is only more where more is no good.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life always rides in strength to victory, not through internationalism... but only through the direct responsibility of the individual.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Space is the breath of art.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No house should ever be on a hill or on anything. It should be of the hill. Belonging to it. Hill and house should live together each the happier for the other.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing more uncommon than common sense.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The longer I live, the more beautiful life becomes.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every great architect is - necessarily - a great poet. He must be a great original interpreter of his time, his day, his age.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The mother art is architecture. Without an architecture of our own we have no soul of our own civilization.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Study nature, love nature, stay close to nature. It will never fail you.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANK_SINATRA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You gotta love livin', baby, 'cause dyin' is a pain in the ass.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People often remark that I'm pretty lucky. Luck is only important in so far as getting the chance to sell yourself at the right moment. After that, you've got to have talent and know how to use it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Cock your hat - angles are attitudes.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm like Albert Schweitzer and Bertrand Russell and Albert Einstein in that I have a respect for life - in any form. I believe in nature, in the birds, the sea, the sky, in everything I can see or that there is real evidence for. If these things are what you mean by God, then I believe in God.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dare to wear the foolish clown face.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would like to be remembered as a man who had a wonderful time living life, a man who had good friends, fine family - and I don't think I could ask for anything more than that, actually.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm gonna live till I die.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I believe that God knows what each of us wants and needs. It's not necessary for us to make it to church on Sunday to reach Him. You can find Him anyplace. And if that sounds heretical, my source is pretty good: Matthew, Five to Seven, The Sermon on the Mount.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The best revenge is massive success.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Alcohol may be man's worst enemy, but the bible says love your enemy.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANKLIN_D_ROOSEVELT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The point in history at which we stand is full of promise and danger. The world will either move forward toward unity and widely shared prosperity - or it will move apart.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GSHDGHJGDSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );

        DataLitePalDataBuilder dataLitePalDataBuilder = new DataLitePalDataBuilder(litePalDataBuilders);
        SessionManager.setStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER, DataLitePalDataBuilder.convertFromObjectToString(dataLitePalDataBuilder));

        return litePalDataBuilders;
    }

    public static ArrayList<LitePalDataBuilder> getAllQuotes() {
        ArrayList<LitePalDataBuilder> litePalDataBuilders = new ArrayList<>();
        if (!AllSettingsManager.isNullOrEmpty(SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER))) {
            DataLitePalDataBuilder dataLitePalDataBuilder = DataLitePalDataBuilder.convertFromStringToObject(SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER), DataLitePalDataBuilder.class);
            litePalDataBuilders = dataLitePalDataBuilder.getLitePalDataBuilders();
        }
        return litePalDataBuilders;
    }

//    public static ArrayList<LitePalDataBuilder> getAllQuoteAdvertises() {
//        ArrayList<LitePalDataBuilder> advertises = new ArrayList<LitePalDataBuilder>();
//        advertises.add(new LitePalDataBuilder(new LitePalLanguage(), new LitePalAuthor(), new ArrayList<LitePalDataBuilder.LitePalQuoteBuilder>(),false));
//        advertises.add(new LitePalDataBuilder("Add 2", false, false, null, null));
//        advertises.add(new LitePalDataBuilder("Add 3", false, false, null, null));
//        advertises.add(new LitePalDataBuilder("Add 4", false, false, null, null));
//        advertises.add(new LitePalDataBuilder("Add 5", false, false, null, null));
//        return advertises;
//    }

    /**********************
     * Methods for Author *
     **********************/
    public static LitePalDataBuilder.LitePalQuoteBuilder updateQuote(LitePalDataBuilder litePalDataBuilder, LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder) {
        //Update data into database
        int id = litePalQuoteBuilder.getLitePalQuote().update(litePalQuoteBuilder.getLitePalQuote().getId());
        //Search the updated data from database
        LitePalQuote litePalQuoteUpdated = LitePalQuote.find(LitePalQuote.class, litePalQuoteBuilder.getLitePalQuote().getId());
        //Update data into adapter view
        if ((id == 1) && (litePalQuoteUpdated != null) && (litePalQuoteUpdated.isFavourite() == litePalQuoteBuilder.getLitePalQuote().isFavourite())) {
            Log.d(TAG, "Updated quote(success response): " + litePalQuoteUpdated.toString());
            ArrayList<LitePalDataBuilder> litePalDataBuilders = getAllQuotes();
            for (LitePalDataBuilder dataBuilder : litePalDataBuilders) {
                if (dataBuilder.getLitePalAuthor().getAuthorName().equalsIgnoreCase(litePalDataBuilder.getLitePalAuthor().getAuthorName())) {
                    Log.d(TAG, "Updated quote: " + "found author");
                    int quotePosition = getQuotePosition(dataBuilder.getLitePalQuoteBuilders(), litePalQuoteBuilder);
                    Log.d(TAG, "Updated quote(id session): " + quotePosition);
                    if (quotePosition != -1) {
                        dataBuilder.getLitePalQuoteBuilders().remove(quotePosition);
                        litePalQuoteBuilder.setLitePalQuote(litePalQuoteUpdated);
                        dataBuilder.getLitePalQuoteBuilders().add(quotePosition, litePalQuoteBuilder);
                        Log.d(TAG, "Updated quote: " + dataBuilder.getLitePalQuoteBuilders().get(quotePosition).toString());

                        //Set updated value into session
                        DataLitePalDataBuilder dataLitePalDataBuilder = new DataLitePalDataBuilder(litePalDataBuilders);
                        SessionManager.setStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER, DataLitePalDataBuilder.convertFromObjectToString(dataLitePalDataBuilder));
                        //Log.d(TAG, "Updated quote(All session): " + SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER));
                        //Set update to the quote of the day item
                        QuoteOfTheDay quoteOfTheDay = QuoteOfTheDay.convertFromStringToObject(SessionManager.getStringSetting(getGlobalContext(), SESSION_QUOTE_OF_THE_DAY), QuoteOfTheDay.class);
                        if (quoteOfTheDay != null && quoteOfTheDay.getLitePalQuoteBuilder().getLitePalQuote().getQuoteDescription().equalsIgnoreCase(litePalQuoteUpdated.getQuoteDescription())) {
                            quoteOfTheDay.setLitePalDataBuilder(dataBuilder);
                            quoteOfTheDay.setLitePalQuoteBuilder(litePalQuoteBuilder);
                            SessionManager.setStringSetting(getGlobalContext(), SESSION_QUOTE_OF_THE_DAY, QuoteOfTheDay.convertFromObjectToString(quoteOfTheDay));
                        }

                        return litePalQuoteBuilder;
                    }
                }
            }
        }
        return null;
    }

    public static int getQuotePosition(ArrayList<LitePalDataBuilder.LitePalQuoteBuilder> litePalQuoteBuilders, LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder) {
        for (int i = 0; i < litePalQuoteBuilders.size(); i++) {
            if (litePalQuoteBuilders.get(i).getLitePalQuote().getQuoteDescription().equalsIgnoreCase(litePalQuoteBuilder.getLitePalQuote().getQuoteDescription())) {
                return i;
            }
        }
        return -1;
    }

    public static LitePalDataBuilder getAuthorData(int dataPosition) {
        ArrayList<LitePalDataBuilder> litePalDataBuilders = getAllQuotes();
        if (dataPosition < litePalDataBuilders.size()) {
            return litePalDataBuilders.get(dataPosition);
        }
        return null;
    }

    public static ArrayList<GlazyCard> getAllGlazyCards(ArrayList<LitePalDataBuilder> litePalDataBuilders) {

        ArrayList<GlazyCard> glazyCards = new ArrayList<GlazyCard>();
        GlazyCard glazyCard;
        LitePalDataBuilder quote;
        GlazyImageView.ImageCutType lastTransitionType = GlazyImageView.ImageCutType.LINE_POSITIVE;
        for (int i = 0; i < litePalDataBuilders.size(); i++) {

            quote = litePalDataBuilders.get(i);
            glazyCard = new GlazyCard()
                    .withTitle(quote.isLitePalData() ? quote.getLitePalAuthor().getAuthorName() : "Advertise")
                    .withSubTitle(quote.isLitePalData() ? quote.getLitePalAuthor().getOccupation() : "")
                    .withOccupation(quote.isLitePalData() ? quote.getLitePalAuthor().getOccupation() : "")
                    .withNationality(quote.isLitePalData() ? quote.getLitePalAuthor().getNationality() : "")
                    .withBirthDate(quote.isLitePalData() ? quote.getLitePalAuthor().getBirthDate() : "")
                    .withDeathDate(quote.isLitePalData() ? quote.getLitePalAuthor().getDeathDate() : "")
                    .withDescription(quote.isLitePalData() ? (quote.getLitePalQuoteBuilders().size() > 0 ? quote.getLitePalQuoteBuilders().get(0).getLitePalQuote().getQuoteDescription() : "") : "")
                    .withImageRes((quote.getLitePalAuthor().getProfileImage() != -1) ? quote.getLitePalAuthor().getProfileImage() : R.drawable.avatar_male)
                    .withImageCutType(lastTransitionType)
                    .withImageCutHeightDP(50);
            glazyCards.add(glazyCard);

            if (lastTransitionType == GlazyImageView.ImageCutType.LINE_POSITIVE) {
                lastTransitionType = GlazyImageView.ImageCutType.ARC;
            } else if (lastTransitionType == GlazyImageView.ImageCutType.ARC) {
                lastTransitionType = GlazyImageView.ImageCutType.WAVE;
            } else if (lastTransitionType == GlazyImageView.ImageCutType.WAVE) {
                lastTransitionType = GlazyImageView.ImageCutType.LINE_POSITIVE;
            }
        }

        return glazyCards;
    }

    /*************************
     * Methods for Favourite *
     *************************/
    public static ArrayList<LitePalDataBuilder> getAllFavouriteQuotes() {
        ArrayList<LitePalDataBuilder> litePalDataBuilders = getAllQuotes();
        ArrayList<LitePalDataBuilder> favouriteDataBuilders = new ArrayList<>();

        for (LitePalDataBuilder litePalDataBuilder : litePalDataBuilders) {
            LitePalDataBuilder tempLitePalDataBuilder = litePalDataBuilder;
            ArrayList<LitePalDataBuilder.LitePalQuoteBuilder> tempLitePalQuoteBuilders = new ArrayList<>();
            for (LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder : litePalDataBuilder.getLitePalQuoteBuilders()) {
                if (litePalQuoteBuilder.getLitePalQuote().isFavourite()) {
                    tempLitePalQuoteBuilders.add(litePalQuoteBuilder);
                }
            }
            if (tempLitePalQuoteBuilders.size() > 0) {
                tempLitePalDataBuilder.setLitePalQuoteBuilders(tempLitePalQuoteBuilders);
                favouriteDataBuilders.add(tempLitePalDataBuilder);
            }
        }

        return favouriteDataBuilders;
    }

    /*******************
     * Methods for Tag *
     *******************/
//    public static ArrayList<LitePalTag> insetTags(ArrayList<LitePalTag> litePalTags) {
//        ArrayList<LitePalTag> mLitePalTags = new ArrayList<>();
//        for (int i = 0; i < litePalTags.size(); i++) {
//            mLitePalTags.add(insetTag(litePalTags.get(i)));
//        }
//        return mLitePalTags;
//    }
    public static LitePalTag insetTag(LitePalTag litePalTag, DataInputListener dataInputListener) {
        LitePalTag mSavedTag = getTag(litePalTag.getTagName());
        if (mSavedTag != null) {
            Log.d(TAG, "insetTag(existing): " + mSavedTag.toString());
            if (dataInputListener != null) {
                dataInputListener.InputListener(mSavedTag);
            }
            return mSavedTag;
        } else {
            if (litePalTag.save()) {
                LitePalTag savedTag = getTag(litePalTag.getTagName());
                if (savedTag != null) {
                    Log.d(TAG, "insetTag(new): " + savedTag.toString());
                    if (dataInputListener != null) {
                        dataInputListener.InputListener(savedTag);
                    }
                    return savedTag;
                }
            }
        }
        return null;
    }

    public static LitePalTag getTag(String tagName) {
        List<LitePalTag> savedTags = DataSupport.where("tagName = ?", tagName).find(LitePalTag.class);
        if (savedTags != null) {
            if (savedTags.size() == 1) {
                Log.d(TAG, "getTag: " + savedTags.get(0).toString());
                return savedTags.get(0);
            }
        }
        return null;
    }

    /**********************
     * Methods for Author *
     **********************/
    public static LitePalAuthor insetAuthor(LitePalAuthor litePalAuthor, DataInputListener dataInputListener) {
//        LitePalAuthor savedAuthor = getAuthor(litePalAuthor.getAuthorName());
//        if (savedAuthor != null) {
//            Log.d(TAG, "insetAuthor(existing): " + savedAuthor.toString());
//            if(InputListener !=null){
//                InputListener.InputListener(savedAuthor);
//            }
//            return savedAuthor;
//        } else {
        if (litePalAuthor.save()) {
            LitePalAuthor mSavedAuthor = getAuthor(litePalAuthor.getAuthorName());
            if (mSavedAuthor != null) {
                Log.d(TAG, "insetAuthor(new): " + mSavedAuthor.toString());
                if (dataInputListener != null) {
                    dataInputListener.InputListener(mSavedAuthor);
                }
                return mSavedAuthor;
            }
        }
//        }
        return null;
    }

    public static LitePalAuthor getAuthor(String authorName) {
        List<LitePalAuthor> savedAuthors = DataSupport.where("authorName = ?", authorName).find(LitePalAuthor.class);
        if (savedAuthors != null) {
            if (savedAuthors.size() == 1) {
                Log.d(TAG, "getAuthor: " + savedAuthors.get(0).toString());
                return savedAuthors.get(0);
            }
        }
        return null;
    }

    /************************
     * Methods for Language *
     ************************/
    public static LitePalLanguage insetLanguage(LitePalLanguage litePalLanguage, DataInputListener dataInputListener) {
        LitePalLanguage savedLanguage = getLanguage(litePalLanguage.getLanguageName());
        if (savedLanguage != null) {
            Log.d(TAG, "insetLanguage(Existing): " + savedLanguage.toString());
            if (dataInputListener != null) {
                dataInputListener.InputListener(savedLanguage);
            }
            return savedLanguage;
        } else {
            if (litePalLanguage.save()) {
                LitePalLanguage mSavedLanguage = getLanguage(litePalLanguage.getLanguageName());
                if (mSavedLanguage != null) {
                    Log.d(TAG, "insetLanguage(new): " + litePalLanguage.toString());
                    if (dataInputListener != null) {
                        dataInputListener.InputListener(mSavedLanguage);
                    }
                    return mSavedLanguage;
                }
            }
        }
        return null;
    }

    public static LitePalLanguage getLanguage(String languageName) {
        List<LitePalLanguage> savedLanguage = DataSupport.where("languageName = ?", languageName).find(LitePalLanguage.class);
        if (savedLanguage != null && savedLanguage.size() == 1) {
            Log.d(TAG, "getLanguage: " + savedLanguage.get(0).toString());
            return savedLanguage.get(0);
        }
        return null;
    }

    /*********************
     * Methods for Quote *
     *********************/
    public static LitePalQuote insertQuote(LitePalQuote litePalQuote, DataInputListener dataInputListener) {
//        LitePalQuote savedQuote = getQuote(litePalQuote.getQuoteDescription());
//        if (savedQuote != null) {
//            Log.d(TAG, "insetQuote(existing): " + savedQuote.toString());
//            return savedQuote;
//        } else {
        if (litePalQuote.save()) {
            LitePalQuote mSavedQuote = getQuote(litePalQuote.getQuoteDescription());
            if (mSavedQuote != null) {
                Log.d(TAG, "insetQuote(new): " + mSavedQuote.toString());
                if (dataInputListener != null) {
                    dataInputListener.InputListener(mSavedQuote);
                }
                return mSavedQuote;
            }
//            return litePalQuote;
//            }
        }
        return null;
    }

    public static LitePalQuote getQuote(String quoteDescription) {
        List<LitePalQuote> savedQuotes = DataSupport.where("quoteDescription = ?", quoteDescription).find(LitePalQuote.class);
        if (savedQuotes != null) {
            if (savedQuotes.size() == 1) {
                Log.d(TAG, "getQuote(existing): " + savedQuotes.get(0).toString());
                return savedQuotes.get(0);
            }
        }
        return null;
    }

    /********************************************
     * Methods for Quote, Language, Author, Tag *
     ********************************************/
    public static void insertQuoteLanguageAuthorTag(LitePalDataBuilder litePalDataBuilder, DataInputListener dataInputListener) {
        for (int i = 0; i < litePalDataBuilder.getLitePalQuoteBuilders().size(); i++) {
            LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder = litePalDataBuilder.getLitePalQuoteBuilders().get(i);
            for (int j = 0; j < litePalQuoteBuilder.getLitePalTags().size(); j++) {
                Log.d(TAG, "insertQuoteLanguageAuthorTag(quote): " + litePalQuoteBuilder.getLitePalQuote().toString());
                LitePalQuoteLanguageAuthorTag litePalQuoteLanguageAuthorTag = new LitePalQuoteLanguageAuthorTag(litePalQuoteBuilder.getLitePalQuote().getId(), litePalDataBuilder.getLitePalLanguage().getId(), litePalDataBuilder.getLitePalAuthor().getId(), litePalQuoteBuilder.getLitePalTags().get(j).getId());

//                LitePalQuoteLanguageAuthorTag mSavedData = getQuoteLanguageAuthorTag(litePalQuoteLanguageAuthorTag.getMd5());
//                if (mSavedData == null) {
                Log.d(TAG, "insertQuoteLanguageAuthorTag(new): " + litePalQuoteLanguageAuthorTag.toString());
                if (litePalQuoteLanguageAuthorTag.save()) {
//                        LitePalQuoteLanguageAuthorTag mSavedData = getQuoteLanguageAuthorTag(litePalQuoteLanguageAuthorTag.getMd5());

                    if (dataInputListener != null) {
                        dataInputListener.InputListener(litePalQuoteLanguageAuthorTag);
                    }
                }

//                }
            }
        }
    }

    public static LitePalQuoteLanguageAuthorTag getQuoteLanguageAuthorTag(String md5) {
        List<LitePalQuoteLanguageAuthorTag> savedQuotes = DataSupport.where("md5 = ?", md5).find(LitePalQuoteLanguageAuthorTag.class);
        if (savedQuotes != null) {
            if (savedQuotes.size() == 1) {
                Log.d(TAG, "getQuoteLanguageAuthorTag(existing): " + savedQuotes.get(0).toString());
                return savedQuotes.get(0);
            }
        }
        return null;
    }
}