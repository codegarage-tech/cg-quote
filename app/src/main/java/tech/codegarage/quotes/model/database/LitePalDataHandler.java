package tech.codegarage.quotes.model.database;

import android.util.Log;

import com.kannan.glazy.GlazyCard;
import com.kannan.glazy.views.GlazyImageView;
import com.reversecoder.library.storage.SessionManager;
import com.reversecoder.library.util.AllSettingsManager;

import org.litepal.crud.DataSupport;

import java.util.ArrayList;
import java.util.List;

import tech.codegarage.quotes.R;

import static tech.codegarage.quotes.application.QuoteApp.getGlobalContext;
import static tech.codegarage.quotes.util.AllConstants.SESSION_DATA_DATA_BUILDER;
import static tech.codegarage.quotes.util.AllConstants.SESSION_QUOTE_OF_THE_DAY;

public class LitePalDataHandler {

    private static String TAG = LitePalDataHandler.class.getSimpleName();
    public static DataInputListener dataInputListener;

    /**************
     * Data input *
     **************/
    public static ArrayList<LitePalDataBuilder> initAllQuotes(DataInputListener dbInputListener) {
        dataInputListener = dbInputListener;
        ArrayList<LitePalDataBuilder> litePalDataBuilders = new ArrayList<>();

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.APJ_ABDUL_KALAM.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Teaching is a very noble profession that shapes the character, caliber, and future of an individual. If the people remember me as a good teacher, that will be the biggest honour for me.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.TEACHER.getLitePalTag())
                                .addLitePalTags(EnumTag.CHARACTER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We should not give up and we should not allow the problem to defeat us.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DEFEAT.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Let us sacrifice our today so that our children can have a better tomorrow.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.TODAY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you want to shine like a sun, first burn like a sun.", false, true))
                                .addLitePalTags(EnumTag.SUN.getLitePalTag())
                                .addLitePalTags(EnumTag.SHINE.getLitePalTag())
                                .addLitePalTags(EnumTag.WANT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If a country is to be corruption free and become a nation of beautiful minds, I strongly feel there are three key societal members who can make a difference. They are the father, the mother and the teacher.", false, true))
                                .addLitePalTags(EnumTag.FAMILY.getLitePalTag())
                                .addLitePalTags(EnumTag.BEAUTIFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.FATHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To succeed in your mission, you must have single-minded devotion to your goal.", false, true))
                                .addLitePalTags(EnumTag.GOAL.getLitePalTag())
                                .addLitePalTags(EnumTag.MISSION.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Look at the sky. We are not alone. The whole universe is friendly to us and conspires only to give the best to those who dream and work.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .addLitePalTags(EnumTag.ALONE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Never stop fighting until you arrive at your destined place - that is, the unique you. Have an aim in life, continuously acquire knowledge, work hard, and have perseverance to realise the great life.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.PERSEVERANCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Science is a beautiful gift to humanity; we should not distort it.", false, true))
                                .addLitePalTags(EnumTag.BEAUTIFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.SCIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIFT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The bird is powered by its own life and by its motivation.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.BIRD.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ALBERT_CAMUS.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Don't walk behind me; I may not lead. Don't walk in front of me; I may not follow. Just walk Autumn is a second spring when every leaf is a flower.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.FLOWER.getLitePalTag())
                                .addLitePalTags(EnumTag.SPRING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Don't walk behind me; I may not lead. Don't walk in front of me; I may not follow. Just walk beside me and be my friend.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getLitePalTag())
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.WALK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Blessed are the hearts that can bend; they shall never be broken.", false, true))
                                .addLitePalTags(EnumTag.MOVING_ON.getLitePalTag())
                                .addLitePalTags(EnumTag.BLESSED.getLitePalTag())
                                .addLitePalTags(EnumTag.BROKEN.getLitePalTag())
                                .buildQuotes()
                        )

                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The only way to deal with an unfree world is to become so absolutely free that your very existence is an act of rebellion.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.FREE.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In the depth of winter I finally learned that there was in me an invincible summer.", false, true))
                                .addLitePalTags(EnumTag.WINTER.getLitePalTag())
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A man without ethics is a wild beast loosed upon this world.", false, true))
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .addLitePalTags(EnumTag.ETHICS.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You will never be happy if you continue to search for what happiness consists of. You will never live if you are looking for the meaning of life.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPINESS.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Integrity has no need of rules.", false, true))
                                .addLitePalTags(EnumTag.INTEGRITY.getLitePalTag())
                                .addLitePalTags(EnumTag.RULES.getLitePalTag())
                                .addLitePalTags(EnumTag.NEED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Real generosity toward the future lies in giving all to the present.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVING.getLitePalTag())
                                .addLitePalTags(EnumTag.GENEROSITY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The evil that is in the world almost always comes of ignorance, and good intentions may do as much harm as malevolence if they lack understanding.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.IGNORANCE.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ARISTOTLE.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is during our darkest moments that we must focus to see the light.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.LIGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.FOCUS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Quality is not an act, it is a habit.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.QUALITY.getLitePalTag())
                                .addLitePalTags(EnumTag.HABIT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The roots of education are bitter, but the fruit is sweet.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.ROOTS.getLitePalTag())
                                .addLitePalTags(EnumTag.SWEET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is the mark of an educated mind to be able to entertain a thought without accepting it.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.THOUGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Excellence is an art won by training and habituation. We do not act rightly because we have virtue or excellence, but we rather have those because we have acted rightly. We are what we repeatedly do. Excellence, then, is not an act but a habit.", false, true))
                                .addLitePalTags(EnumTag.ART.getLitePalTag())
                                .addLitePalTags(EnumTag.TRAINING.getLitePalTag())
                                .addLitePalTags(EnumTag.EXCELLENCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Pleasure in the job puts perfection in the work.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.JOB.getLitePalTag())
                                .addLitePalTags(EnumTag.PERFECTION.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is no great genius without some touch of madness.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.GREAT.getLitePalTag())
                                .addLitePalTags(EnumTag.GENIUS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Love is composed of a single soul inhabiting two bodies.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.LOVE_IS.getLitePalTag())
                                .addLitePalTags(EnumTag.SOUL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The one exclusive sign of thorough knowledge is the power of teaching.", false, true))
                                .addLitePalTags(EnumTag.TEACHER.getLitePalTag())
                                .addLitePalTags(EnumTag.KNOWLEDGE.getLitePalTag())
                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The worst form of inequality is to try to make unequal things equal.", false, true))
                                .addLitePalTags(EnumTag.EQUALITY.getLitePalTag())
                                .addLitePalTags(EnumTag.INEQUALITY.getLitePalTag())
                                .addLitePalTags(EnumTag.TRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.AUDREY_HEPBURN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nothing is impossible, the word itself says 'I'm possible'!", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The beauty of a woman must be seen from in her eyes, because that is the doorway to her heart, the place where love resides.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.BEAUTY.getLitePalTag())
                                .addLitePalTags(EnumTag.EYES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For beautiful eyes, look for the good in others; for beautiful lips, speak only words of kindness; and for poise, walk with the knowledge that you are never alone.", false, true))
                                .addLitePalTags(EnumTag.KINDNESS.getLitePalTag())
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.BEAUTIFUL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The most important thing is to enjoy your life - to be happy - it's all that matters.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.BE_HAPPY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The beauty of a woman is not in a facial mode but the true beauty in a woman is reflected in her soul. It is the caring that she lovingly gives the passion that she shows. The beauty of a woman grows with the passing years.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getLitePalTag())
                                .addLitePalTags(EnumTag.PASSION.getLitePalTag())
                                .addLitePalTags(EnumTag.SOUL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I believe in pink. I believe that laughing is the best calorie burner. I believe in kissing, kissing a lot. I believe in being strong when everything seems to be going wrong. I believe that happy girls are the prettiest girls. I believe that tomorrow is another day and I believe in miracles.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The best thing to hold onto in life is each other. ", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The beauty of a woman is not in the clothes she wears, the figure that she carries or the way she combs her hair.", false, true))
                                .addLitePalTags(EnumTag.BEAUTY.getLitePalTag())
                                .addLitePalTags(EnumTag.HAIR.getLitePalTag())
                                .addLitePalTags(EnumTag.WOMAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I believe in manicures. I believe in overdressing. I believe in primping at leisure and wearing lipstick. I believe in pink. I believe happy girls are the prettiest girls. I believe that tomorrow is another day, and... I believe in miracles.", false, true))
                                .addLitePalTags(EnumTag.DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.TOMORROW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Let's face it, a nice creamy chocolate cake does a lot for a lot of people; it does for me.", false, true))
                                .addLitePalTags(EnumTag.FOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.CAKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );

        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ABRAHAM_LINCOLN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If this is coffee, please bring me some tea; but if this is tea, please bring me some coffee.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.COFFEE.getLitePalTag())
                                .addLitePalTags(EnumTag.TEA.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Character is like a tree and reputation like a shadow. The shadow is what we think of it; the tree is the real thing.", false, true))
                                .addLitePalTags(EnumTag.CHARACTER.getLitePalTag())
                                .addLitePalTags(EnumTag.TREE.getLitePalTag())
                                .addLitePalTags(EnumTag.SHADOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I am a slow walker, but I never walk back.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getLitePalTag())
                                .addLitePalTags(EnumTag.WALK.getLitePalTag())
                                .addLitePalTags(EnumTag.SLOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My dream is of a place and a time where America will once again be seen as the last best hope of earth.", false, true))
                                .addLitePalTags(EnumTag.HOPE.getLitePalTag())
                                .addLitePalTags(EnumTag.TIME.getLitePalTag())
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Be sure you put your feet in the right place, then stand firm.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getLitePalTag())
                                .addLitePalTags(EnumTag.STAND.getLitePalTag())
                                .addLitePalTags(EnumTag.FEET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You cannot escape the responsibility of tomorrow by evading it today.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.TODAY.getLitePalTag())
                                .addLitePalTags(EnumTag.TOMORROW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("No man has a good enough memory to be a successful liar.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.GOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All that I am, or hope to be, I owe to my angel mother.", false, true))
                                .addLitePalTags(EnumTag.HOPE.getLitePalTag())
                                .addLitePalTags(EnumTag.MOTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.I_AM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nearly all men can stand adversity, but if you want to test a man's character, give him power.", false, true))
                                .addLitePalTags(EnumTag.CHARACTER.getLitePalTag())
                                .addLitePalTags(EnumTag.ADVERSITY.getLitePalTag())
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("America will never be destroyed from the outside. If we falter and lose our freedoms, it will be because we destroyed ourselves.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.AMERICA.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ALDOUS_HUXLEY.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is only one corner of the universe you can be certain of improving, and that's your own self.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There are things known and there are things unknown, and in between are the doors of perception.", false, true))
                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The secret of genius is to carry the spirit of the child into old age, which means never losing your enthusiasm.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("After silence, that which comes nearest to expressing the inexpressible is music.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To travel is to discover that everyone is wrong about other countries.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Experience is not what happens to you; it's what you do with what happens to you.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Facts do not cease to exist because they are ignored.", false, true))
                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The more powerful and original a mind, the more it will incline towards the religion of solitude.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All gods are homemade, and it is we who pull their strings, and so, give them the power to pull ours.", false, true))
                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A democracy which makes or even effectively prepares for modern, scientific war must necessarily cease to be democratic. No country can be really well prepared for modern war unless it is governed by a tyrant, at the head of a highly trained and perfectly obedient bureaucracy.", false, true))
                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ALEXANDER_HAMILTON.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Learn to think continentally.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.LEARN.getLitePalTag())
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Real liberty is neither found in despotism or the extremes of democracy, but in moderate governments.", false, true))
                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
                                .addLitePalTags(EnumTag.LIBERTY.getLitePalTag())
                                .addLitePalTags(EnumTag.REAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In framing a government which is to be administered by men over men, the great difficulty lies in this: you must first enable the government to control the governed; and in the next place, oblige it to control itself.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getLitePalTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.MEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A promise must never be broken.", false, true))
                                .addLitePalTags(EnumTag.BROKEN.getLitePalTag())
                                .addLitePalTags(EnumTag.PROMISE.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's not tyranny we desire; it's a just, limited, federal government.", false, true))
                                .addLitePalTags(EnumTag.GOVERNMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.DESIRE.getLitePalTag())
                                .addLitePalTags(EnumTag.TYRANNY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I never expect to see a perfect work from an imperfect man.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.MAN.getLitePalTag())
                                .addLitePalTags(EnumTag.PERFECT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I think the first duty of society is justice.", false, true))
                                .addLitePalTags(EnumTag.JUSTICE.getLitePalTag())
                                .addLitePalTags(EnumTag.SOCIETY.getLitePalTag())
                                .addLitePalTags(EnumTag.FIRST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A well adjusted person is one who makes the same mistake twice without getting nervous.", false, true))
                                .addLitePalTags(EnumTag.MISTAKE.getLitePalTag())
                                .addLitePalTags(EnumTag.NERVOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.SAME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Unless your government is respectable, foreigners will invade your rights; and to maintain tranquillity, it must be respectable - even to observe neutrality, you must have a strong government.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getLitePalTag())
                                .addLitePalTags(EnumTag.GOVERNMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is a certain enthusiasm in liberty, that makes human nature rise above itself, in acts of bravery and heroism.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.LIBERTY.getLitePalTag())
                                .addLitePalTags(EnumTag.RISE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ALEXANDER_POPE.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The greatest magnifying glasses in the world are a man's own eyes when they look upon his own person.", false, true))
                                .addLitePalTags(EnumTag.EYES.getLitePalTag())
                                .addLitePalTags(EnumTag.LOOK.getLitePalTag())
                                .addLitePalTags(EnumTag.OWN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Fools rush in where angels fear to tread.", false, true))
                                .addLitePalTags(EnumTag.ANGELS.getLitePalTag())
                                .addLitePalTags(EnumTag.TREAD.getLitePalTag())
                                .addLitePalTags(EnumTag.WHERE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All nature is but art unknown to thee.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.ART.getLitePalTag())
                                .addLitePalTags(EnumTag.THEE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("No one should be ashamed to admit they are wrong, which is but saying, in other words, that they are wiser today than they were yesterday.", false, true))
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.ASHAMED.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("No woman ever hates a man for being in love with her, but many a woman hate a man for being a friend to her.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.WOMAN.getLitePalTag())
                                .addLitePalTags(EnumTag.EVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Teach me to feel another's woe, to hide the fault I see, that mercy I to others show, that mercy show to me.", false, true))
                                .addLitePalTags(EnumTag.TEACH.getLitePalTag())
                                .addLitePalTags(EnumTag.SHOW.getLitePalTag())
                                .addLitePalTags(EnumTag.ANOTHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Charms strike the sight, but merit wins the soul.", false, true))
                                .addLitePalTags(EnumTag.SOUL.getLitePalTag())
                                .addLitePalTags(EnumTag.STRIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.WINS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("On life's vast ocean diversely we sail. Reasons the card, but passion the gale.", false, true))
                                .addLitePalTags(EnumTag.OCEAN.getLitePalTag())
                                .addLitePalTags(EnumTag.REASONS.getLitePalTag())
                                .addLitePalTags(EnumTag.GALE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To be angry is to revenge the faults of others on ourselves.\n", false, true))
                                .addLitePalTags(EnumTag.ANGER.getLitePalTag())
                                .addLitePalTags(EnumTag.REVENGE.getLitePalTag())
                                .addLitePalTags(EnumTag.ANGRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To err is human; to forgive, divine.", false, true))
                                .addLitePalTags(EnumTag.FORGIVENESS.getLitePalTag())
                                .addLitePalTags(EnumTag.FORGIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.ERR.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ARNOLD_SCHWARZENEGGER.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The worst thing I can be is the same as everybody else. I hate that.", false, true))
                                .addLitePalTags(EnumTag.SAME.getLitePalTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getLitePalTag())
                                .addLitePalTags(EnumTag.WORST_THING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's simple, if it jiggles, it's fat.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.SIMPLE.getLitePalTag())
                                .addLitePalTags(EnumTag.FAT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Bodybuilding is much like any other sport. To be successful, you must dedicate yourself 100% to your training, diet and mental approach.", false, true))
                                .addLitePalTags(EnumTag.FITNESS.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Help others and give something back. I guarantee you will discover that while public service improves the lives and the world around you, its greatest reward is the enrichment and new meaning it will bring your own life.", false, true))
                                .addLitePalTags(EnumTag.BRING.getLitePalTag())
                                .addLitePalTags(EnumTag.OWN.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPROVES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The mind is the limit. As long as the mind can envision the fact that you can do something, you can do it, as long as you really believe 100 percent.", false, true))
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU_CAN_DO_IT.getLitePalTag())
                                .addLitePalTags(EnumTag.FACT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The future is green energy, sustainability, renewable energy.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.GREEN.getLitePalTag())
                                .addLitePalTags(EnumTag.RENEWABLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Milk is for babies. When you grow up you have to drink beer.", false, true))
                                .addLitePalTags(EnumTag.GROW.getLitePalTag())
                                .addLitePalTags(EnumTag.GROW_UP.getLitePalTag())
                                .addLitePalTags(EnumTag.MILK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For me life is continuously being hungry. The meaning of life is not simply to exist, to survive, but to move ahead, to go up, to achieve, to conquer.", false, true))
                                .addLitePalTags(EnumTag.CONQUER.getLitePalTag())
                                .addLitePalTags(EnumTag.SURVIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.MOVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Just remember, you can't climb the ladder of success with your hands in your pockets.", false, true))
                                .addLitePalTags(EnumTag.REMEMBER.getLitePalTag())
                                .addLitePalTags(EnumTag.CLIMB.getLitePalTag())
                                .addLitePalTags(EnumTag.LADDER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Strength does not come from winning. Your struggles develop your strengths. When you go through hardships and decide not to surrender, that is strength.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getLitePalTag())
                                .addLitePalTags(EnumTag.HARDSHIPS.getLitePalTag())
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BARACK_OBAMA.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Change will not come if we wait for some other person or some other time. We are the ones we've been waiting for. We are the change that we seek.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getLitePalTag())
                                .addLitePalTags(EnumTag.WAIT.getLitePalTag())
                                .addLitePalTags(EnumTag.SOME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I see Americans of every party, every background, every faith who believe that we are stronger together: black, white, Latino, Asian, Native American; young, old; gay, straight; men, women, folks with disabilities, all pledging allegiance under the same proud flag to this big, bold country that we love. That's what I see. That's the America I know!", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
                                .addLitePalTags(EnumTag.BIG.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We need to reject any politics that targets people because of race or religion. This isn't a matter of political correctness. It's a matter of understanding what makes us strong. The world respects us not just for our arsenal; it respects us for our diversity and our openness and the way we respect every faith.", false, true))
                                .addLitePalTags(EnumTag.STRONG.getLitePalTag())
                                .addLitePalTags(EnumTag.POLITICS.getLitePalTag())
                                .addLitePalTags(EnumTag.POLITICAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Let us remember we are all part of one American family. We are united in common values, and that includes belief in equality under the law, basic respect for public order, and the right of peaceful protest.", false, true))
                                .addLitePalTags(EnumTag.VALUES.getLitePalTag())
                                .addLitePalTags(EnumTag.UNITED.getLitePalTag())
                                .addLitePalTags(EnumTag.PART.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you're walking down the right path and you're willing to keep walking, eventually you'll make progress.", false, true))
                                .addLitePalTags(EnumTag.PATH.getLitePalTag())
                                .addLitePalTags(EnumTag.WALKING.getLitePalTag())
                                .addLitePalTags(EnumTag.RIGHT_PATH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If the people cannot trust their government to do the job for which it exists - to protect them and to promote their common welfare - all else is lost.\n", false, true))
                                .addLitePalTags(EnumTag.TRUST.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .addLitePalTags(EnumTag.THEM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The future rewards those who press on. I don't have time to feel sorry for myself. I don't have time to complain. I'm going to press on.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.MYSELF.getLitePalTag())
                                .addLitePalTags(EnumTag.GOING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Money is not the only answer, but it makes a difference.", false, true))
                                .addLitePalTags(EnumTag.MONEY.getLitePalTag())
                                .addLitePalTags(EnumTag.ANSWER.getLitePalTag())
                                .addLitePalTags(EnumTag.ONLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("America isn't Congress. America isn't Washington. America is the striving immigrant who starts a business, or the mom who works two low-wage jobs to give her kid a better life. America is the union leader and the CEO who put aside their differences to make the economy stronger.", false, true))
                                .addLitePalTags(EnumTag.LEADER.getLitePalTag())
                                .addLitePalTags(EnumTag.CONGRESS.getLitePalTag())
                                .addLitePalTags(EnumTag.WORKS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("After a century of striving, after a year of debate, after a historic vote, health care reform is no longer an unmet promise. It is the law of the land.", false, true))
                                .addLitePalTags(EnumTag.LAW.getLitePalTag())
                                .addLitePalTags(EnumTag.STRIVING.getLitePalTag())
                                .addLitePalTags(EnumTag.HISTORIC.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BEN_SHAPIRO.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("During the Great Depression, levels of crime actually dropped. During the 1920s, when life was free and easy, so was crime. During the 1930s, when the entire American economy fell into a government-owned alligator moat, crime was nearly non-existent. During the 1950s and 1960s, when the economy was excellent, crime rose again.", false, true))
                                .addLitePalTags(EnumTag.ALLIGATOR.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Socialism violates at least three of the Ten Commandments: It turns government into God, it legalizes thievery and it elevates covetousness. Discussions of income inequality, after all, aren't about prosperity but about petty spite. Why should you care how much money I make, so long as you are happy?", false, true))
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.INCOME.getLitePalTag())
                                .addLitePalTags(EnumTag.LEAST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Distrust of government isn't baseless cynicism. It's realism.", false, true))
                                .addLitePalTags(EnumTag.REALISM.getLitePalTag())
                                .addLitePalTags(EnumTag.DISTRUST.getLitePalTag())
                                .addLitePalTags(EnumTag.CYNICISM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Matt Damon's anti-fracking diatribe was funded by the royal family of the United Arab Emirates.", false, true))
                                .addLitePalTags(EnumTag.FAMILY.getLitePalTag())
                                .addLitePalTags(EnumTag.UNITED.getLitePalTag())
                                .addLitePalTags(EnumTag.MATT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Capitalism requires individual responsibility and accountability. People are seen as atomized units in a capitalist system - they are either useful, or they are not. They are not seen racially or ethnically or religiously. They consume and they produce, and those are their only relevant characteristics.", false, true))
                                .addLitePalTags(EnumTag.SEEN.getLitePalTag())
                                .addLitePalTags(EnumTag.CONSUME.getLitePalTag())
                                .addLitePalTags(EnumTag.UNITS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The story of Detroit's bankruptcy was simple enough: Allow capitalism to grow the city, campaign against income inequality, tax the job creators until they flee, increase government spending in order to boost employment, promise generous pension plans to keep people voting for failure. Rinse, wash and repeat.", false, true))
                                .addLitePalTags(EnumTag.CITY.getLitePalTag())
                                .addLitePalTags(EnumTag.INCOME.getLitePalTag())
                                .addLitePalTags(EnumTag.ALLOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Socialism has no moral justification whatsoever; poor people are not morally superior to rich people, nor are they owed anything by rich people simply because of their lack of success. Charity is not a socialist concept - it is a religious one, an acknowledgment of God's sovereignty over property, a sovereignty the Left utterly rejects.", false, true))
                                .addLitePalTags(EnumTag.MORAL.getLitePalTag())
                                .addLitePalTags(EnumTag.RELIGIOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.CONCEPT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Every so often, we all gaze into the abyss. It's a depressing fact of life that eventually the clock expires; eventually the sand in the hourglass runs out. It's the leaving behind of everything that matters to us that hurts the most.", false, true))
                                .addLitePalTags(EnumTag.FACT.getLitePalTag())
                                .addLitePalTags(EnumTag.BEHIND.getLitePalTag())
                                .addLitePalTags(EnumTag.EVENTUALLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Socialism states that you owe me something simply because I exist. Capitalism, by contrast, results in a sort of reality-forced altruism: I may not want to help you, I may dislike you, but if I don't give you a product or service you want, I will starve. Voluntary exchange is more moral than forced redistribution.", false, true))
                                .addLitePalTags(EnumTag.DISLIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.FORCED.getLitePalTag())
                                .addLitePalTags(EnumTag.STARVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Freedom of speech and thought matters, especially when it is speech and thought with which we disagree. The moment the majority decides to destroy people for engaging in thought it dislikes, thought crime becomes a reality.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.DESTROY.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BENJAMIN_DISRAELI.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A great city, whose image dwells in the memory of man, is the type of some great idea. Rome represents conquest; Faith hovers over the towers of Jerusalem; and Athens embodies the pre-eminent quality of the antique world, Art.", false, true))
                                .addLitePalTags(EnumTag.MEMORY.getLitePalTag())
                                .addLitePalTags(EnumTag.CITY.getLitePalTag())
                                .addLitePalTags(EnumTag.SOME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Power has only one duty - to secure the social welfare of the People.", false, true))
                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
                                .addLitePalTags(EnumTag.SOCIAL.getLitePalTag())
                                .addLitePalTags(EnumTag.ONLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Never apologize for showing feeling. When you do so, you apologize for the truth.", false, true))
                                .addLitePalTags(EnumTag.TRUTH.getLitePalTag())
                                .addLitePalTags(EnumTag.FEELING.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The secret of success is constancy to purpose.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS_IS.getLitePalTag())
                                .addLitePalTags(EnumTag.CONSTANCY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Like all great travellers, I have seen more than I remember, and remember more than I have seen.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
                                .addLitePalTags(EnumTag.REMEMBER.getLitePalTag())
                                .addLitePalTags(EnumTag.I_REMEMBER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Youth is a blunder; Manhood a struggle, Old Age a regret.", false, true))
                                .addLitePalTags(EnumTag.REGRET.getLitePalTag())
                                .addLitePalTags(EnumTag.MANHOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.OLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nurture your minds with great thoughts. To believe in the heroic makes heroes.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .addLitePalTags(EnumTag.HEROES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Seeing much, suffering much, and studying much, are the three pillars of learning.", false, true))
                                .addLitePalTags(EnumTag.STUDYING.getLitePalTag())
                                .addLitePalTags(EnumTag.SEEING.getLitePalTag())
                                .addLitePalTags(EnumTag.PILLARS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Never complain and never explain.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPLAIN.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Courage is fire, and bullying is smoke.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getLitePalTag())
                                .addLitePalTags(EnumTag.FIRE.getLitePalTag())
                                .addLitePalTags(EnumTag.SMOKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BENJAMIN_FRANKLIN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Without freedom of thought, there can be no such thing as wisdom - and no such thing as public liberty without freedom of speech.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.THOUGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.PUBLIC.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Early to bed and early to rise makes a man healthy, wealthy and wise.", false, true))
                                .addLitePalTags(EnumTag.HEALTH.getLitePalTag())
                                .addLitePalTags(EnumTag.WISE.getLitePalTag())
                                .addLitePalTags(EnumTag.BED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Either write something worth reading or do something worth writing.", false, true))
                                .addLitePalTags(EnumTag.READING.getLitePalTag())
                                .addLitePalTags(EnumTag.WRITING.getLitePalTag())
                                .addLitePalTags(EnumTag.EITHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("By failing to prepare, you are preparing to fail.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.PREPARE.getLitePalTag())
                                .addLitePalTags(EnumTag.FAIL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Wine is constant proof that God loves us and loves to see us happy.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.SEE.getLitePalTag())
                                .addLitePalTags(EnumTag.CONSTANT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We are all born ignorant, but one must work hard to remain stupid.", false, true))
                                .addLitePalTags(EnumTag.KNOWLEDGE.getLitePalTag())
                                .addLitePalTags(EnumTag.WORK_HARD.getLitePalTag())
                                .addLitePalTags(EnumTag.STUPID.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Well done is better than well said.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.BETTER.getLitePalTag())
                                .addLitePalTags(EnumTag.THAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Without continual growth and progress, such words as improvement, achievement, and success have no meaning.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getLitePalTag())
                                .addLitePalTags(EnumTag.ACHIEVEMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.WORDS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Tell me and I forget. Teach me and I remember. Involve me and I learn.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getLitePalTag())
                                .addLitePalTags(EnumTag.REMEMBER.getLitePalTag())
                                .addLitePalTags(EnumTag.FORGET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("An investment in knowledge pays the best interest.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .addLitePalTags(EnumTag.INTEREST.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BERTRAND_RUSSELL.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I would never die for my beliefs because I might be wrong.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.DIE.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Science is what you know, philosophy is what you don't know.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.PHILOSOPHY.getLitePalTag())
                                .addLitePalTags(EnumTag.KNOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Men are born ignorant, not stupid. They are made stupid by education.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.STUPID.getLitePalTag())
                                .addLitePalTags(EnumTag.MADE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The only thing that will redeem mankind is cooperation.", false, true))
                                .addLitePalTags(EnumTag.MANKIND.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.ONLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The world is full of magical things patiently waiting for our wits to grow sharper.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.GROW.getLitePalTag())
                                .addLitePalTags(EnumTag.MAGICAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Fear is the main source of superstition, and one of the main sources of cruelty. To conquer fear is the beginning of wisdom.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getLitePalTag())
                                .addLitePalTags(EnumTag.CRUELTY.getLitePalTag())
                                .addLitePalTags(EnumTag.SOURCES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The fact that an opinion has been widely held is no evidence whatever that it is not utterly absurd.", false, true))
                                .addLitePalTags(EnumTag.FACT.getLitePalTag())
                                .addLitePalTags(EnumTag.BEEN.getLitePalTag())
                                .addLitePalTags(EnumTag.UTTERLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The trouble with the world is that the stupid are cocksure and the intelligent are full of doubt.", false, true))
                                .addLitePalTags(EnumTag.STUPID.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .addLitePalTags(EnumTag.TROUBLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("War does not determine who is right - only who is left.", false, true))
                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
                                .addLitePalTags(EnumTag.LEFT.getLitePalTag())
                                .addLitePalTags(EnumTag.DETERMINE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The good life is one inspired by love and guided by knowledge.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.INSPIRED.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BEYONCE_KNOWLES.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If everything was perfect, you would never learn and you would never grow.", false, true))
                                .addLitePalTags(EnumTag.GROW.getLitePalTag())
                                .addLitePalTags(EnumTag.PERFECT.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Who I am on stage is very, very different to who I am in real life.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getLitePalTag())
                                .addLitePalTags(EnumTag.STAGE.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I can never be safe; I always try and go against the grain. As soon as I accomplish one thing, I just set a higher goal. That's how I've gotten to where I am.", false, true))
                                .addLitePalTags(EnumTag.AGAINST.getLitePalTag())
                                .addLitePalTags(EnumTag.SOON.getLitePalTag())
                                .addLitePalTags(EnumTag.GOTTEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I think it's healthy for a person to be nervous. It means you care - that you work hard and want to give a great performance. You just have to channel that nervous energy into the show.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.MEANS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Whenever I'm confused about something, I ask God to reveal the answers to my questions, and he does.", false, true))
                                .addLitePalTags(EnumTag.REVEAL.getLitePalTag())
                                .addLitePalTags(EnumTag.ANSWERS.getLitePalTag())
                                .addLitePalTags(EnumTag.ABOUT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I feel like you get more bees with honey. But that doesn't mean I don't get frustrated in my life. My way of dealing with frustration is to shut down and to think and speak logically.", false, true))
                                .addLitePalTags(EnumTag.MY_LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.SHUT.getLitePalTag())
                                .addLitePalTags(EnumTag.FRUSTRATED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I always treat myself to one meal on Sundays when I can have whatever I want. Usually it's pizza, which is my favorite indulgence.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .addLitePalTags(EnumTag.INDULGENCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I get nervous when I don't get nervous. If I'm nervous I know I'm going to have a good show.", false, true))
                                .addLitePalTags(EnumTag.NERVOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.GOING.getLitePalTag())
                                .addLitePalTags(EnumTag.GET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I hold a lot of things in. I'm always making sure everybody is okay. I usually don't rage; I usually don't curse. So for me, it's a great thing to be able to scream and say whatever I want.", false, true))
                                .addLitePalTags(EnumTag.EVERYBODY.getLitePalTag())
                                .addLitePalTags(EnumTag.SCREAM.getLitePalTag())
                                .addLitePalTags(EnumTag.HOLD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There's my personal life, my sensitive side, and then me as a performer, sexy and energised and fun.", false, true))
                                .addLitePalTags(EnumTag.SEXY.getLitePalTag())
                                .addLitePalTags(EnumTag.SIDE.getLitePalTag())
                                .addLitePalTags(EnumTag.PERFORMER.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BILL_GATES.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The first rule of any technology used in a business is that automation applied to an efficient operation will magnify the efficiency. The second is that automation applied to an inefficient operation will magnify the inefficiency.", false, true))
                                .addLitePalTags(EnumTag.TECHNOLOGY.getLitePalTag())
                                .addLitePalTags(EnumTag.EFFICIENCY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Research shows that there is only half as much variation in student achievement between schools as there is among classrooms in the same school. If you want your child to get the best education possible, it is actually more important to get him assigned to a great teacher than to a great school.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.YOUR_CHILD.getLitePalTag())
                                .addLitePalTags(EnumTag.HALF.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We all need people who will give us feedback. That's how we improve.", false, true))
                                .addLitePalTags(EnumTag.FEEDBACK.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.HOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Your most unhappy customers are your greatest source of learning.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getLitePalTag())
                                .addLitePalTags(EnumTag.UNHAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.MOST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The advance of technology is based on making it fit in so that you don't really even notice it, so it's part of everyday life.", false, true))
                                .addLitePalTags(EnumTag.PART.getLitePalTag())
                                .addLitePalTags(EnumTag.MAKING.getLitePalTag())
                                .addLitePalTags(EnumTag.BASED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The Internet is becoming the town square for the global village of tomorrow.", false, true))
                                .addLitePalTags(EnumTag.SQUARE.getLitePalTag())
                                .addLitePalTags(EnumTag.BECOMING.getLitePalTag())
                                .addLitePalTags(EnumTag.TOWN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Information technology and business are becoming inextricably interwoven. I don't think anybody can talk meaningfully about one without the talking about the other.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.BECOMING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's fine to celebrate success but it is more important to heed the lessons of failure.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getLitePalTag())
                                .addLitePalTags(EnumTag.FINE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Technology is just a tool. In terms of getting the kids working together and motivating them, the teacher is the most important.", false, true))
                                .addLitePalTags(EnumTag.TECHNOLOGY.getLitePalTag())
                                .addLitePalTags(EnumTag.THEM.getLitePalTag())
                                .addLitePalTags(EnumTag.MOTIVATING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Success is a lousy teacher. It seduces smart people into thinking they can't lose.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getLitePalTag())
                                .addLitePalTags(EnumTag.SMART_PEOPLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BILLY_GRAHAM.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Racial prejudice, anti-Semitism, or hatred of anyone with different beliefs has no place in the human mind or heart.", false, true))
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .addLitePalTags(EnumTag.RACIAL.getLitePalTag())
                                .addLitePalTags(EnumTag.BELIEFS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Make sure of your commitment to Jesus Christ, and seek to follow Him every day. Don't be swayed by the false values and goals of this world, but put Christ and His will first in everything you do.", false, true))
                                .addLitePalTags(EnumTag.VALUES.getLitePalTag())
                                .addLitePalTags(EnumTag.EVERY_DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.SWAYED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When wealth is lost, nothing is lost; when health is lost, something is lost; when character is lost, all is lost.", false, true))
                                .addLitePalTags(EnumTag.LEARNING.getLitePalTag())
                                .addLitePalTags(EnumTag.UNHAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.MOST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("God proved His love on the Cross. When Christ hung, and bled, and died, it was God saying to the world, 'I love you.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.EASTER.getLitePalTag())
                                .addLitePalTags(EnumTag.CHRIST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I think that the Bible teaches that homosexuality is a sin, but the Bible also teaches that pride is a sin, jealousy is a sin, and hate is a sin, evil thoughts are a sin. So I don't think that homosexuality should be chosen as the overwhelming sin that we are doing today.", false, true))
                                .addLitePalTags(EnumTag.BIBLE.getLitePalTag())
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.HOMOSEXUALITY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("God has given us two hands, one to receive with and the other to give with.", false, true))
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVEN.getLitePalTag())
                                .addLitePalTags(EnumTag.RECEIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nothing can bring a real sense of security into the home except true love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.HOME.getLitePalTag())
                                .addLitePalTags(EnumTag.SECURITY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Each life is made up of mistakes and learning, waiting and growing, practicing patience and being persistent.", false, true))
                                .addLitePalTags(EnumTag.WAITING.getLitePalTag())
                                .addLitePalTags(EnumTag.GROWING.getLitePalTag())
                                .addLitePalTags(EnumTag.MADE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A child who is allowed to be disrespectful to his parents will not have true respect for anyone.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.HIS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The greatest legacy one can pass on to one's children and grandchildren is not money or other material things accumulated in one's life, but rather a legacy of character and faith.", false, true))
                                .addLitePalTags(EnumTag.LEGACY.getLitePalTag())
                                .addLitePalTags(EnumTag.GRANDCHILDREN.getLitePalTag())
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BLAISE_PASCAL.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We view things not only from different sides, but with different eyes; we have no wish to find them alike.", false, true))
                                .addLitePalTags(EnumTag.WISH.getLitePalTag())
                                .addLitePalTags(EnumTag.VIEW.getLitePalTag())
                                .addLitePalTags(EnumTag.ALIKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Belief is a wise wager. Granted that faith cannot be proved, what harm will come to you if you gamble on its truth and it proves false? If you gain, you gain all; if you lose, you lose nothing. Wager, then, without hesitation, that He exists.", false, true))
                                .addLitePalTags(EnumTag.FAITH.getLitePalTag())
                                .addLitePalTags(EnumTag.HARM.getLitePalTag())
                                .addLitePalTags(EnumTag.PROVES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Men never do evil so completely and cheerfully as when they do it from religious conviction.", false, true))
                                .addLitePalTags(EnumTag.RELIGIOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .addLitePalTags(EnumTag.CHEERFULLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Noble deeds that are concealed are most esteemed.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DEEDS.getLitePalTag())
                                .addLitePalTags(EnumTag.MOST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Small minds are concerned with the extraordinary, great minds with the ordinary.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.SMALL.getLitePalTag())
                                .addLitePalTags(EnumTag.MINDS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In faith there is enough light for those who want to believe and enough shadows to blind those who don't.", false, true))
                                .addLitePalTags(EnumTag.FAITH.getLitePalTag())
                                .addLitePalTags(EnumTag.LIGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.BLIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Love has reasons which reason cannot understand.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.REASON.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All men's miseries derive from not being able to sit in a quiet room alone.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getLitePalTag())
                                .addLitePalTags(EnumTag.MEN.getLitePalTag())
                                .addLitePalTags(EnumTag.MISERIES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Human beings must be known to be loved; but Divine beings must be loved to be known.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
                                .addLitePalTags(EnumTag.LOVED.getLitePalTag())
                                .addLitePalTags(EnumTag.KNOWN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Kind words do not cost much. Yet they accomplish much.", false, true))
                                .addLitePalTags(EnumTag.COST.getLitePalTag())
                                .addLitePalTags(EnumTag.ACCOMPLISH.getLitePalTag())
                                .addLitePalTags(EnumTag.KIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.BOB_DYLAN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'll let you be in my dreams if I can be in yours.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .addLitePalTags(EnumTag.YOURS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I accept chaos, I'm not sure whether it accepts me.", false, true))
                                .addLitePalTags(EnumTag.CHAOS.getLitePalTag())
                                .addLitePalTags(EnumTag.SURE.getLitePalTag())
                                .addLitePalTags(EnumTag.ACCEPTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A mistake is to commit a misunderstanding.", false, true))
                                .addLitePalTags(EnumTag.MISTAKE.getLitePalTag())
                                .addLitePalTags(EnumTag.MISUNDERSTANDING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("What's money? A man is a success if he gets up in the morning and goes to bed at night and in between does what he wants to do.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getLitePalTag())
                                .addLitePalTags(EnumTag.BED.getLitePalTag())
                                .addLitePalTags(EnumTag.GOES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All I can do is be me, whoever that is.", false, true))
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.I_CAN.getLitePalTag())
                                .addLitePalTags(EnumTag.WHOEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Inspiration is hard to come by. You have to take it where you find it.", false, true))
                                .addLitePalTags(EnumTag.FIND.getLitePalTag())
                                .addLitePalTags(EnumTag.TAKE.getLitePalTag())
                                .addLitePalTags(EnumTag.COME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Yesterday's just a memory, tomorrow is never what it's supposed to be.", false, true))
                                .addLitePalTags(EnumTag.MEMORY.getLitePalTag())
                                .addLitePalTags(EnumTag.YESTERDAY.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("No one is free, even the birds are chained to the sky.", false, true))
                                .addLitePalTags(EnumTag.SKY.getLitePalTag())
                                .addLitePalTags(EnumTag.EVEN.getLitePalTag())
                                .addLitePalTags(EnumTag.CHAINED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Take care of all your memories. For you cannot relive them.", false, true))
                                .addLitePalTags(EnumTag.MEMORIES.getLitePalTag())
                                .addLitePalTags(EnumTag.TAKE.getLitePalTag())
                                .addLitePalTags(EnumTag.RELIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A hero is someone who understands the responsibility that comes with his freedom.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.SOMEONE.getLitePalTag())
                                .addLitePalTags(EnumTag.HIS.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CS_LEWIS.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The task of the modern educator is not to cut down jungles, but to irrigate deserts.", false, true))
                                .addLitePalTags(EnumTag.TEACHER.getLitePalTag())
                                .addLitePalTags(EnumTag.TASK.getLitePalTag())
                                .addLitePalTags(EnumTag.DESERTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Education without values, as useful as it is, seems rather to make man a more clever devil.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .addLitePalTags(EnumTag.RATHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("History isn't just the story of bad people doing bad things. It's quite as much a story of people trying to do good things. But somehow, something goes wrong.", false, true))
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.GOES.getLitePalTag())
                                .addLitePalTags(EnumTag.BAD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Friendship is unnecessary, like philosophy, like art... It has no survival value; rather it is one of those things that give value to survival.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getLitePalTag())
                                .addLitePalTags(EnumTag.ART.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I believe in Christianity as I believe that the sun has risen: not only because I see it, but because by it I see everything else.", false, true))
                                .addLitePalTags(EnumTag.SAINT.getLitePalTag())
                                .addLitePalTags(EnumTag.PATRICKS_DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.I_SEE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If I find in myself a desire which no experience in this world can satisfy, the most probable explanation is that I was made for another world.", false, true))
                                .addLitePalTags(EnumTag.DESIRE.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .addLitePalTags(EnumTag.SATISFY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Failures, repeated failures, are finger posts on the road to achievement. One fails forward toward success.", false, true))
                                .addLitePalTags(EnumTag.FAILURE.getLitePalTag())
                                .addLitePalTags(EnumTag.TOWARD.getLitePalTag())
                                .addLitePalTags(EnumTag.FINGER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We all want progress, but if you're on the wrong road, progress means doing an about-turn and walking back to the right road; in that case, the man who turns back soonest is the most progressive.", false, true))
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.WANT.getLitePalTag())
                                .addLitePalTags(EnumTag.MEANS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Look for yourself, and you will find in the long run only hatred, loneliness, despair, rage, ruin, and decay. But look for Christ, and you will find Him, and with Him everything else thrown in.", false, true))
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.LONG_RUN.getLitePalTag())
                                .addLitePalTags(EnumTag.CHRIST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Courage is not simply one of the virtues, but the form of every virtue at the testing point.", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getLitePalTag())
                                .addLitePalTags(EnumTag.FORM.getLitePalTag())
                                .addLitePalTags(EnumTag.VIRTUES.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CARL_JUNG.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In all chaos there is a cosmos, in all disorder a secret order.", false, true))
                                .addLitePalTags(EnumTag.CHAOS.getLitePalTag())
                                .addLitePalTags(EnumTag.DISORDER.getLitePalTag())
                                .addLitePalTags(EnumTag.COSMOS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Every form of addiction is bad, no matter whether the narcotic be alcohol or morphine or idealism.", false, true))
                                .addLitePalTags(EnumTag.ALCOHOL.getLitePalTag())
                                .addLitePalTags(EnumTag.IDEALISM.getLitePalTag())
                                .addLitePalTags(EnumTag.FORM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Children are educated by what the grown-up is and not by his talk.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getLitePalTag())
                                .addLitePalTags(EnumTag.IDEALISM.getLitePalTag())
                                .addLitePalTags(EnumTag.FORM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The meeting of two personalities is like the contact of two chemical substances: if there is any reaction, both are transformed.", false, true))
                                .addLitePalTags(EnumTag.REACTION.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.SUBSTANCES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Everything that irritates us about others can lead us to an understanding of ourselves.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.UNDERSTANDING.getLitePalTag())
                                .addLitePalTags(EnumTag.ABOUT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Your vision will become clear only when you can look into your own heart. Who looks outside, dreams; who looks inside, awakes.", false, true))
                                .addLitePalTags(EnumTag.OWN.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.CLEAR.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Knowing your own darkness is the best method for dealing with the darknesses of other people.", false, true))
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .addLitePalTags(EnumTag.KNOWING.getLitePalTag())
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("One looks back with appreciation to the brilliant teachers, but with gratitude to those who touched our human feelings. The curriculum is so much necessary raw material, but warmth is the vital element for the growing plant and for the soul of the child.", false, true))
                                .addLitePalTags(EnumTag.TEACHER.getLitePalTag())
                                .addLitePalTags(EnumTag.SOUL.getLitePalTag())
                                .addLitePalTags(EnumTag.RAW_MATERIAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Even a happy life cannot be without a measure of darkness, and the word happy would lose its meaning if it were not balanced by sadness. It is far better take things as they come along with patience and equanimity.", false, true))
                                .addLitePalTags(EnumTag.PATIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.LOSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The word 'happy' would lose its meaning if it were not balanced by sadness.", false, true))
                                .addLitePalTags(EnumTag.SAD.getLitePalTag())
                                .addLitePalTags(EnumTag.WOULD.getLitePalTag())
                                .addLitePalTags(EnumTag.MEANING.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CARL_SAGAN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The universe is not required to be in perfect harmony with human ambition.", false, true))
                                .addLitePalTags(EnumTag.AMBITION.getLitePalTag())
                                .addLitePalTags(EnumTag.PERFECT.getLitePalTag())
                                .addLitePalTags(EnumTag.HARMONY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is far better to grasp the universe as it really is than to persist in delusion, however satisfying and reassuring.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getLitePalTag())
                                .addLitePalTags(EnumTag.HOWEVER.getLitePalTag())
                                .addLitePalTags(EnumTag.BETTER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For small creatures such as we the vastness is bearable only through love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.SMALL.getLitePalTag())
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Extinction is the rule. Survival is the exception.", false, true))
                                .addLitePalTags(EnumTag.EXITINCTION.getLitePalTag())
                                .addLitePalTags(EnumTag.EXCEPTION.getLitePalTag())
                                .addLitePalTags(EnumTag.RULE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The brain is like a muscle. When it is in use we feel very good. Understanding is joyous.", false, true))
                                .addLitePalTags(EnumTag.INTELLIGENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Imagination will often carry us to worlds that never were. But without it we go nowhere.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLDS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Who are we? We find that we live on an insignificant planet of a humdrum star lost in a galaxy tucked away in some forgotten corner of a universe in which there are far more galaxies than people.", false, true))
                                .addLitePalTags(EnumTag.SPACE.getLitePalTag())
                                .addLitePalTags(EnumTag.SOME.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you wish to make an apple pie from scratch, you must first invent the universe.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.SCRATCH.getLitePalTag())
                                .addLitePalTags(EnumTag.INVENT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We live in a society exquisitely dependent on science and technology, in which hardly anyone knows anything about science and technology.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .addLitePalTags(EnumTag.ABOUT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Science is a way of thinking much more than it is a body of knowledge.", false, true))
                                .addLitePalTags(EnumTag.SCIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .addLitePalTags(EnumTag.THAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CAROL_BURNETT.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Only I can change my life. No one can do it for me.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.ONLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When you have a dream, you've got to grab it and never let go.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DREAM.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Words, once they are printed, have a life of their own.", false, true))
                                .addLitePalTags(EnumTag.COMMUNICATION.getLitePalTag())
                                .addLitePalTags(EnumTag.PRINTED.getLitePalTag())
                                .addLitePalTags(EnumTag.ONCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I liked myself better when I wasn't me.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getLitePalTag())
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.BETTER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You have to go through the falling down in order to learn to walk. It helps to know that you can survive it. That's an education in itself.", false, true))
                                .addLitePalTags(EnumTag.FALLING.getLitePalTag())
                                .addLitePalTags(EnumTag.SURVIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Everybody I know who is funny, it's in them. You can teach timing, or some people are able to tell a joke, though I don't like to tell jokes. But I think you have to be born with a sense of humor and a sense of timing.", false, true))
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getLitePalTag())
                                .addLitePalTags(EnumTag.SOME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My grandmother and I would go see movies, and we'd come back to the apartment - we had a one-room apartment in Hollywood - and I would kind of lock myself in this little dressing room area with a cracked mirror on the door and act out what I had just seen.", false, true))
                                .addLitePalTags(EnumTag.MIRROR.getLitePalTag())
                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
                                .addLitePalTags(EnumTag.HOLLYWOOD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It costs a lot to sue a magazine, and it's too bad that we don't have a system where the losing team has to pay the winning team's lawyers.", false, true))
                                .addLitePalTags(EnumTag.LEGAL.getLitePalTag())
                                .addLitePalTags(EnumTag.COSTS.getLitePalTag())
                                .addLitePalTags(EnumTag.SUE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm not always optimistic. You wouldn't have all cylinders cooking if you were always like Mary Poppins.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.MARY_POPPINS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I love to write. I have always loved writing. That was my first love.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.I_LOVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CHARLES_DARWIN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A moral being is one who is capable of reflecting on his past actions and their motives - of approving of some and disapproving of others.", false, true))
                                .addLitePalTags(EnumTag.PAST.getLitePalTag())
                                .addLitePalTags(EnumTag.SOME.getLitePalTag())
                                .addLitePalTags(EnumTag.MOTIVES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Man is descended from a hairy, tailed quadruped, probably arboreal in its habits. ", false, true))
                                .addLitePalTags(EnumTag.HABITS.getLitePalTag())
                                .addLitePalTags(EnumTag.HAIRY.getLitePalTag())
                                .addLitePalTags(EnumTag.DESCENDED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The very essence of instinct is that it's followed independently of reason. ", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
                                .addLitePalTags(EnumTag.REASON.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A scientific man ought to have no wishes, no affections, - a mere heart of stone.", false, true))
                                .addLitePalTags(EnumTag.SCIENTIFIC.getLitePalTag())
                                .addLitePalTags(EnumTag.MERE.getLitePalTag())
                                .addLitePalTags(EnumTag.AFFECTIONS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I love fools' experiments. I am always making them.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Ignorance more frequently begets confidence than does knowledge: it is those who know little, and not those who know much, who so positively assert that this or that problem will never be solved by science.", false, true))
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.FREQUENTLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The mystery of the beginning of all things is insoluble by us; and I for one must be content to remain an agnostic.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getLitePalTag())
                                .addLitePalTags(EnumTag.CONTENT.getLitePalTag())
                                .addLitePalTags(EnumTag.REMAIN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("An American monkey, after getting drunk on brandy, would never touch it again, and thus is much wiser than most men.", false, true))
                                .addLitePalTags(EnumTag.MONKEY.getLitePalTag())
                                .addLitePalTags(EnumTag.AGAIN.getLitePalTag())
                                .addLitePalTags(EnumTag.THUS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A man's friendships are one of the best measures of his worth.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getLitePalTag())
                                .addLitePalTags(EnumTag.HIS.getLitePalTag())
                                .addLitePalTags(EnumTag.MEASURES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A man who dares to waste one hour of time has not discovered the value of life.", false, true))
                                .addLitePalTags(EnumTag.LIFE.getLitePalTag())
                                .addLitePalTags(EnumTag.WASTE.getLitePalTag())
                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CHARLES_R_SWINDOLL.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The remarkable thing is, we have a choice everyday regarding the attitude we will embrace for that day.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.REMARKABLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A teardrop on earth summons the King of heaven.", false, true))
                                .addLitePalTags(EnumTag.SAD.getLitePalTag())
                                .addLitePalTags(EnumTag.KING.getLitePalTag())
                                .addLitePalTags(EnumTag.EARTH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We are all faced with a series of great opportunities brilliantly disguised as impossible situations.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getLitePalTag())
                                .addLitePalTags(EnumTag.SERIES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Prejudice is a learned trait. You're not born prejudiced; you're taught it.", false, true))
                                .addLitePalTags(EnumTag.TAUGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.LEARNED.getLitePalTag())
                                .addLitePalTags(EnumTag.PREJUDICED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We cannot change our past. We can not change the fact that people act in a certain way. We can not change the inevitable. The only thing we can do is play on the one string we have, and that is our attitude.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.PLAY.getLitePalTag())
                                .addLitePalTags(EnumTag.INEVITABLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Attitude is more important than the past, than education, than money, than circumstances, than what people do or say. It is more important than appearance, giftedness, or skill.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.CIRCUMSTANCES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The difference between something good and something great is attention to detail.", false, true))
                                .addLitePalTags(EnumTag.DIFFERENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.SOMETHING_GOOD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Each day of our lives we make deposits in the memory banks of our children.", false, true))
                                .addLitePalTags(EnumTag.PARENTING.getLitePalTag())
                                .addLitePalTags(EnumTag.MEMORY.getLitePalTag())
                                .addLitePalTags(EnumTag.LIVES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I cannot even imagine where I would be today were it not for that handful of friends who have given me a heart full of joy. Let's face it, friends make life a lot more fun.", false, true))
                                .addLitePalTags(EnumTag.FRIENDSHIP.getLitePalTag())
                                .addLitePalTags(EnumTag.IMAGINE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Life is 10% what happens to you and 90% how you react to it.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.REACT.getLitePalTag())
                                .addLitePalTags(EnumTag.HOW.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CHE_GUEVARA.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The revolution is not an apple that falls when it is ripe. You have to make it fall.", false, true))
                                .addLitePalTags(EnumTag.FALL.getLitePalTag())
                                .addLitePalTags(EnumTag.APPLE.getLitePalTag())
                                .addLitePalTags(EnumTag.FALLS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I have a wish. It as a fear as well - that in my end will be my beginning.", false, true))
                                .addLitePalTags(EnumTag.BEGINNING.getLitePalTag())
                                .addLitePalTags(EnumTag.WISH.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The true revolutionary is guided by a great feeling of love. It is impossible to think of a genuine revolutionary lacking this quality.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.GREAT_FEELING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We cannot be sure of having something to live for unless we are willing to die for it.", false, true))
                                .addLitePalTags(EnumTag.DIE.getLitePalTag())
                                .addLitePalTags(EnumTag.HAVING.getLitePalTag())
                                .addLitePalTags(EnumTag.SURE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I know you are here to kill me. Shoot, coward, you are only going to kill a man.", false, true))
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.GOING.getLitePalTag())
                                .addLitePalTags(EnumTag.HERE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The only passion that guides me is for the truth... I look at everything from this point of view.", false, true))
                                .addLitePalTags(EnumTag.POINT_OF_VIEW.getLitePalTag())
                                .addLitePalTags(EnumTag.LOOK.getLitePalTag())
                                .addLitePalTags(EnumTag.POINT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Passion is needed for any great work, and for the revolution, passion and audacity are required in big doses.", false, true))
                                .addLitePalTags(EnumTag.BIG.getLitePalTag())
                                .addLitePalTags(EnumTag.NEEDED.getLitePalTag())
                                .addLitePalTags(EnumTag.DOSES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Remember that the revolution is what is important, and each one of us, alone, is worth nothing.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getLitePalTag())
                                .addLitePalTags(EnumTag.REMEMBER.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Study hard so that you can master technology, which allows us to master nature.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.STUDY.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I am one of those people who believes that the solution to the world's problems is to be found behind the Iron Curtain.", false, true))
                                .addLitePalTags(EnumTag.BEHIND.getLitePalTag())
                                .addLitePalTags(EnumTag.AM.getLitePalTag())
                                .addLitePalTags(EnumTag.IRON_CURTAIN.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CHRISTOPHER_HITCHENS.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The concept of loneliness and exile and self-sufficiency continually bucks me up.", false, true))
                                .addLitePalTags(EnumTag.CONCEPT.getLitePalTag())
                                .addLitePalTags(EnumTag.BUCKS.getLitePalTag())
                                .addLitePalTags(EnumTag.EXILE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I don't think it's possible to have a sense of tragedy without having a sense of humor.", false, true))
                                .addLitePalTags(EnumTag.HUMOR.getLitePalTag())
                                .addLitePalTags(EnumTag.SENSE_OF_HUMOR.getLitePalTag())
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To 'choose' dogma and faith over doubt and experience is to throw out the ripening vintage and to reach greedily for the Kool-Aid.", false, true))
                                .addLitePalTags(EnumTag.REACH.getLitePalTag())
                                .addLitePalTags(EnumTag.OVER.getLitePalTag())
                                .addLitePalTags(EnumTag.DOGMA.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Trust is not the same as faith. A friend is someone you trust. Putting faith in anyone is a mistake.", false, true))
                                .addLitePalTags(EnumTag.TRUST.getLitePalTag())
                                .addLitePalTags(EnumTag.MISTAKE.getLitePalTag())
                                .addLitePalTags(EnumTag.SAME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To the dumb question, 'Why me?' the cosmos barely bothers to return the reply, 'Why not?'", false, true))
                                .addLitePalTags(EnumTag.ME.getLitePalTag())
                                .addLitePalTags(EnumTag.QUESTION.getLitePalTag())
                                .addLitePalTags(EnumTag.BOTHERS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Religion is part of the human make-up. It's also part of our cultural and intellectual history. Religion was our first attempt at literature, the texts, our first attempt at cosmology, making sense of where we are in the universe, our first attempt at health care, believing in faith healing, our first attempt at philosophy.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("What can be asserted without evidence can be dismissed without evidence.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
                                .addLitePalTags(EnumTag.PART.getLitePalTag())
                                .addLitePalTags(EnumTag.MAKE_UP.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I learned that very often the most intolerant and narrow-minded people are the ones who congratulate themselves on their tolerance and open-mindedness.", false, true))
                                .addLitePalTags(EnumTag.WITHOUT.getLitePalTag())
                                .addLitePalTags(EnumTag.EVIDENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.ASSERTED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A gentleman is never rude except on purpose - I can honestly be nasty sober, believe you me.", false, true))
                                .addLitePalTags(EnumTag.PURPOSE.getLitePalTag())
                                .addLitePalTags(EnumTag.BELIEVE.getLitePalTag())
                                .addLitePalTags(EnumTag.HONESTLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Owners of dogs will have noticed that, if you provide them with food and water and shelter and affection, they will think you are God. Whereas owners of cats are compelled to realize that, if you provide them with food and water and affection, they draw the conclusion that they are God.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.SHELTER.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CLINT_EASTWOOD.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("God gave you a brain. Do the best you can with it. And you don't have to be Einstein, but Einstein was mentally tough. He believed what he believed. And he worked out things. And he argued with people who disagreed with him. But I'm sure he didn't call everybody jerks.", false, true))
                                .addLitePalTags(EnumTag.BEST.getLitePalTag())
                                .addLitePalTags(EnumTag.EVERYBODY.getLitePalTag())
                                .addLitePalTags(EnumTag.ARGUDED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I tried being reasonable, I didn't like it.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.REASONABLE.getLitePalTag())
                                .addLitePalTags(EnumTag.TRIED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("What you put into life is what you get out of it.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Sometimes if you want to see a change for the better, you have to take things into your own hands.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you want a guarantee, buy a toaster.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You should never give up your inner self.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I have a very strict gun control policy: if there's a gun around, I want to be in control of it.", false, true))
                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("They say marriages are made in Heaven. But so is thunder and lightning.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There's a rebel lying deep in my soul.", false, true))
                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Respect your efforts, respect yourself. Self-respect leads to self-discipline. When you have both firmly under your belt, that's real power.", false, true))
                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.CONOR_MCGREGOR.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You might win some, you might lose some. But you go in, you challenge yourself, you become a better man, a better individual, a better fighter.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I enjoy competition. I enjoy challenges. If a challenge is in front of me and it appeals to me, I will go ahead and conquer it.", false, true))
                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My success isn't a result of arrogance - it's a result of belief.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The more you seek the uncomfortable, the more you will become comfortable.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I am in the fighting game. I don't care about anything else. I don't watch the news, I don't care about politics, I don't care about other sports. I don't care about anything I don't need to care about. This is my sport: it is my life. I study it; I think about it all the time. Nothing else matters.", false, true))
                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm just looking to learn, grow, stay focused, and become a better fighter and a better athlete.", false, true))
                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm not going to get somewhere and say, 'OK, I'm done.' Success is never final; I'll just keep on going. The same way as failure never being fatal. Just keep going. I'm going to the stars and then past them.", false, true))
                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm just trying to be myself. I'm not trying to be anyone else.", false, true))
                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The thing about the truth is, not a lot of people can handle it.", false, true))
                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I don't feel pressure in a negative way. I like pressure. I feel excitement and calm at the same time. No pressure, no diamonds. I want pressure: pressure creates drama, creates emotion.", false, true))
                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );

        ////////////////////////////////////////////////////////////////////////////

//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DALAI_LAMA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Happiness is not something ready made. It comes from your own actions.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Calm mind brings inner strength and self-confidence, so that's very important for good health.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In order to carry a positive action we must develop here a positive vision.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Love and compassion are necessities, not luxuries. Without them humanity cannot survive.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Old friends pass away, new friends appear. It is just like the days. An old day passes, a new day arrives. The important thing is to make it meaningful: a meaningful friend - or a meaningful day.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be kind whenever possible. It is always possible.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you want others to be happy, practice compassion. If you want to be happy, practice compassion.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When we meet real tragedy in life, we can react in two ways - either by losing hope and falling into self-destructive habits, or by using the challenge to find our inner strength. Thanks to the teachings of Buddha, I have been able to take this second way.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you practice gratefulness, there is a sense of respect toward others.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Our prime purpose in this life is to help others. And if you can't help them, at least don't hurt them.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DOUGLAS_ADAMS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In the beginning the Universe was created. This has made a lot of people very angry and been widely regarded as a bad move.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is a well-known fact that those people who must want to rule people are, ipso facto, those least suited to do it... anyone who is capable of getting themselves made President should on no account be allowed to do the job.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("This must be Thursday. I never could get the hang of Thursdays.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is a mistake to think you can solve any major problems just with potatoes.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Human beings, who are almost unique in having the ability to learn from the experience of others, are also remarkable for their apparent disinclination to do so.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A common mistake that people make when trying to design something completely foolproof is to underestimate the ingenuity of complete fools.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I may not have gone where I intended to go, but I think I have ended up where I intended to be.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Flying is learning how to throw yourself at the ground and miss.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love deadlines. I like the whooshing sound they make as they fly by.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To give real service you must add something which cannot be bought or measured with money, and that is sincerity and integrity.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DICK_GREGORY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Political promises are much like marriage vows. They are made at the beginning of the relationship between candidate and voter, but are quickly forgotten.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I lost my rifle, the Army charged me 85 dollars. That is why in the Navy the Captain goes down with the ship.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Riches do not delight us so much with their possession, as torment us with their loss.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There's a God force inside of you that gives you a will to live.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am really enjoying the new Martin Luther King Jr stamp - just think about all those white bigots, licking the backside of a black man.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Just being a Negro doesn't qualify you to understand the race situation any more than being sick makes you an expert on medicine.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You know, I always say white is not a colour, white is an attitude, and if you haven't got trillions of dollars in the bank that you don't need, you can't be white.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We thought I was going to be a great athlete, and we were wrong, and I thought I was going to be a great entertainer, and that wasn't it either. I'm going to be an American Citizen. First class.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We used to root for the Indians against the cavalry, because we didn't think it was fair in the history books that when the cavalry won it was a great victory, and when the Indians won it was a massacre.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Coconut milk is the only thing on this planet that comes identically to mother's milk.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DOLLY_PARTON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I wake up, I expect things to be good. If they're not, then I try to set about trying to make them as good as I can 'cause I know I'm gonna have to live that day anyway. So why not try to make the most of it if you can? Some days, they pan out a little better than others, but you still gotta always just try.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You can be rich in spirit, kindness, love and all those things that you can't put a dollar sign on.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I wanted to write a book that talked about the emotions of children, which is the rainbow. We all have moods. We talk about being blue when we're sad, and being yellow when we're cowards, and when we're mad, we're red.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not offended by all the dumb blonde jokes because I know I'm not dumb... and I also know that I'm not blonde.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Storms make trees take deeper roots.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No matter what, I always make it home for Christmas. I love to go to my Tennessee Mountain Home and invite all of my nieces and nephews and their spouses and kids and do what we all like to do - eat, laugh, trade presents and just enjoy each other... and sometimes I even dress up like Santa Claus!", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's a good thing I was born a girl, otherwise I'd be a drag queen.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I thank God for my failures. Maybe not at the time but after some reflection. I never feel like a failure just because something I tried has failed.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you don't like the road you're walking, start paving another one.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The way I see it, if you want the rainbow, you gotta put up with the rain.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DONALD_TRUMP.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you open your heart to patriotism, there is no room for prejudice. The Bible tells us, 'How good and pleasant it is when God's people live together in unity.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When somebody challenges you, fight back. Be brutal, be tough.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have embraced crying mothers who have lost their children because our politicians put their personal agendas before the national good. I have no patience for injustice, no tolerance for government incompetence, no sympathy for leaders who fail their citizens.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We will make America strong again. We will make America proud again. We will make America safe again. And we will make America great again.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("One of the key problems today is that politics is such a disgrace, good people don't go into government.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is time to remember that old wisdom our soldiers will never forget: that whether we are black or brown or white, we all bleed the same red blood of patriots, we all enjoy the same glorious freedoms, and we all salute the same great American Flag.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My whole life is about winning. I don't lose often. I almost never lose.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You have to think anyway, so why not think big?", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No dream is too big. No challenge is too great. Nothing we want for our future is beyond our reach.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes by losing a battle you find a new way to win the war.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DR_SEUSS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Think left and think right and think low and think high. Oh, the thinks you can think up if only you try!", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The more that you read, the more things you will know. The more that you learn, the more places you'll go.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Unless someone like you cares a whole awful lot, nothing is going to get better. It's not.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Step with care and great tact, and remember that Life's a Great Balancing Act.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I like nonsense; it wakes up the brain cells.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("From there to here, and here to there, funny things are everywhere.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You have brains in your head. You have feet in your shoes. You can steer yourself in any direction you choose. You're on your own, and you know what you know. And you are the guy who'll decide where to go.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A person's a person, no matter how small.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't cry because it's over. Smile because it happened.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Today you are you! That is truer than true! There is no one alive who is you-er than you!", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DRAKE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes it's the journey that teaches you a lot about your destination.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Jealousy is just love and hate at the same time.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People like to buildQuotes their own story about my life. I don't know if it makes them feel better, or if it makes it okay for them to not like me, but the last thing I grew up as was rich.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People like to buildQuotes their own story about my life. I don't know if it makes them feel better, or if it makes it okay for them to not like me, but the last thing I grew up as was rich.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Me and my dad are friends. We're cool. I'll never be disappointed again, because I don't expect anything anymore from him. I just let him exist, and that's how we get along.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Trying to meet new women, it's always a little more difficult as opposed to calling somebody I knew that's single and trying to rebuild that connection.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I'm writing, I'm thinking about how the songs are going to play live. Fifty bars of rap don't translate onstage. No matter how potent the music, you lose the crowd. They want a hook; they want to sing your stuff back to you.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Reviews condition people. At the end of the day, a lot of human minds are malleable. They can be easily shaped with strong words.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My dad is a great writer. Naturally talented, naturally charming. He embodies that back-in-the-day cool.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I like Ryan Gosling as an actor. I watch all of his movies, and he's Canadian and I just like his swag. I read his interviews and I'm a big fan of his.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.DWIGHT_D_EISENHOWER.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leadership is the art of getting someone else to do something you want done because he wants to do it.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A people that values its privileges above its principles soon loses both.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Neither a wise man nor a brave man lies down on the tracks of history to wait for the train of the future to run over him.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Here in America we are descended in blood and in spirit from revolutionists and rebels - men and women who dare to dissent from accepted doctrine. As their heirs, may we never confuse honest dissent with disloyal subversion.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Plans are nothing; planning is everything.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In preparing for battle I have always found that plans are useless, but planning is indispensable.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You don't lead by hitting people over the head - that's assault, not leadership.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Motivation is the art of getting people to do what you want them to do because they want to do it.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("How far you can go without destroying from within what you are trying to defend from without?", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The supreme quality for leadership is unquestionably integrity. Without it, no real success is possible, no matter whether it is on a section gang, a football field, in an army, or in an office.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELIE_WIESEL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Just as despair can come to one only from other human beings, hope, too, can be given to one only by other human beings.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Wherever men and women are persecuted because of their race, religion, or political views, that place must - at that moment - become the center of the universe.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I marvel at the resilience of the Jewish people. Their best characteristic is their desire to remember. No other people has such an obsession with memory.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Most people think that shadows follow, precede or surround beings or objects. The truth is that they also surround words, ideas, desires, deeds, impulses and memories.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("That I survived the Holocaust and went on to love beautiful girls, to talk, to write, to have toast and tea and live my life - that is what is abnormal.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For me, every hour is grace. And I feel gratitude in my heart each time I can meet someone and look at his or her smile.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The opposite of love is not hate, it's indifference.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There may be times when we are powerless to prevent injustice, but there must never be a time when we fail to protest.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We must take sides. Neutrality helps the oppressor, never the victim. Silence encourages the tormentor, never the tormented.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Without memory, there is no culture. Without memory, there would be no civilization, no society, no future.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELIZABETH_I.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I know I have the body of a weak and feeble woman, but I have the heart and stomach of a king, and of a king of England too.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I do not want a husband who honours me as a queen, if he does not love me as a woman.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Though the sex to which I belong is considered weak you will nevertheless find me a rock that bends to no wind.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fear not, we are of the nature of the lion, and cannot descend to the destruction of mice and such small beasts.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing about which I am more anxious than my country, and for its sake I am willing to die ten deaths, if that be possible.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have the heart of a man, not a woman, and I am not afraid of anything.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("God has given such brave soldiers to this Crown that, if they do not frighten our neighbours, at least they prevent us from being frightened by them.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Must! Is must a word to be addressed to princes? Little man, little man! Thy father, if he had been alive, durst not have used that word.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Ye may have a greater prince, but ye shall never have a more loving prince.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My mortal foe can no ways wish me a greater harm than England's hate; neither should death be less welcome unto me than such a mishap betide me.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELLEN_DEGENERES.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes you can't see yourself clearly until you see yourself through the eyes of others.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's our challenges and obstacles that give us layers of depth and make us interesting. Are they fun when they happen? No. But they are what make us unique. And that's what I know for sure... I think.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Find out who you are and be that person. That's what your soul was put on this Earth to be. Find that truth, live that truth and everything else will come.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not an activist; I don't look for controversy. I'm not a political person, but I'm a person with compassion. I care passionately about equal rights. I care about human rights. I care about animal rights.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We need more kindness, more compassion, more joy, more laughter. I definitely want to contribute to that.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I had everything I'd hoped for, but I wasn't being myself. So I decided to be honest about who I was. It was strange: The people who loved me for being funny suddenly didn't like me for being... me.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We focus so much on our differences, and that is creating, I think, a lot of chaos and negativity and bullying in the world. And I think if everybody focused on what we all have in common - which is - we all want to be happy.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If we're destroying our trees and destroying our environment and hurting animals and hurting one another and all that stuff, there's got to be a very powerful energy to fight that. I think we need more love in the world. We need more kindness, more compassion, more joy, more laughter. I definitely want to contribute to that.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Here are the values that I stand for: honesty, equality, kindness, compassion, treating people the way you want to be treated and helping those in need. To me, those are traditional values.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I was raised around heterosexuals, as all heterosexuals are, that's where us gay people come from... you heterosexuals.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELON_MUSK.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We're running the most dangerous experiment in history right now, which is to see how much carbon dioxide the atmosphere... can handle before there is an environmental catastrophe.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you get up in the morning and think the future is going to be better, it is a bright day. Otherwise, it's not.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I was in college, I wanted to be involved in things that would change the world.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think that's the single best piece of advice: constantly think about how you could be doing things better and questioning yourself.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you're trying to create a company, it's like baking a cake. You have to have all the ingredients in the right proportion.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would like to die on Mars. Just not on impact.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Patience is a virtue, and I'm learning patience. It's a tough lesson.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Some people don't like change, but you need to embrace change if the alternative is disaster.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think it's very important to have a feedback loop, where you're constantly thinking about what you've done and how you could be doing it better. I think that's the single best piece of advice: constantly think about how you could be doing things better and questioning yourself.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When something is important enough, you do it even if the odds are not in your favor.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ELVIS_PRESLEY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not trying to be sexy. It's just my way of expressing myself when I move around.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Truth is like the sun. You can shut it out for a time, but it ain't goin' away.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Rock and roll music, if you like it, if you feel it, you can't help but move to it. That's what happens to me. I can't help it.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A live concert to me is exciting because of all the electricity that is generated in the crowd and on stage. It's my favorite part of the business, live concerts.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Rhythm is something you either have or don't have, but when you have it, you have it all over.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Adversity is sometimes hard upon a man; but for one man who can stand prosperity, there are a hundred that will stand adversity.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'll never feel comfortable taking a strong drink, and I'll never feel easy smoking a cigarette. I just don't think those things are right for me.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I was a boy, I always saw myself as a hero in comic books and in movies. I grew up believing this dream.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Man, that record came out and was real big in Memphis. They started playing it, and it got real big. Don't know why-the lyrics had no meaning.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's human nature to gripe, but I'm going ahead and doing the best I can.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.EMINEM.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A lot of truth is said in jest.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes I feel like rap music is almost the key to stopping racism.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dealing with backstabbers, there was one thing I learned. They're only powerful when you got your back turned.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everybody has goals, aspirations or whatever, and everybody has been at a point in their life where nobody believed in them.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am whatever you say I am; if I wasn't, then why would you say I am.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm stupid, I'm ugly, I'm dumb, I smell. Did I mention I'm stupid?", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I say what I want to say and do what I want to do. There's no in between. People will either love you for it or hate you for it.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Somewhere deep down there's a decent man in me, he just can't be found.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Trust is hard to come by. That's why my circle is small and tight. I'm kind of funny about making new friends.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The truth is you don't know what is going to happen tomorrow. Life is a crazy ride, and nothing is guaranteed.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ERMA_BOMBECK.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't confuse fame with success. Madonna is one; Helen Keller is the other.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For years my wedding ring has done its job. It has led me not into temptation. It has reminded my husband numerous times at parties that it's time to go home. It has been a source of relief to a dinner companion. It has been a status symbol in the maternity ward.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When your mother asks, 'Do you want a piece of advice?' it is a mere formality. It doesn't matter if you answer yes or no. You're going to get it anyway.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I stand before God at the end of my life, I would hope that I would not have a single bit of talent left, and could say, 'I used everything you gave me'.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never have more children than you have car windows.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dreams have only one owner at a time. That's why dreamers are lonely.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Thanksgiving dinners take eighteen hours to prepare. They are consumed in twelve minutes. Half-times take twelve minutes. This is not coincidence.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never go to a doctor whose office plants have died.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is a thin line that separates laughter and pain, comedy and tragedy, humor and hurt.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A grandmother pretends she doesn't know who you are on Halloween.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ERNEST_HEMINGWAY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is no friend as loyal as a book.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Courage is grace under pressure.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing noble in being superior to your fellow men. True nobility lies in being superior to your former self.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("But man is not made for defeat. A man can be destroyed but not defeated.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never go on trips with anyone you do not love.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I like to listen. I have learned a great deal from listening carefully. Most people never listen.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An intelligent man is sometimes forced to be drunk to spend time with his fools.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love sleep. My life has the tendency to fall apart when I'm awake, you know?", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The world breaks everyone, and afterward, some are strong at the broken places.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The best way to find out if you can trust somebody is to trust them.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.EDGAR_ALLAN_POE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Deep into that darkness peering, long I stood there, wondering, fearing, doubting, dreaming dreams no mortal ever dared to dream before.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would define, in brief, the poetry of words as the rhythmical creation of Beauty.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Words have no power to impress the mind without the exquisite horror of their reality.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All that we see or seem is but a dream within a dream.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("They who dream by day are cognizant of many things which escape those who dream only by night.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I became insane, with long intervals of horrible sanity.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The boundaries which divide Life from Death are at best shadowy and vague. Who shall say where the one ends, and where the other begins?", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We loved with a love that was more than love.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Once upon a midnight dreary, while I pondered weak and weary.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Science has not yet taught us if madness is or is not the sublimity of the intelligence.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANCIS_OF_ASSISI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Start by doing what's necessary; then do what's possible; and suddenly you are doing the impossible.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Lord, make me an instrument of thy peace. Where there is hatred, let me sow love.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A single sunbeam is enough to drive away many shadows.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Where there is charity and wisdom, there is neither fear nor ignorance.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is no use walking anywhere to preach unless our walking is our preaching.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("While you are proclaiming peace with your lips, be careful to have it even more fully in your heart.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If God can work through me, he can work through anyone.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Men lose all the material things they leave behind them in this world, but they carry with them the reward of their charity and the alms they give. For these, they will receive from the Lord the reward and recompense they deserve.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For it is in giving that we receive.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Lord, grant that I might not so much seek to be loved as to love.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANK_LIOYD_WRIGHT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Less is only more where more is no good.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life always rides in strength to victory, not through internationalism... but only through the direct responsibility of the individual.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Space is the breath of art.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No house should ever be on a hill or on anything. It should be of the hill. Belonging to it. Hill and house should live together each the happier for the other.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing more uncommon than common sense.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The longer I live, the more beautiful life becomes.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every great architect is - necessarily - a great poet. He must be a great original interpreter of his time, his day, his age.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The mother art is architecture. Without an architecture of our own we have no soul of our own civilization.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Study nature, love nature, stay close to nature. It will never fail you.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANK_SINATRA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You gotta love livin', baby, 'cause dyin' is a pain in the ass.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People often remark that I'm pretty lucky. Luck is only important in so far as getting the chance to sell yourself at the right moment. After that, you've got to have talent and know how to use it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Cock your hat - angles are attitudes.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm like Albert Schweitzer and Bertrand Russell and Albert Einstein in that I have a respect for life - in any form. I believe in nature, in the birds, the sea, the sky, in everything I can see or that there is real evidence for. If these things are what you mean by God, then I believe in God.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dare to wear the foolish clown face.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would like to be remembered as a man who had a wonderful time living life, a man who had good friends, fine family - and I don't think I could ask for anything more than that, actually.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm gonna live till I die.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I believe that God knows what each of us wants and needs. It's not necessary for us to make it to church on Sunday to reach Him. You can find Him anyplace. And if that sounds heretical, my source is pretty good: Matthew, Five to Seven, The Sermon on the Mount.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The best revenge is massive success.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Alcohol may be man's worst enemy, but the bible says love your enemy.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANKLIN_D_ROOSEVELT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The point in history at which we stand is full of promise and danger. The world will either move forward toward unity and widely shared prosperity - or it will move apart.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Confidence... thrives on honesty, on honor, on the sacredness of obligations, on faithful protection and on unselfish performance. Without them it cannot live.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The only thing we have to fear is fear itself.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not the smartest fellow in the world, but I can sure pick smart colleagues.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Democracy cannot succeed unless those who express their choice are prepared to choose wisely. The real safeguard of democracy, therefore, is education.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If civilization is to survive, we must cultivate the science of human relationships - the ability of all peoples, of all kinds, to live together, in the same world at peace.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you reach the end of your rope, tie a knot in it and hang on.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Let us never forget that government is ourselves and not an alien power over us. The ultimate rulers of our democracy are not a President and senators and congressmen and government officials, but the voters of this country.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nobody will ever deprive the American people of the right to vote except the American people themselves and the only way they could do this is by not voting.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Happiness lies in the joy of achievement and the thrill of creative effort.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRANZ_KAFKA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have the true feeling of myself only when I am unbearably unhappy.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every revolution evaporates and leaves behind only the slime of a new bureaucracy.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You do not need to leave your room. Remain sitting at your table and listen. Do not even listen, simply wait, be quiet still and solitary. The world will freely offer itself to you to be unmasked, it has no choice, it will roll in ecstasy at your feet.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My peers, lately, have found companionship through means of intoxication - it makes them sociable. I, however, cannot force myself to use drugs to cheat on my loneliness - it is all that I have - and when the drugs and alcohol dissipate, will be all that my peers have as well.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("So long as you have food in your mouth, you have solved all questions for the time being.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Start with what is right rather than what is acceptable.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("From a certain point onward there is no longer any turning back. That is the point that must be reached.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("God gives the nuts, but he does not crack them.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A first sign of the beginning of understanding is the wish to die.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Anyone who keeps the ability to see beauty never grows old.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FREDERICK_DOUGLASS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The soul that is within me no man can degrade.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The thing worse than rebellion is the thing that causes rebellion.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I didn't know I was a slave until I found out I couldn't do the things I wanted.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To suppress free speech is a double wrong. It violates the rights of the hearer as well as those of the speaker.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The white man's happiness cannot be purchased by the black man's misery.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is not light that we need, but fire; it is not the gentle shower, but thunder. We need the storm, the whirlwind, and the earthquake.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Without a struggle, there can be no progress.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Where justice is denied, where poverty is enforced, where ignorance prevails, and where any one class is made to feel that society is an organized conspiracy to oppress, rob and degrade them, neither persons nor property will be safe.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is easier to buildQuotes strong children than to repair broken men.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If there is no struggle, there is no progress.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRIDA_KAHLO.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love you more than my own skin.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am my own muse, the subject I know best.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I never paint dreams or nightmares. I paint my own reality.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I paint flowers so they will not die.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I paint self-portraits because I am so often alone, because I am the person I know best.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I tried to drown my sorrows, but the bastards learned how to swim, and now I am overwhelmed by this decent and good feeling.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I leave you my portrait so that you will have my presence all the days and nights that I am away from you.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I was a child who went about in a world of colors... My friends, my companions, became women slowly; I became old in instants.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I find that Americans completely lack sensibility and good taste. They are boring, and they all have faces like unbaked rolls.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The most important part of the body is the brain. Of my face, I like the eyebrows and eyes. Aside from that, I like nothing. My head is too small.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FRIEDRICH_NIETZSCHE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("God is dead. God remains dead. And we have killed him. Yet his shadow still looms. How shall we comfort ourselves, the murderers of all murderers? What was holiest and mightiest of all that the world has yet owned has bled to death under our knives; who will wipe this blood off us? What water is there for us to clean ourselves?", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All truly great thoughts are conceived by walking.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The individual has always had to struggle to keep from being overwhelmed by the tribe. If you try it, you will be lonely often, and sometimes frightened. But no price is too high to pay for the privilege of owning yourself.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Whoever fights monsters should see to it that in the process he does not become a monster. And if you gaze long enough into an abyss, the abyss will gaze back into you.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We love life, not because we are used to living but because we are used to loving.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Thoughts are the shadows of our feelings - always darker, emptier and simpler.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is always some madness in love. But there is also always some reason in madness.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Without music, life would be a mistake.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To live is to suffer, to survive is to find some meaning in the suffering.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is not a lack of love, but a lack of friendship that makes unhappy marriages.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.FYODOR_DOSTOEVSKY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If there is no God, everything is permitted.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A real gentleman, even if he loses everything he owns, must show no emotion. Money must be so far beneath a gentleman that it is hardly worth troubling about.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Much unhappiness has come into the world because of bewilderment and things left unsaid.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The cleverest of all, in my opinion, is the man who calls himself a fool at least once a month.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sarcasm: the last refuge of modest and chaste-souled people when the privacy of their soul is coarsely and intrusively invaded.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The soul is healed by being with children.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To live without Hope is to Cease to live.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The greatest happiness is to know the source of unhappiness.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We sometimes encounter people, even perfect strangers, who begin to interest us at first sight, somehow suddenly, all at once, before a word has been spoken.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Beauty is mysterious as well as terrible. God and devil are fighting there, and the battlefield is the heart of man.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GEORGE_BERNARD_SHAW.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life isn't about finding yourself. Life is about creating yourself.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Progress is impossible without change, and those who cannot change their minds cannot change anything.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We are made wise not by the recollection of our past, but by the responsibility for our future.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The single biggest problem in communication is the illusion that it has taken place.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is no sincerer love than the love of food.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Beware of false knowledge; it is more dangerous than ignorance.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Success does not consist in never making mistakes but in never making the same one a second time.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you cannot get rid of the family skeleton, you may as well make it dance.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Better keep yourself clean and bright; you are the window through which you must see the world.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Imagination is the beginning of creation. You imagine what you desire, you will what you imagine and at last you create what you will.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GALILEO_GALILEI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We cannot teach people anything; we can only help them discover it within themselves.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All truths are easy to understand once they are discovered; the point is to discover them.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The Bible shows the way to go to heaven, not the way the heavens go.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If I were again beginning my studies, I would follow the advice of Plato and start with mathematics.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In questions of science, the authority of a thousand is not worth the humble reasoning of a single individual.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Measure what is measurable, and make measurable what is not so.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I do not feel obliged to believe that the same God who has endowed us with sense, reason, and intellect has intended us to forgo their use.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I give infinite thanks to God, who has been pleased to make me the first observer of marvelous things.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is surely harmful to souls to make it a heresy to believe what is proved.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think that in the discussion of natural problems we ought to begin not with the Scriptures, but with experiments, and demonstrations.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GEORGE_CARLIN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Frisbeetarianism is the belief that when you die, your soul goes up on the roof and gets stuck.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The main reason Santa is so jolly is because he knows where all the bad girls live.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Have you ever noticed that anybody driving slower than you is an idiot, and anyone going faster than you is a maniac?", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Electricity is really just organized lightning.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Inside every cynical person, there is a disappointed idealist.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't sweat the petty things and don't pet the sweaty things.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Just cause you got the monkey off your back doesn't mean the circus has left town.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("May the forces of evil become confused on the way to your house.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There are nights when the wolves are silent and only the moon howls.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Weather forecast for tonight: dark.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GEORGE_ORWELL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Power is not a means, it is an end. One does not establish a dictatorship in order to safeguard a revolution; one makes the revolution in order to establish the dictatorship.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The essence of being human is that one does not seek perfection.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The very concept of objective truth is fading out of the world. Lies will pass into history.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Political language... is designed to make lies sound truthful and murder respectable, and to give an appearance of solidity to pure wind.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Freedom is the right to tell people what they do not want to hear.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Each generation imagines itself to be more intelligent than the one that went before it, and wiser than the one that comes after it.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Who controls the past controls the future. Who controls the present controls the past.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Happiness can exist only in acceptance.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In our age there is no such thing as 'keeping out of politics.' All issues are political issues, and politics itself is a mass of lies, evasions, folly, hatred and schizophrenia.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("War is peace. Freedom is slavery. Ignorance is strength.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GEORGE_S_PATTON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Courage is fear holding on a minute longer.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You need to overcome the tug of people against you as you reach for high goals.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Wars may be fought with weapons, but they are won by men. It is the spirit of men who follow and of the man who leads that gains the victory.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Battle is the most magnificent competition in which a human being can indulge. It brings out all that is best; it removes all that is base. All men are afraid in battle. The coward is the one who lets his fear overcome his sense of duty. Duty is the essence of manhood.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If everyone is thinking alike, then somebody isn't thinking.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Success is how high you bounce when you hit bottom.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The object of war is not to die for your country but to make the other bastard die for his.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is foolish and wrong to mourn the men who died. Rather we should thank God that such men lived.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A good plan violently executed now is better than a perfect plan executed next week.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Accept the challenges so that you can feel the exhilaration of victory.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GEORGE_W_BUSH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("This was not an act of terrorism, but it was an act of war.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("On September 11 2001, America felt its vulnerability even to threats that gather on the other side of the Earth. We resolved then, and we are resolved today, to confront every threat from any source that could bring sudden terror and suffering to America.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To those of you who received honours, awards and distinctions, I say well done. And to the C students, I say you, too, can be president of the United States.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's clearly a budget. It's got a lot of numbers in it.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Some folks look at me and see a certain swagger, which in Texas is called 'walking.'", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We will not waver; we will not tire; we will not falter, and we will not fail. Peace and Freedom will prevail.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("America is a Nation with a mission - and that mission comes from our most basic beliefs. We have no desire to dominate, no ambitions of empire. Our aim is a democratic peace - a peace founded upon the dignity and rights of every man and woman.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We've climbed the mighty mountain. I see the valley below, and it's a valley of peace.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Terrorist attacks can shake the foundations of our biggest buildings, but they cannot touch the foundation of America. These acts shatter steel, but they cannot dent the steel of American resolve.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("America is the land of the second chance - and when the gates of the prison open, the path ahead should lead to a better life.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.GEORGE_WASHINGTON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is better to offer no excuse than a bad one.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We should not look back unless it is to derive useful lessons from past errors, and for the purpose of profiting by dearly bought experience.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Liberty, when it begins to take root, is a plant of rapid growth.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The Constitution is the guide which I never will abandon.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Guard against the impostures of pretended patriotism.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Truth will ultimately prevail where there is pains to bring it to light.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To be prepared for war is one of the most effective means of preserving peace.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Observe good faith and justice toward all nations. Cultivate peace and harmony with all.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If the freedom of speech is taken away then dumb and silent we may be led, like sheep to the slaughter.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is far better to be alone, than to be in bad company.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HELEN_KELLER.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Optimism is the faith that leads to achievement. Nothing can be done without hope and confidence.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Walking with a friend in the dark is better than walking alone in the light.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Keep your face to the sunshine and you cannot see a shadow.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Character cannot be developed in ease and quiet. Only through experience of trial and suffering can the soul be strengthened, ambition inspired, and success achieved.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Knowledge is love and light and vision.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("So long as the memory of certain beloved friends lives in my heart, I shall say that life is good.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Alone we can do so little; together we can do so much.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life is either a great adventure or nothing.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never bend your head. Always hold it high. Look the world straight in the eye.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.H_JACKSON_BROWN_JR.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never forget the three powerful resources you always have available to you: love, prayer, and forgiveness.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Earn your success based on service to others, not at the expense of others.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Our character is what we do when we think no one is looking.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never give up on what you really want to do. The person with big dreams is more powerful than the one with all the facts.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Live so that when your children think of fairness, caring, and integrity, they think of you.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Remember that the happiest people are not those getting more, but those giving more.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Remember that the most valuable antiques are dear old friends.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sometimes the heart sees what is invisible to the eye.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Love is when the other person's happiness is more important than your own.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The best preparation for tomorrow is doing your best today.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HL_MENCKEN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The one permanent emotion of the inferior man is fear - fear of the unknown, the complex, the inexplicable. What he wants above everything else is safety.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A judge is a law student who marks his own examination papers.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Legend: A lie that has attained the dignity of age.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In this world of sin and sorrow there is always something to be thankful for; as for me, I rejoice that I am not a Republican.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every election is a sort of advance auction sale of stolen goods.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The whole aim of practical politics is to keep the populace alarmed (and hence clamorous to be led to safety) by menacing it with an endless series of hobgoblins, all of them imaginary.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Democracy is a pathetic belief in the collective wisdom of individual ignorance.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For every complex problem there is an answer that is clear, simple, and wrong.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("On some great and glorious day the plain folks of the land will reach their heart's desire at last, and the White House will be adorned by a downright moron.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Democracy is the art and science of running the circus from the monkey cage.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HP_LOVECRAFT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Blue, green, grey, white, or black; smooth, ruffled, or mountainous; that ocean is not silent.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The most merciful thing in the world... is the inability of the human mind to correlate all its contents.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is absolutely necessary, for the peace and safety of mankind, that some of earth's dark, dead corners and unplumbed depths be let alone; lest sleeping abnormalities wake to resurgent life, and blasphemously surviving nightmares squirm and splash out of their black lairs to newer and wider conquests.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We live on a placid island of ignorance in the midst of black seas of infinity, and it was not meant that we should voyage far.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Children will always be afraid of the dark, and men with minds sensitive to hereditary impulse will always tremble at the thought of the hidden and fathomless worlds of strange life which may pulsate in the gulfs beyond the stars, or press hideously upon our own globe in unholy dimensions which only the dead and the moonstruck can glimpse.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Unhappy is he to whom the memories of childhood bring only fear and sadness.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The world is indeed comic, but the joke is on mankind.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Cats are the runes of beauty, invincibility, wonder, pride, freedom, coldness, self-sufficiency, and dainty individuality - the qualities of sensitive, enlightened, mentally developed, pagan, cynical, poetic, philosophic, dispassionate, reserved, independent, Nietzschean, unbroken, civilised, master-class men.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The oldest and strongest emotion of mankind is fear, and the oldest and strongest kind of fear is fear of the unknown.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Ocean is more ancient than the mountains, and freighted with the memories and the dreams of Time.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HARRIET_TUBMAN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Read my letter to the old folks, and give my love to them, and tell my brothers to be always watching unto prayer, and when the good old ship of Zion comes along, to be ready to step aboard.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In my dreams and visions, I seemed to see a line, and on the other side of that line were green fields, and lovely flowers, and beautiful white ladies, who stretched out their arms to me over the line, but I couldn't reach them no-how. I always fell before I got to the line.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never wound a snake; kill it.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I grew up like a neglected weed - ignorant of liberty, having no experience of it.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I had crossed the line. I was free; but there was no one to welcome me to the land of freedom. I was a stranger in a strange land.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I had reasoned this out in my mind, there was one of two things I had a right to, liberty or death; if I could not have one, I would have the other.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I was the conductor of the Underground Railroad for eight years, and I can say what most conductors can't say; I never ran my train off the track and I never lost a passenger.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think slavery is the next thing to hell. If a person would send another into bondage, he would, it appears to me, be bad enough to send him into hell if he could.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Now I've been free, I know what a dreadful condition slavery is. I have seen hundreds of escaped slaves, but I never saw one who was willing to go back and be a slave.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HARRY_S_TRUMAN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You want a friend in Washington? Get a dog.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The atom bomb was no 'great decision.' It was merely another powerful weapon in the arsenal of righteousness.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A pessimist is one who makes difficulties of his opportunities and an optimist is one who makes opportunities of his difficulties.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I never did give anybody hell. I just told the truth and they thought it was hell.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In reading the lives of great men, I found that the first victory they won was over themselves. self-discipline with all of them came first.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Actions are the seed of fate deeds grow into destiny.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("America was not built on fear. America was built on courage, on imagination and an unbeatable determination to do the job at hand.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is amazing what you can accomplish if you do not care who gets the credit.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Men make history and not the other way around. In periods where there is no leadership, society stands still. Progress occurs when courageous, skillful leaders seize the opportunity to change things for the better.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing new in the world except the history you do not know.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HENRY_DAVID_THOREAU.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What lies behind us and what lies ahead of us are tiny matters compared to what lives within us.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Pursue some path, however narrow and crooked, in which you can walk with love and reverence.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Not until we are lost do we begin to understand ourselves.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An early-morning walk is a blessing for the whole day.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am grateful for what I am and have. My thanksgiving is perpetual.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Many men go fishing all of their lives without knowing that it is not fish they are after.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The language of friendship is not words but meanings.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("This world is but a canvas to our imagination.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Friends... they cherish one another's hopes. They are kind to one another's dreams.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's not what you look at that matters, it's what you see.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HENRY_FORD.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Thinking is the hardest work there is, which is probably the reason why so few engage in it.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When everything seems to be going against you, remember that the airplane takes off against the wind, not with it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Obstacles are those frightful things you see when you take your eyes off your goal.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you think you can do a thing or think you can't do a thing, you're right.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If everyone is moving forward together, then success takes care of itself.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A business that makes nothing but money is a poor business.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't find fault, find a remedy.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Failure is simply the opportunity to begin again, this time more intelligently.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My best friend is the one who brings out the best in me.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Coming together is a beginning; keeping together is progress; working together is success.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.HENRY_KISSINGER.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is, after all, the responsibility of the expert to operate the familiar and that of the leader to transcend it.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For other nations, utopia is a blessed past never to be recovered; for Americans it is just beyond the horizon.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My view of my role is that together with like-minded men and women, I could help contribute to a bipartisan view of American engagement in the world for another period; I could do my part to overcome this really, in a way, awful period in which we are turning history into personal recriminations, depriving our political system of a serious debate.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("America has fought five wars since 1945 and has gained its objectives in only one of them, the Gulf War.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Ninety percent of the politicians give the other ten percent a bad reputation.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("University politics are vicious precisely because the stakes are so small.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The Vietnam War was a great tragedy for our country. And it is now far enough away so that one can study without using the slogans to see what's really happened.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Accept everything about yourself - I mean everything, You are you and that is the beginning and the end - no apologies, no regrets.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The task of the leader is to get his people from where they are to where they have not been.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There cannot be a crisis next week. My schedule is already full.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ICE_CUBE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think, to me, reality is better than being fake.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't worry about being a star, worry about doing good work, and all that will come to you.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Truth is the ultimate power. When the truth comes around, all the lies have to run and hide.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think the worst thing you can do about a situation is nothing.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't worry about being a star, worry about doing good work, and all that will come to you.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Truth is the ultimate power. When the truth comes around, all the lies have to run and hide.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think the worst thing you can do about a situation is nothing.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I make a mean cup of coffee, if you give me the right ingredients.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Rap is always evolving. It's easy for the old school to hate the new school, but it's a music that got a little stifled I think, by the Internet a little bit.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What I learned from architectural drafting is that everything has to have a plan to work. You just can't wing it. I can't get all the materials I need for a house and just start building. Whether it's a career, family, life - you have to plan it out.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I used to game a lot, you know, back in the day. My gaming time done got so short that my skills ain't where they need to be to be online, you know what I'm saying? I just got that Xbox One. I gotta get my skills back, up the par to call myself a gamer.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have a really beautiful life right now, so there is no reason to be hostile. I'm a husband, a father and a man who tries to do the right thing in life and in my work.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Gangsta to us didn't have anything to do with Al Capone and stuff like that. It's just about living your life the way you want to live it. And you're not going to let nothing stop you.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.IDA_B_WELLS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The people must know before they can act, and there is no educator to compare with the press.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Our country's national crime is lynching. It is not the creature of an hour, the sudden outburst of uncontrolled fury, or the unspeakable brutality of an insane mob.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Somebody must show that the Afro-American race is more sinned against than sinning, and it seems to have fallen upon me to do so.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No nation, savage or civilized, save only the United States of America, has confessed its inability to protect its women save by hanging, shooting, and burning alleged offenders.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The mob spirit has grown with the increasing intelligence of the Afro-American.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What becomes a crime deserving capital punishment when the tables are turned is a matter of small moment when the negro woman is the accusing party.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The South is brutalized to a degree not realized by its own inhabitants, and the very foundation of government, law and order, are imperilled.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The alleged menace of universal suffrage having been avoided by the absolute suppression of the negro vote, the spirit of mob murder should have been satisfied and the butchery of negroes should have ceased.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Brave men do not gather by thousands to torture and murder a single individual, so gagged and bound he cannot make even feeble resistance or defense.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.IMMANUEL_KANT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("He who is cruel to animals becomes hard also in his dealings with men. We can judge the heart of a man by his treatment of animals.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Always recognize that human individuals are ends, and do not use them as means to your end.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All our knowledge begins with the senses, proceeds then to the understanding, and ends with reason. There is nothing higher than reason.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is beyond a doubt that all our knowledge begins with experience.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Morality is not the doctrine of how we may make ourselves happy, but how we may make ourselves worthy of happiness.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Live your life as though your every act were to become a universal law.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Thoughts without content are empty, intuitions without concepts are blind.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Two things awe me most, the starry sky above me and the moral law within me.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In law a man is guilty when he violates the rights of others. In ethics he is guilty if he only thinks of doing so.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Science is organized knowledge. Wisdom is organized life.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.INDIRA_GANDHI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There are two kinds of people, those who do the work and those who take the credit. Try to be in the first group; there is less competition there.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Winning or losing of the election is less important than strengthening the country.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have lived a long life, and I am proud that I spend the whole of my life in the service of my people. I am only proud of this and nothing else. I shall continue to serve until my last breath, and when I die, I can say, that every drop of my blood will invigorate India and strengthen it.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The power to question is the basis of all human progress.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You cannot shake hands with a clenched fist.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You must learn to be still in the midst of activity and to be vibrantly alive in repose.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We have to prove to the disinherited majority of the world that ecology and conservation will not work against their interest but will bring an improvement in their lives.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Have a bias toward action - let's see something happen now. You can break that big plan into small steps and take the first step right away.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Happiness is a state of mind, you know. I don't think you are permanently happy. One is happy about certain things and not so happy about others.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I do not like carving the world into segments; we are one world.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.INDIRA_NOOYI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leadership is hard to define and good leadership even harder. But if you can get people to follow you to the ends of the earth, you are a great leader.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("At the end of the day, don't forget that you're a person, don't forget you're a mother, don't forget you're a wife, don't forget you're a daughter.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("As a leader, I am tough on myself and I raise the standard for everybody; however, I am very caring because I want people to excel at what they are doing so that they can aspire to be me in the future.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When it comes to women, there has been a tendency to define women in sports in the context of their relationships - they watch games because their husbands watch. They're interested because their kids play a sport. They buy tickets to a sporting event because it's a way to spend time with family.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every year in consulting is like three years in the corporate world because you have multiple clients, multiple issues - you grow so much.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The distance between number one and number two is always a constant. If you want to improve the organization, you have to improve yourself and the organization gets pulled up with you. That is a big lesson. I cannot just expect the organization to improve if I don't improve myself and lift the organization, because that distance is a constant.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Most companies target women as end users, but few are effectively utilizing female employees when it comes to innovating for female consumers. When women are empowered in the design and innovation process, the likelihood of success in the marketplace improves by 144%!", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Each and every one of us has unknowingly played a part in the obesity problem.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm very honest - brutally honest. I always look at things from their point of view as well as mine. And I know when to walk away.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Is Naked Juice a beverage, or is it a snack? I think we can liquefy snacks or snackify liquids.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.IRIS_APFEL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Great personal style is an extreme curiosity about yourself.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't happen to approve of plastic surgery. I think God put plastic surgeons on this earth for good reasons - people get burned or people might have a nose like Pinocchio and that has to be fixed. But to just chop yourself up to look a few years younger? You could come out looking like a Picasso picture.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I mix everything up. A museum curator once said to me that there is a great jazz component to the way I do things because good jazz is improvisation and draws elements from all different cultures. And that's the way I do everything - the way I dress and decorate.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you don't learn constantly, you don't grow, and you will wither. Too many people wither on the vine. Sure, it gets a little harder as you get older, but new experiences and new challenges keep it fresh.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You have to push yourself when you're older because it's very easy to fall into the trap. You start to fall apart - you just have to do your best to paste yourself together. I think doing things and being active is very important. When your mind is busy, you don't hurt so much.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The White House is the people's house. When you do historical restoration, that must be what it is.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fashion and interior design are one and the same.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Self-exploration is very painful, but unless you do that, you will never know who you are and who you want to be.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My father told me once not to expect anything from anybody so I wouldn't be disappointed. If somebody was nice and did nice things for me, I should be overjoyed, but I shouldn't go through life expecting it, which is very good advice.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There's different shopping in Paris than there is at a bazaar in Istanbul, but they're all wonderful.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ISAAC_NEWTON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Atheism is so senseless. When I look at the solar system, I see the earth at the right distance from the sun to receive the proper amounts of heat and light. This did not happen by chance.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Gravity may put the planets into motion, but without the divine Power, it could never put them into such a circulating motion as they have about the Sun; and therefore, for this as well as other reasons, I am compelled to ascribe the frame of this System to an intelligent Agent.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Genius is patience.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My powers are ordinary. Only my application brings me success.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I can calculate the motion of heavenly bodies, but not the madness of people.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To every action there is always opposed an equal reaction.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I do not know what I may appear to the world, but to myself I seem to have been only like a boy playing on the seashore, and diverting myself in now and then finding a smoother pebble or a prettier shell than ordinary, whilst the great ocean of truth lay all undiscovered before me.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Truth is ever to be found in simplicity, and not in the multiplicity and confusion of things.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We buildQuotes too many walls and not enough bridges.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If I have seen further than others, it is by standing upon the shoulders of giants.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ISAAC_ASIMOV.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never let your sense of morals get in the way of doing what's right.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Humanity has the stars in its future, and that future is too important to be lost under the burden of juvenile folly and ignorant superstition.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The true delight is in the finding out rather than in the knowing.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The saddest aspect of life right now is that science gathers knowledge faster than society gathers wisdom.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Writing, to me, is simply thinking through my fingers.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I do not fear computers. I fear the lack of them.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Violence is the last refuge of the incompetent.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is a cult of ignorance in the United States, and there has always been. The strain of anti-intellectualism has been a constant thread winding its way through our political and cultural life, nurtured by the false notion that democracy means that my ignorance is just as good as your knowledge.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life is pleasant. Death is peaceful. It's the transition that's troublesome.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People who think they know everything are a great annoyance to those of us who do.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.JESUS_CHRIST.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Do not let your hearts be troubled. Trust in God; trust also in me.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am the Way, the Truth, and the Life. No one comes to the Father except through me.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("And know that I am with you always; yes, to the end of time.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A new command I give you: Love one another. As I have loved you, so you must love one another.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For what shall it profit a man, if he gain the whole world, and suffer the loss of his soul?", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("But I say to you, Love your enemies and pray for those who persecute you, so that you may be sons of your Father who is in heaven; for he makes his sun rise on the evil and on the good, and sends rain on the just and on the unjust.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("So I say to you, Ask and it will be given to you; search, and you will find; knock, and the door will be opened for you.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Blessed are the merciful, for they will be shown mercy.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Do not be anxious about tomorrow, for tomorrow will be anxious for itself. Let the day's own trouble be sufficient for the day.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Let the one among you who is without sin be the first to cast a stone.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.JK_ROWLING.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Imagination is not only the uniquely human capacity to envision that which is not, and therefore the fount of all invention and innovation. In its arguably most transformative and revelatory capacity, it is the power to that enables us to empathize with humans whose experiences we have never shared.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Indifference and neglect often do much more damage than outright dislike.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The most important thing is to read as much as you can, like I did. It will give you an understanding of what makes good writing and it will enlarge your vocabulary.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Poverty entails fear and stress and sometimes depression. It meets a thousand petty humiliations and hardships. Climbing out of poverty by your own efforts that is something on which to pride yourself but poverty itself is romanticized by fools.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Anything's possible if you've got enough nerve.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I sometimes have a tendency to walk on the dark side.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It takes a great deal of bravery to stand up to our enemies, but just as much to stand up to our friends.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you want to see the true measure of a man, watch how he treats his inferiors, not his equals.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is impossible to live without failing at something, unless you live so cautiously that you might as well not have lived at all, in which case you have failed by default.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is our choices... that show what we truly are, far more than our abilities.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.JACK_WELCH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Giving people self-confidence is by far the most important thing that I can do. Because then they will act.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you pick the right people and give them the opportunity to spread their wings and put compensation as a carrier behind it you almost don't have to manage them.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Management is all about managing in the short term, while developing the plans for the long ", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Globalization has changed us into a company that searches the world, not just to sell or to source, but to find intellectual capital - the world's best talents and greatest ideas.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be candid with everyone.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Number one, cash is king... number two, communicate... number three, buy or bury the competition.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Good business leaders create a vision, articulate the vision, passionately own the vision, and relentlessly drive it to completion.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Control your own destiny or someone else will.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Before you are a leader, success is all about growing yourself. When you become a leader, success is all about growing others.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An organization's ability to learn, and translate that learning into action rapidly, is the ultimate competitive advantage.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.JAMES_A_BALDWIN.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The power of the white world is threatened whenever a black man refuses to accept the white world's definitions.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Those who say it can't be done are usually interrupted by others doing it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I imagine one of the reasons people cling to their hates so stubbornly is because they sense, once hate is gone, they will be forced to deal with pain.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fires can't be made with dead embers, nor can enthusiasm be stirred by spiritless men. Enthusiasm in our daily work lightens effort and turns even labor into pleasant tasks.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Children have never been very good at listening to their elders, but they have never failed to imitate them.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love America more than any other country in this world, and, exactly for this reason, I insist on the right to criticize her perpetually.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Love does not begin and end the way we seem to think it does. Love is a battle, love is a war; love is a growing up.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Anyone who has ever struggled with poverty knows how extremely expensive it is to be poor.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The paradox of education is precisely this - that as one begins to become conscious one begins to examine the society in which he is being educated.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is certain, in any case, that ignorance, allied with power, is the most ferocious enemy justice can have.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.JOHN_C_MAXWELL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Without failure there is no achievement.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leaders must be close enough to relate to others, but far enough ahead to motivate them.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Family and friendships are two of the greatest facilitators of happiness.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A word of encouragement from a teacher to a child can change a life. A word of encouragement from a spouse can save a marriage. A word of encouragement from a leader can inspire a person to reach her potential.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There are two kinds of pride, both good and bad. 'Good pride' represents our dignity and self-respect. 'Bad pride' is the deadly sin of superiority that reeks of conceit and arrogance.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A man must be big enough to admit his mistakes, smart enough to profit from them, and strong enough to correct them.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The secret of your success is determined by your daily agenda.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People may hear your words, but they feel your attitude.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A leader is one who knows the way, goes the way, and shows the way.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leadership is influence.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.JOHN_F_KENNEDY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Conformity is the jailer of freedom and the enemy of growth.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My brother Bob doesn't want to be in government - he promised Dad he'd go straight.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Efforts and courage are not enough without purpose and direction.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Things do not happen. Things are made to happen.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If we cannot now end our differences, at least we can help make the world safe for diversity.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My fellow Americans, ask not what your country can do for you, ask what you can do for your country.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Physical fitness is not only one of the most important keys to a healthy body, it is the basis of dynamic and creative intellectual activity.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leadership and learning are indispensable to each other.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Change is the law of life. And those who look only to the past or present are certain to miss the future.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("As we express our gratitude, we must never forget that the highest appreciation is not to utter words, but to live by them.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.JOHANN_WOLFGANG_VON_GOETHE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I call architecture frozen music.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A man's manners are a mirror in which he shows his portrait.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("One must ask children and birds how cherries and strawberries taste.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The way you see people is the way you treat them, and the way you treat them is what they become.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Magic is believing in yourself, if you can do that, you can make anything happen.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Correction does much, but encouragement does more.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Behavior is the mirror in which everyone shows their image.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Girls we love for what they are; young men for what they promise to be.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Knowing is not enough; we must apply. Willing is not enough; we must do.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The soul that sees beauty may sometimes walk alone.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.KANYE_WEST.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("George Bush doesn't care about black people.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Keep your nose out the sky, keep your heart to god, and keep your face to the raising sun.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I refuse to accept other people's ideas of happiness for me. As if there's a 'one size fits all' standard for happiness.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think I do myself a disservice by comparing myself to Steve Jobs and Walt Disney and human beings that we've seen before. It should be more like Willy Wonka... and welcome to my chocolate factory.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't know what's better gettin' laid or gettin' paid.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am Warhol. I am the No. 1 most impactful artist of our generation. I am Shakespeare in the flesh.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nothing in life is promised except death.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Would you believe in what you believe in if you were the only one who believed it?", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I feel like I'm too busy writing history to read it.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you have the opportunity to play this game of life you need to appreciate every moment. a lot of people don't appreciate the moment until it's passed.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.KARL_MARX.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Religion is the sigh of the oppressed creature, the heart of a heartless world, and the soul of soulless conditions. It is the opium of the people.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Workers of the world unite; you have nothing to lose but your chains.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The theory of Communism may be summed up in one sentence: Abolish all private property.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Capitalist production, therefore, develops technology, and the combining together of various processes into a social whole, only by sapping the original sources of all wealth - the soil and the labourer.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Social progress can be measured by the social position of the female sex.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Democracy is the road to socialism.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The production of too many useful things results in too many useless people.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The history of all previous societies has been the history of class struggles.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Let the ruling classes tremble at a communist revolution. The proletarians have nothing to lose but their chains. They have a world to win. Workingmen of all countries, unite!", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("History repeats itself, first as tragedy, second as farce.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.KENDRICK_LAMAR.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My moms always told me, 'How long you gonna play the victim?' I can say I'm mad and I hate everything, but nothing really changes until I change myself.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I learned, when I look in the mirror and tell my story, that I should be myself and not peep whatever everybody is doing.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If I'm gonna tell a real story, I'm gonna start with my name.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My whole thing is to inspire, to better people, to better myself forever in this thing that we call rap, this thing that we call hip hop.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I look at where I'm at today and realize that most of my success is owed to the mentors that was in my life.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People have to go through trials and tribulations to get where they at. Do your thing - continue to rock it - because obviously, God wants you here.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's a great, great experience to finally get the reception that you know you rightfully deserve.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Since day one, since the first time I touched the pen, I wanted to be the best at what I do.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People are used to music that justifies street culture but something that's not touched on is why these kids act the way they act, live the way they live.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My word will never be as strong as God's word. All I am is just a vessel, doing His work.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.KEANU_REEVES.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Falling in love and having a relationship are two different things.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Grief changes shape, but it never ends.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am not handsome or sexy. Of course, it's not like I am hopeless.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("On a good night, I get underwear, bras, and hotel-room keys thrown onstage... You start to think that you're Tom Jones.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The simple act of paying attention can take you a long way.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Kissing someone is pretty intimate, actually very intimate, and your heart always kind of skips a beat before you do that.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's the journey of self, I guess. You start with this kind of loner, outside guy, which a lot of people can relate to, and he goes out into the world.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Because we're actors we can pretend and fake it, but I'd rather the intimate investment was authentic.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My name can't be that tough to pronounce!", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Energy can't be created or destroyed, and energy flows. It must be in a direction, with some kind of internal, emotive, spiritual direction. It must have some effect somewhere.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.KARL_PILKINGTON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm not that lazy, but I don't need that much money. I lead a fairly simple life.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'd rather live in a cave with a view of a palace than live in a palace with a view of a cave.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Being honest with you, it's not the 'great' wall of China. It's an all right wall. It's the 'All Right Wall of China.'", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I've never understood the 'things to do before you die' idea. If I was ill, I'd be in no mood to have a swim with a dolphin.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you sit in a bath of pineapple chunks, it can kill you. That's well documented.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("That's the problem with having a bald head. It exaggerates the shape.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People who live in a glass house have to answer the door.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People always tell me I'm going to regret not having kids. But what if I have one and then I regret having it? Has anyone thought of that option?", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A slug is always on its own. It's a lonely insect.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everyone is living for everyone else now. They're doing stuff so they can tell other people about it. I don't get all that social media stuff, I've always got other things I want to do - odd jobs around the house. No one wants to hear about that.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.LAO_TZU.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Being deeply loved by someone gives you strength, while loving someone deeply gives you courage.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Do the difficult things while they are easy and do the great things while they are small. A journey of a thousand miles must begin with a single step.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The journey of a thousand miles begins with one step.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Kindness in words creates confidence. Kindness in thinking creates profoundness. Kindness in giving creates love.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life is a series of natural and spontaneous changes. Don't resist them - that only creates sorrow. Let reality be reality. Let things flow naturally forward in whatever way they like.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A good traveler has no fixed plans, and is not intent on arriving.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Silence is a source of great strength.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When the best leader's work is done the people say, 'We did it ourselves.'", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nothing is softer or more flexible than water, yet nothing can resist it.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Music in the soul can be heard by the universe.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.LEBRON_JAMES.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You can't be afraid to fail. It's the only way you succeed - you're not gonna succeed all the time, and I know that.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My mom and I have always been there for each other. We had some tough times, but she was always there for me.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have short goals - to get better every day, to help my teammates every day - but my only ultimate goal is to win an NBA championship. It's all that matters. I dream about it. I dream about it all the time, how it would look, how it would feel. It would be so amazing.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("But sports carried me away from being in a gang, or being associated with drugs. Sports was my way out.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think, team first. It allows me to succeed, it allows my team to succeed.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every night on the court I give my all, and if I'm not giving 100 percent, I criticize myself.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Basketball is my passion, I love it. But my family and friends mean everything to me. That's what's important. I need my phone so I can keep in contact with them at all times.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You know, God gave me a gift to do other things besides play the game of basketball.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I've always been an unselfish guy, and that's the only way I know how to play on the court and I try to play to the maximum of my ability - not only for myself but for my teammates.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.LEO_TOLSTOY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All, everything that I understand, I understand only because I love.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Art is not a handicraft, it is the transmission of feeling the artist has experienced.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("One of the first conditions of happiness is that the link between Man and Nature shall not be broken.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Truth, like gold, is to be obtained not by its growth, but by washing away from it all that is not gold.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is no greatness where there is no simplicity, goodness and truth.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you want to be happy, be.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An arrogant person considers himself perfect. This is the chief harm of arrogance. It interferes with a person's main task in life - becoming a better person.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The sole meaning of life is to serve humanity.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everyone thinks of changing the world, but no one thinks of changing himself.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The two most powerful warriors are patience and time.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.LEONARDO_DA_VINCI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It had long since come to my attention that people of accomplishment rarely sat back and let things happen to them. They went out and happened to things.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nothing strengthens authority so much as silence.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("As a well-spent day brings happy sleep, so a life well spent brings happy death.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The noblest pleasure is the joy of understanding.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("While I thought that I was learning how to live, I have been learning how to die.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Learning never exhausts the mind.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Simplicity is the ultimate sophistication.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Water is the driving force of all nature.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love those who can smile in trouble, who can gather strength from distress, and grow brave by reflection. 'Tis the business of little minds to shrink, but they whose heart is firm, and whose conscience approves their conduct, will pursue their principles unto death.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Tears come from the heart and not from the brain.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.LIL_UZI_VERT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you're you, it doesn't matter if you're the most boring person in the world: someone will like you. You're not trying to be anyone else.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm just doing me, and to me, that's what got me this far.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There are always people who are into the old way of doing things. I don't think it's a bad thing necessarily, but things change - nothing stays the same. If you can stay true to yourself, you're always going to be legendary.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("'Vert' is, like, straight to the top, like a vertical leap.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I stopped thinking; I just go out, and everything is in the moment. I just stop thinking and start moving - you just gotta be you.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Some guy was just like, 'You rap fast, man. Like a little machine gun,' and from that moment, I was Lil Uzi.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I got different moods. Like, if I'm in a good mood, I listen to 'Up' by Thug. If I'm not in a good mood, I'll listen to 'King TROUP' - that's a real emotional one.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I like to look cool and dress nice. Lil Uzi is a rock star. Just know that.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't get me wrong: school is good and all, but school is way too slow for me. Like, super slow. So I didn't want to go. I wanted to learn on my own with real life experiences.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The type of music I make, it's not just straight-up rapping. There's emotion in it. That's why people feel each song differently. I get all my vibes from rock music, you know? All my melodies and all that.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.MALCOIM_X.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Education is the passport to the future, for tomorrow belongs to those who prepare for it today.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The media's the most powerful entity on earth. They have the power to make the innocent guilty and to make the guilty innocent, and that's power. Because they control the minds of the masses.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is no better than adversity. Every defeat, every heartbreak, every loss, contains its own seed, its own lesson on how to improve your performance the next time.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You're not supposed to be so blind with patriotism that you can't face reality. Wrong is wrong, no matter who says it.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be peaceful, be courteous, obey the law, respect everyone; but if someone puts his hand on you, send him to the cemetery.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm for truth, no matter who tells it. I'm for justice, no matter who it's for or against.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The future belongs to those who prepare for it today.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A man who stands for nothing will fall for anything.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't even call it violence when it's in self defense; I call it intelligence.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have more respect for a man who lets me know where he stands, even if he's wrong, than the one who comes up like an angel and is nothing but a devil.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.MOTHER_TERESA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Let us always meet each other with smile, for the smile is the beginning of love.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Peace begins with a smile.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We need to find God, and he cannot be found in noise and restlessness. God is the friend of silence. See how nature - trees, flowers, grass- grows in silence; see the stars, the moon and the sun, how they move in silence... We need silence to be able to touch souls.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We shall never know all the good that a simple smile can do.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be faithful in small things because it is in them that your strength lies.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Spread love everywhere you go. Let no one ever come to you without leaving happier.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Loneliness and the feeling of being unwanted is the most terrible poverty.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If we have no peace, it is because we have forgotten that we belong to each other.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We think sometimes that poverty is only being hungry, naked and homeless. The poverty of being unwanted, unloved and uncared for is the greatest poverty. We must start in our own homes to remedy this kind of poverty.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Joy is prayer; joy is strength: joy is love; joy is a net of love by which you can catch souls.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.MAHATMA_GANDHI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A nation's culture resides in the hearts and in the soul of its people.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("An eye for an eye only ends up making the whole world blind.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Happiness is when what you think, what you say, and what you do are in harmony.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Prayer is the key of the morning and the bolt of the evening.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The best way to find yourself is to lose yourself in the service of others.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("First they ignore you, then they laugh at you, then they fight you, then you win.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Live as if you were to die tomorrow. Learn as if you were to live forever.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You must be the change you wish to see in the world.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The weak can never forgive. Forgiveness is the attribute of the strong.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Where there is love there is life.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.MARCUS_TULLIUS_CICERO.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is not by muscle, speed, or physical dexterity that great things are achieved, but by reflection, force of character, and judgment.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What then is freedom? The power to live as one wishes.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The countenance is the portrait of the soul, and the eyes mark its intentions.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The higher we are placed, the more humbly we should walk.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Any man can make mistakes, but only an idiot persists in his error.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you have a garden and a library, you have everything you need.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Silence is one of the great arts of conversation.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The safety of the people shall be the highest law.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Gratitude is not only the greatest of virtues, but the parent of all the others.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The life of the dead is placed in the memory of the living.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.MARILYN_MONROE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's better to be unhappy alone than unhappy with someone - so far.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Success makes so many people hate you. I wish it wasn't that way. It would be wonderful to enjoy success without seeing envy in the eyes of those around you.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Experts on romance say for a happy marriage there has to be more than a passionate love. For a lasting union, they insist, there must be a genuine liking for each other. Which, in my book, is a good definition for friendship.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We are all of us stars, and we deserve to twinkle.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I restore myself when I'm alone.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Give a girl the right shoes, and she can conquer the world.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Imperfection is beauty, madness is genius and it's better to be absolutely ridiculous than absolutely boring.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am good, but not an angel. I do sin, but I am not the devil. I am just a small girl in a big world trying to find someone to love.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I've never dropped anyone I believed in.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm selfish, impatient, and a little insecure. I make mistakes, I'm out of control, and at times hard to handle. But if you can't handle me at my worst, then you sure as hell don't deserve me at my best.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.NAPOLEON_BONAPARTE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You must not fight too often with one enemy, or you will teach him all your art of war.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A leader is a dealer in hope.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Death is nothing, but to live defeated and inglorious is to die daily.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never interrupt your enemy when he is making a mistake.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Women are nothing but machines for producing children.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Impossible is a word to be found only in the dictionary of fools.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Great ambition is the passion of a great character. Those endowed with it may perform very good or very bad acts. All depends on the principles which direct them.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A soldier will fight long and hard for a bit of colored ribbon.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you want a thing done well, do it yourself.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In politics stupidity is not a handicap.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.NAPOLEON_HILL.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("First comes thought; then organization of that thought, into ideas and plans; then transformation of those plans into reality. The beginning, as you will observe, is in your imagination.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you cannot do great things, do small things in a great way.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Effort only fully releases its reward after a person refuses to quit.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Victory is always possible for the person who refuses to stop fighting.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The starting point of all achievement is desire.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Your big opportunity may be right where you are now.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Education comes from within; you get it by struggle and effort and thought.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Great achievement is usually born of great sacrifice, and is never the result of selfishness.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Patience, persistence and perspiration make an unbeatable combination for success.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Strength and growth come only through continuous effort and struggle.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.NAS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I want to have fun. It's a beautiful life. You learn, you win, you lose, but you get up.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Once you make it to your point of making it, you'll appreciate the struggle.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I just enjoy life now. I just enjoy every morning I get to wake up.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The flaws, the mistakes I make - that's the real me.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Your look reflects what's happening in your mind. You gotta have some swag to you.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You can't please everybody. You'd be crazy if you're trying to. So take some time out to do some things for yourself.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("With age comes common sense and wisdom.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Working with great people makes you great; you learn a lot and it also gives you the experience and confidence to move on with your own career.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't want any title. I just say what I say, and hopefully somebody gets it, man. I'm not perfect, and I'm just here and trying to make a dollar, and being real at the same time, you know?", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you're a teenager, you want to meet a lot of girls - you want to get the most girls. You don't know anything about respect; you don't know anything about being faithful and loyal to your girlfriend.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.NEIL_ARMSTRONG.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Well, I think we tried very hard not to be overconfident, because when you get overconfident, that's when something snaps up and bites you.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Houston, Tranquillity Base here. The Eagle has landed.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It suddenly struck me that that tiny pea, pretty and blue, was the Earth. I put up my thumb and shut one eye, and my thumb blotted out the planet Earth. I didn't feel like a giant. I felt very, very small.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The Eagle has landed.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The important achievement of Apollo was demonstrating that humanity is not forever chained to this planet and our visions go rather further than that and our opportunities are unlimited.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think we're going to the moon because it's in the nature of the human being to face challenges. It's by the nature of his deep inner soul... we're required to do these things just as salmon swim upstream.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I believe every human has a finite number of heartbeats. I don't intend to waste any of mine.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Research is creating new knowledge.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("That's one small step for a man, one giant leap for mankind.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Mystery creates wonder and wonder is the basis of man's desire to understand.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.NEIL_DEGRASSE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We are part of this universe; we are in this universe, but perhaps more important than both of those facts, is that the universe is in us.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Ever since the Industrial Revolution, investments in science and technology have proved to be reliable engines of economic growth. If homegrown interest in those fields is not regenerated soon, the comfortable lifestyle to which Americans have become accustomed will draw to a rapid close.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Perhaps we've never been visited by aliens because they have looked upon Earth and decided there's no sign of intelligent life.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Rational thoughts never drive people's creativity the way emotions do.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Once you have an innovation culture, even those who are not scientists or engineers - poets, actors, journalists - they, as communities, embrace the meaning of what it is to be scientifically literate. They embrace the concept of an innovation culture. They vote in ways that promote it. They don't fight science and they don't fight technology.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is no greater education than one that is self-driven.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If your ego starts out, 'I am important, I am big, I am special,' you're in for some disappointments when you look around at what we've discovered about the universe. No, you're not big. No, you're not. You're small in time and in space. And you have this frail vessel called the human body that's limited on Earth.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Even with all our technology and the inventions that make modern life so much easier than it once was, it takes just one big natural disaster to wipe all that away and remind us that, here on Earth, we're still at the mercy of nature.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The Universe is under no obligation to make sense to you.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Humans aren't as good as we should be in our capacity to empathize with feelings and thoughts of others, be they humans or other animals on Earth. So maybe part of our formal education should be training in empathy. Imagine how different the world would be if, in fact, that were 'reading, writing, arithmetic, empathy.'", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.OSCAR_WILDE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Keep love in your heart. A life without it is like a sunless garden when the flowers are dead.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you are not too long, I will wait here for you all my life.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Men always want to be a woman's first love - women like to be a man's last romance.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Women are made to be loved, not understood.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("True friends stab you in the front.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Experience is simply the name we give our mistakes.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Success is a science; if you have the conditions, you get the result.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I can resist everything except temptation.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Memory... is the diary that we all carry about with us.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A dreamer is one who can only find his way by moonlight, and his punishment is that he sees the dawn before the rest of the world.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.OJ_SIMPSON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The day you take complete responsibility for yourself, the day you stop making any excuses, that's the day you start to the top.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I didn't beat her. I just pushed her out of bed.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My NFL pension can barely pay my son's tuition. You know, it's very little money.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I really have reached a point where I can write a book about all of this.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I believe in the jury system.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think I've been a great citizen.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I've done my time. I've done it as well and as respectfully as I think anyone can.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nicole will come up in conversations where it's in a part of the conversation. Or we may be somewhere and I would tell some story about their mother and I. You know, we always honor her birthday.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I could not tell you the date of my mother's death. I could not tell you the date of my dad's death. These are not dates that I find significant.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I had some problems with fidelity in my life but pretty much got along with everybody.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.O_SHEA_JACKSON_JR.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Have confidence in everything. No matter what it is that you're doing, know that you can do it better than anyone.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The stress and turmoil that my father had to go through at a young age to make sure that I didn't have the same trials and tribulations, I couldn't be more grateful.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My parents wouldn't have sent me out into the world with wool over my eyes. You have to be aware, or you'll be swallowed.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's always extremities when you are a young black male dealing with law enforcement.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Being on set with my dad - that's so cool. People always ask me if that made me nervous, but it's the same element when you're a kid - when your parents come in the auditorium for those school performances. It calms you.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("This entire cast, N.W.A, was an all-star group, and I really feel like people are going to look at 'Straight Outta Compton' years from now like this was an all-star cast.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("This entire cast, N.W.A, was an all-star group, and I really feel like people are going to look at 'Straight Outta Compton' years from now like this was an all-star cast.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When, you know, when you're playing basketball, you have to have confidence in your moves if they're gonna work.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Music is always there, but if you're asking me my first love, it's film.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.O_WINSTON_LINK.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I never expected that. I didn't aim for that. All I wanted was to get some nice pictures of trains at night.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You can show me some stick ice cream and I can tell you if it's good or not just looking at it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I was strong and healthy and I was enjoying what I was doing.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I was one man and I tackled a big railroad. I did the best I could.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.OBIAGELI_EZEKWESILI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Social media is simply a tool that facilitates actions.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My mum was a quintessential businesswoman. She taught me problem-solving. She can solve any problem.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I would like to see a lot of people more involved in practical solutions to practical problems. Women have got to the point where we can turn the world upside down.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In terms of competitiveness of new global environment, Kenya will have absolutely no choice but to tackle the most important constraint to its development: it has been corruption.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There's absolutely nothing that the God I believe in cannot do.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have always battled injustice. As a child, I used to fight on the side of my friends when boys terrorized them.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("How can the cost of education be the cost of life? It is unacceptable; it is reprehensible that we have allowed it to fester.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("How can the cost of education be the cost of life? It is unacceptable; it is reprehensible that we have allowed it to fester.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Do our children now have to choose between getting an education and dying? Some of us cannot move on and accept that kind of society.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There's absolutely nothing that the God I believe in cannot do.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.PLATO.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Wise men speak because they have something to say; Fools because they have to say something.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Music is a moral law. It gives soul to the universe, wings to the mind, flight to the imagination, and charm and gaiety to life and to everything.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Human behavior flows from three main sources: desire, emotion, and knowledge.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We can easily forgive a child who is afraid of the dark; the real tragedy of life is when men are afraid of the light.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You can discover more about a person in an hour of play than in a year of conversation.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Thinking: the talking of the soul with itself.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("One of the penalties for refusing to participate in politics is that you end up being governed by your inferiors.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Courage is knowing what not to fear.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dictatorship naturally arises out of democracy, and the most aggravated form of tyranny and slavery out of the most extreme liberty.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Ignorance, the root and stem of all evil.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.PABLO_PICASSO.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Our goals can only be reached through a vehicle of a plan, in which we must fervently believe, and upon which we must vigorously act. There is no other route to success.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Action is the foundational key to all success.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Youth has no age.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everything you can imagine is real.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Who sees the human face correctly: the photographer, the mirror, or the painter?", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Colors, like features, follow the changes of the emotions.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It takes a long time to become young.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Some painters transform the sun into a yellow spot, others transform a yellow spot into the sun.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("All children are artists. The problem is how to remain an artist once he grows up.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The purpose of art is washing the dust of daily life off our souls.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.PATRICK_HENRY.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Is life so dear or peace so sweet as to be purchased at the price of chains and slavery? Forbid it, Almighty God! I know not what course others may take, but as for me, give me liberty, or give me death!", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have but one lamp by which my feet are guided, and that is the lamp of experience.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The liberties of a people never were, nor ever will be, secure, when the transactions of their rulers may be concealed from them.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The distinctions between Virginians, Pennsylvanians, New Yorkers, and New Englanders are no more. I am not a Virginian but an American.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When the American spirit was in its youth, the language of America was different: Liberty, sir, was the primary object.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I know of no way of judging the future but by the past.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Perfect freedom is as necessary to the health and vigor of commerce as it is to the health and vigor of citizenship.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For my part, whatever anguish of spirit it may cost, I am willing to know the whole truth; to know the worst and provide for it.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is natural to indulge in the illusions of hope. We are apt to shut our eyes to that siren until she allures us to our death.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Shall we, who have laid the proud British lion at our feet, now be afraid of his whelps?", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.PAULO_COELHO.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Waiting is painful. Forgetting is painful. But not knowing which to do is the worse kind of suffering.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No one can lie, no one can hide anything, when he looks directly into someone's eyes.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you want something, all the universe conspires in helping you to achieve it.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you are enthusiastic about what you do, you feel this positive energy. It's very simple.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I can control my destiny, but not my fate. Destiny means there are opportunities to turn right or left, but fate is a one-way street. I believe we all have the choice as to whether we fulfil our destiny, but our fate is sealed.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Remember your dreams and fight for them. You must know what you want from life. There is just one thing that makes your dream become impossible: the fear of failure.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life was always a matter of waiting for the right moment to act.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Culture makes people understand each other better. And if they understand each other better in their soul, it is easier to overcome the economic and political barriers. But first they have to understand that their neighbour is, in the end, just like them, with the same problems, the same questions.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be brave. Take risks. Nothing can substitute experience.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have seen many storms in my life. Most storms have caught me by surprise, so I had to learn very quickly to look further and understand that I am not capable of controlling the weather, to exercise the art of patience and to respect the fury of nature.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.PELE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Success is no accident. It is hard work, perseverance, learning, studying, sacrifice and most of all, love of what you are doing or learning to do.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Enthusiasm is everything. It must be taut and vibrating like a guitar string.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am constantly being asked about individuals. The only way to win is as a team. Football is not about one or two or three star players.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you are young, you do a lot of stupid things.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Wherever you go, there are three icons that everyone knows: Jesus Christ, Pele and Coca-Cola.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If I pass away one day, I am happy because I tried to do my best. My sport allowed me to do so much because it's the biggest sport in the world.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When I was a footballer, I surrounded myself with footballers. We were all friends. But in Brasilia you don't know who your friends are. It can be a dangerous place.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have to trust something that gives me power; I have to believe in something, but in my career I have a lot of moments I cannot explain with God.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everything on earth is a game. A passing thing. We all end up dead. We all end up the same, don't we?", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The World Cup is a very complicated tournament - six games, seven if you make it to the final - and maybe if you lose one game you're out, even if you're the best.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.Q_ORIANKA_KILCHER.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love the power of celebrity because you can give voice to the voiceless.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You need people around you that care about you and are thinking about you in your best interest. And keep your mind straight.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I really identified with Pocahontas' struggles as a young woman trying to identify herself in a modern, changing world and trying to stay true to her culture and heritage.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I honestly think I was an Indian living in the time of the Trail of Tears. Something like that. Every time I read books about back then, I get so devastatingly sad, so, so... I feel such a deep connection to it.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My birthday is Feb. 11, and I'm both excited and not excited by it. You'll never be 15 again, and you really, really need to savor every day like it's your last.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Portraying Pocahontas' story well was important to me because she was a real person and these were real events in her life.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I just want to learn even more about my culture and about the Algonquin culture because I fell in love with Pocahontas and the Algonquin tribe.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Yes, I'm proud to be indigenous. I'm half-Quechua-Huachipaeri from Peru.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My father's Peruvian! I actually have a lot of family in Cuzco. I'm also Swiss, Alaskan, French, Spanish and Italian.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I feel like, as a celebrity, I have a responsibility to tell important stories.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.Q_TIP.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If there's a 'Cruel Summer' then there's got to be a 'Cruel Winter,' right? That's all I'm saying.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I definitely move to the beat of my own drummer and man, he's not playing something anyone has heard before. It's pretty cool, though. Pretty cool.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("One thing the music industry has taught me is to manage my expectations.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I do try to speak of positive things. I still try to, like, present two sides of the story, and I do try to relate to life in a 360 degree and not be one-dimensional. But by all means, manage expectations.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't really listen to my work. If I have to DJ and I play something, I hear it. But I don't sit quietly and listen to my work; I'm always off to do the next thing.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I read the Koran and it appealed to me. At the time I was agnostic and it really breathed spiritually back into me. For me it's really a cushion; it's cool, I'm cool with it.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I sang in church, but growing up in the neighborhood, music was more of an expression of relief or entertainment.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You know, I hate to sound self-involved, but I feel like I haven't peaked yet.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I feel like Obama in a way. His idea that hope means not shrinking from a fight; it's the courage to reach for something. My music is that. Those are principles I try to embody.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In 1999, I just came out of putting out the song 'Vivrant Thing' and 'Breathe and Stop' off the 'Amplified' album. Clive Davis signed me to Arista.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.QANDEEL_BALOCH.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Love me or hate me, both are in my favour. If you love me, I will always be in your heart, and if you hate me, I will be in your mind.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I did a job. I completed my Matric and my Bachelors. I did a marketing job. I worked as a bus hostess. I did a lot of jobs; I struggled a lot. I got out from there. The first thing I did when I got out of Darul Aman was my Matric. Then I did my Bachelors privately; I kept doing it.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("At least international media can see how I am trying to change the typical orthodox mindset of people who don't want to come out of their shells of false beliefs and old practices.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I don't know how many girls have felt support through my persona. I'm a girl power. So many girls tell me I'm a girl power, and yes, I am.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am not hungry for roles on TV or in films. I am happy being a social media sensation.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I've fought with everyone . And now I have become so headstrong that I only do what I want.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nothing is good in this society. This patriarchal society is bad.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It's time to bring a change because the world is changing. Let's open our minds and live in present.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It was my wish since I was a child to become something, to be able to stand on my own two feet, to do something for myself.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Pakistan is a free country, so according to me, in a free country, it's every right of the citizen to live the way they wish.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.QUAVO.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("History repeats itself. So you might wanna pay attention.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'd open doors for anyone who opens doors for me.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Wealth is just consistency... I don't want to be rich. I want to be wealthy.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Being spontaneous is a blessing.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you do it yourself, you feel better.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The people we grew up watching and listening to - Outkast, Gucci Mane, Hot Boys, Lil Wayne, Master P - all that type of stuff, we took those styles and made it our own.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You gotta give everybody a new trend a new wave, something new to do.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm just willing to try different things. But you gotta keep it all making sense.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We just feel like history repeats itself. You ain't never going to see nothing brand new; you're only going to see when records are broken. And we're here to just set records and set trends and follow the footsteps that have been shown to us.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'll tell ya, when you open up that can of dab, it's always fresh.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.QUEEN_CHRISTINA.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is necessary to try to pass one's self always; this occupation ought to last as long as life.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fools are more to be feared than the wicked.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.ROBIN_WILLIAMS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No matter what people tell you, words and ideas can change the world.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I'm sorry, if you were right, I'd agree with you.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If women ran the world we wouldn't have wars, just intense negotiations every 28 days.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I used to think that the worst thing in life was to end up alone. It's not. The worst thing in life is to end up with people who make you feel alone.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Why do they call it rush hour when nothing moves?", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You're only given a little spark of madness. You mustn't lose it.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never pick a fight with an ugly person, they've got nothing to lose.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Spring is nature's way of saying, 'Let's party!'", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People say satire is dead. It's not dead; it's alive and living in the White House.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For me, comedy starts as a spew, a kind of explosion, and then you sculpt it from there, if at all. It comes out of a deeper, darker side. Maybe it comes from anger, because I'm outraged by cruel absurdities, the hypocrisy that exists everywhere, even within yourself, where it's hardest to see.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.RUMI.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Let the beauty of what you love be what you do.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everything that is made beautiful and fair and lovely is made for the eye of one who sees.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We are born of love; Love is our mother.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Beauty surrounds us, but usually we need to be walking in a garden to know it.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Grief can be the garden of compassion. If you keep your heart open through everything, your pain can become your greatest ally in your life's search for love and wisdom.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't grieve. Anything you lose comes round in another form.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The garden of love is green without limit and yields many fruits other than sorrow or joy. Love is beyond either condition: without spring, without autumn, it is always fresh.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Everyone has been made for some particular work, and the desire for that work has been put in every heart.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("May this marriage be full of laughter, our every day in paradise.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Listen! Clam up your mouth and be silent like an oyster shell, for that tongue of yours is the enemy of the soul, my friend. When the lips are silent, the heart has a hundred tongues.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.RALPH_WALDO_EMERSON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Adopt the pace of nature: her secret is patience.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Never lose an opportunity of seeing anything beautiful, for beauty is God's handwriting.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Love of beauty is taste. The creation of beauty is art.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("For every minute you remain angry, you give up sixty seconds of peace of mind.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Write it on your heart that every day is the best day in the year.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Do not go where the path may lead, go instead where there is no path and leave a trail.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nature always wears the colors of the spirit.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What lies behind you and what lies in front of you, pales in comparison to what lies inside of you.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The first wealth is health.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It is one of the blessings of old friends that you can afford to be stupid with them.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.RICHARD_BRANSON.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Business opportunities are like buses, there's always another one coming.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("By putting the employee first, the customer effectively comes first by default, and in the end, the shareholder comes first by default as well.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Starting your own business isn't just a job - it's a way of life.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("From my very first day as an entrepreneur, I've felt the only mission worth pursuing in business is to make people's lives better.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Treat failure as a lesson on how not to approach achieving a goal, and then use that learning to improve your chances of success when you try again. Failure is only the end if you decide to stop.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Fun is one of the most important - and underrated - ingredients in any successful venture. If you're not having fun, then it's probably time to call it quits and try something else.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A passionate belief in your business and personal objectives can make all the difference between success and failure. If you aren't proud of what you're doing, why should anybody else be?", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Do not be embarrassed by your failures, learn from them and start again.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My attitude has always been, if you fall flat on your face, at least you're moving forward. All you have to do is get back up and try again.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("You don't learn to walk by following rules. You learn by doing, and by falling over.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.SOCRATES.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The only true wisdom is in knowing you know nothing.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To know, is to know that you know nothing. That is the meaning of true knowledge.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Our prayers should be for blessings in general, for God knows best what is good for us.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I know that I am intelligent, because I know that I know nothing.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("He is richest who is content with the least, for content is the wealth of nature.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("True wisdom comes to each of us when we realize how little we understand about life, ourselves, and the world around us.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("By all means, marry. If you get a good wife, you'll become happy; if you get a bad one, you'll become a philosopher.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be as you wish to seem.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Death may be the greatest of all human blessings.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Worthless people live only to eat and drink; people of worth eat and drink only to live.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.SAINT_AUGUSTINE.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Do you wish to rise? Begin by descending. You plan a tower that will pierce the clouds? Lay first the foundation of humility.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In the absence of justice, what is sovereignty but organized robbery?", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Men go abroad to wonder at the heights of mountains, at the huge waves of the sea, at the long courses of the rivers, at the vast compass of the ocean, at the circular motions of the stars, and they pass by themselves without wondering.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What does love look like? It has the hands to help others. It has the feet to hasten to the poor and needy. It has eyes to see misery and want. It has the ears to hear the sighs and sorrows of men. That is what love looks like.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Patience is the companion of wisdom.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Punishment is justice for the unjust.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Pray as though everything depended on God. Work as though everything depended on you.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Faith is to believe what you do not see; the reward of this faith is to see what you believe.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("It was pride that changed angels into devils; it is humility that makes men as angels.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The world is a book, and those who do not travel read only a page.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.SIGMUND_FREUD.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Dreams are often most profound when they seem the most crazy.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We are never so defensless against suffering as when we love.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Most people do not really want freedom, because freedom involves responsibility, and most people are frightened of responsibility.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Being entirely honest with oneself is a good exercise.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The interpretation of dreams is the royal road to a knowledge of the unconscious activities of the mind.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The mind is like an iceberg, it floats with one-seventh of its bulk above water.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Flowers are restful to look at. They have neither emotions nor conflicts.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I cannot think of any need in childhood as strong as the need for a father's protection.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Time spent with cats is never wasted.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Civilization began the first time an angry person cast a word instead of a rock.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.SIMON_SINEK.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is a difference between listening and waiting for your turn to speak.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leadership is a way of thinking, a way of acting and, most importantly, a way of communicating.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We can't all be good at everything. This is partly the logic behind having a team in the first place, so each role can be filled with the person best suited for that role and together, every job and every strength is covered.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't quit. Never give up trying to buildQuotes the world you can see, even if others can't see it. Listen to your drum and your drum only. It's the one that makes the sweetest sound.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The challenge of the unknown future is so much more exciting than the stories of the accomplished past.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Champions are not the ones who always win races - champions are the ones who get out there and try. And try harder the next time. And even harder the next time. 'Champion' is a state of mind. They are devoted. They compete to best themselves as much if not more than they compete to best others. Champions are not just athletes.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is no decision that we can make that doesn't come with some sort of balance or sacrifice.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("A leader's job is not to do the work for others, it's to help others figure out how to do it themselves, to get things done, and to succeed beyond what they thought possible.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Leadership is not about the next election, it's about the next generation.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The strong bond of friendship is not always a balanced equation; friendship is not always about giving and taking in equal shares. Instead, friendship is grounded in a feeling that you know exactly who will be there for you when you need something, no matter what or when.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.SOREN_KIERKEGAARD.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The highest and most beautiful things in life are not to be heard about, nor read about, nor seen but, if one will, are to be lived.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Our life always expresses the result of our dominant thoughts.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("What is a poet? An unhappy person who conceals profound anguish in his heart but whose lips are so formed that as sighs and cries pass over them they sound like beautiful music.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Face the facts of being what you are, for that is what changes what you are.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Be that self which one truly is.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Don't forget to love yourself.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People demand freedom of speech as a compensation for the freedom of thought which they seldom use.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Prayer does not change God, but it changes him who prays.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life can only be understood backwards; but it must be lived forwards.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Life is not a problem to be solved, but a reality to be experienced.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.THEODORE_ROOSEVELT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Believe you can and you're halfway there.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Keep your eyes on the stars, and your feet on the ground.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("People ask the difference between a leader and a boss. The leader leads, and the boss drives.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you could kick the person in the pants responsible for most of your trouble, you wouldn't sit for a month.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Far better is it to dare mighty things, to win glorious triumphs, even though checkered by failure... than to rank with those poor spirits who neither enjoy nor suffer much, because they live in a gray twilight that knows not victory nor defeat.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Nobody cares how much you know, until they know how much you care.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("In any moment of decision, the best thing you can do is the right thing, the next best thing is the wrong thing, and the worst thing you can do is nothing.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To educate a man in mind and not in morals is to educate a menace to society.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Great thoughts speak only to the thoughtful mind, but great actions speak to all mankind.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("With self-discipline most anything is possible.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.TS_ELIOT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If you aren't in over your head, how do you know how tall you are?", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Poetry is not a turning loose of emotion, but an escape from emotion; it is not the expression of personality, but an escape from personality. But, of course, only those who have personality and emotions know what it means to want to escape from these things.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I said to my soul, be still, and wait without hope, For hope would be hope for the wrong thing.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Immature poets imitate; mature poets steal.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Home is where one starts from.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("So the darkness shall be the light, and the stillness the dancing.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I have measured out my life with coffee spoons.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Moving between the legs of tables and of chairs, rising or falling, grasping at kisses and toys, advancing boldly, sudden to take alarm, retreating to the corner of arm and knee, eager to be reassured, taking pleasure in the fragrant brilliance of the Christmas tree.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We shall not cease from exploration, and the end of all our exploring will be to arrive where we started and know the place for the first time.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Only those who will risk going too far can possibly find out how far one can go.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.TAYLOR_SWIFT.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I am alone a lot, which is good. I need that time to just be alone after a long day, just decompress. So, I go to either my house or the hotel, or my apartment, or whatever - wherever I am, I go home and I watch TV and I sit there, with my cat, and I just watch TV or go online, check my emails.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think fearless is having fears but jumping anyway.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love the scents of winter! For me, it's all about the feeling you get when you smell pumpkin spice, cinnamon, nutmeg, gingerbread and spruce.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("My ultimate goal is to end up being happy. Most of the time.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("When you are missing someone, time seems to move slower, and when I'm falling in love with someone, time seems to be moving faster.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("No matter what happens in life, be good to people. Being good to people is a wonderful legacy to leave behind.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I love making new friends and I respect people for a lot of different reasons.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("I think every girl's dream is to find a bad boy at the right time, when he wants to not be bad anymore.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("We don't need to share the same opinions as others, but we need to be respectful.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Red is such an interesting color to correlate with emotion, because it's on both ends of the spectrum. On one end you have happiness, falling in love, infatuation with someone, passion, all that. On the other end, you've got obsession, jealousy, danger, fear, anger and frustration.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
//        litePalDataBuilders.add(
//                new LitePalDataBuilder()
//                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
//                        .setLitePalAuthor(EnumAuthor.THOMAS_AQUINAS.getLitePalAuthor())
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To bear with patience wrongs done to oneself is a mark of perfection, but to bear with patience wrongs done to someone else is a mark of imperfection and even of actual sin.", false, true))
//                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
//                                .addLitePalTags(EnumTag.SELF.getLitePalTag())
//                                .addLitePalTags(EnumTag.UNIVERSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Law is nothing other than a certain ordinance of reason for the common good, promulgated by the person who has the care of the community.", false, true))
//                                .addLitePalTags(EnumTag.PERCEPTION.getLitePalTag())
//                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
//                                .addLitePalTags(EnumTag.DOORS.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Good can exist without evil, whereas evil cannot exist without good.", false, true))
//                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
//                                .addLitePalTags(EnumTag.AGE.getLitePalTag())
//                                .addLitePalTags(EnumTag.CHILD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Better to illuminate than merely to shine, to deliver to others contemplated truths than merely to contemplate.", false, true))
//                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
//                                .addLitePalTags(EnumTag.SILENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPRESSING.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Every judgement of conscience, be it right or wrong, be it about things evil in themselves or morally indifferent, is obligatory, in such wise that he who acts against his conscience always sins.", false, true))
//                                .addLitePalTags(EnumTag.TRAVEL.getLitePalTag())
//                                .addLitePalTags(EnumTag.WRONG.getLitePalTag())
//                                .addLitePalTags(EnumTag.DISCOVER.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("Sorrow can be alleviated by good sleep, a bath and a glass of wine.", false, true))
//                                .addLitePalTags(EnumTag.WISDOM.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
//                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("To one who has faith, no explanation is necessary. To one without faith, no explanation is possible.", false, true))
//                                .addLitePalTags(EnumTag.FACTS.getLitePalTag())
//                                .addLitePalTags(EnumTag.EXIST.getLitePalTag())
//                                .addLitePalTags(EnumTag.BECAUSE.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("If the highest aim of a captain were to preserve his ship, he would keep it in port forever.", false, true))
//                                .addLitePalTags(EnumTag.RELIGION.getLitePalTag())
//                                .addLitePalTags(EnumTag.POWERFUL.getLitePalTag())
//                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("The things that we love tell us what we are.", false, true))
//                                .addLitePalTags(EnumTag.POWER.getLitePalTag())
//                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
//                                .addLitePalTags(EnumTag.GOD.getLitePalTag())
//                                .buildQuotes()
//                        )
//                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
//                                .setLitePalQuote(new LitePalQuote("There is nothing on this earth more to be prized than true friendship.", false, true))
//                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
//                                .addLitePalTags(EnumTag.DEMOCRACY.getLitePalTag())
//                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
//                                .buildQuotes()
//                        )
//        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.THOMAS_HOBBES.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A man's conscience and his judgment is the same thing; and as the judgment, so also the conscience, may be erroneous.", false, true))
                                .addLitePalTags(EnumTag.JUDGMENT.getLitePalTag())
                                .addLitePalTags(EnumTag.SAME.getLitePalTag())
                                .addLitePalTags(EnumTag.HIS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is no such thing as perpetual tranquillity of mind while we live here; because life itself is but motion, and can never be without desire, nor without fear, no more than without sense.", false, true))
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .addLitePalTags(EnumTag.DESIRE.getLitePalTag())
                                .addLitePalTags(EnumTag.HERE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Leisure is the Mother of Philosophy.", false, true))
                                .addLitePalTags(EnumTag.MOTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.PHILOSOPHY.getLitePalTag())
                                .addLitePalTags(EnumTag.LEISURE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Words are the money of fools.", false, true))
                                .addLitePalTags(EnumTag.MONEY.getLitePalTag())
                                .addLitePalTags(EnumTag.WORDS.getLitePalTag())
                                .addLitePalTags(EnumTag.FOOLS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Curiosity is the lust of the mind.", false, true))
                                .addLitePalTags(EnumTag.CURIOSITY.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .addLitePalTags(EnumTag.LUST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("During the time men live without a common power to keep them all in awe, they are in that conditions called war; and such a war, as if of every man, against every man.", false, true))
                                .addLitePalTags(EnumTag.WAR.getLitePalTag())
                                .addLitePalTags(EnumTag.AGAINST.getLitePalTag())
                                .addLitePalTags(EnumTag.EVERY_MAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The obligation of subjects to the sovereign is understood to last as long, and no longer, than the power lasteth by which he is able to protect them.", false, true))
                                .addLitePalTags(EnumTag.LAST.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .addLitePalTags(EnumTag.SUBJECTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The right of nature... is the liberty each man hath to use his own power, as he will himself, for the preservation of his own nature; that is to say, of his own life.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.USE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is not wisdom but Authority that makes a law.", false, true))
                                .addLitePalTags(EnumTag.LAW.getLitePalTag())
                                .addLitePalTags(EnumTag.LEGAL.getLitePalTag())
                                .addLitePalTags(EnumTag.AUTHORITY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The condition of man... is a condition of war of everyone against everyone.", false, true))
                                .addLitePalTags(EnumTag.EVERYONE.getLitePalTag())
                                .addLitePalTags(EnumTag.AGAINST.getLitePalTag())
                                .addLitePalTags(EnumTag.CONDITION.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.VOLTAIRE.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("God gave us the gift of life; it is up to us to give ourselves the gift of living well.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getLitePalTag())
                                .addLitePalTags(EnumTag.GIFT.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Judge a man by his questions rather than his answers.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
                                .addLitePalTags(EnumTag.RATHER.getLitePalTag())
                                .addLitePalTags(EnumTag.HIS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Appreciation is a wonderful thing: It makes what is excellent in others belong to us as well.", false, true))
                                .addLitePalTags(EnumTag.BELONG.getLitePalTag())
                                .addLitePalTags(EnumTag.EXCELLENT.getLitePalTag())
                                .addLitePalTags(EnumTag.MAKES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The art of medicine consists in amusing the patient while nature cures the disease.", false, true))
                                .addLitePalTags(EnumTag.ART.getLitePalTag())
                                .addLitePalTags(EnumTag.MEDICAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DISEASE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Tears are the silent language of grief.", false, true))
                                .addLitePalTags(EnumTag.SYMPATHY.getLitePalTag())
                                .addLitePalTags(EnumTag.SILENT.getLitePalTag())
                                .addLitePalTags(EnumTag.TEARS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is difficult to free fools from the chains they revere.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.DIFFICULT.getLitePalTag())
                                .addLitePalTags(EnumTag.CHAINS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Those who can make you believe absurdities can make you commit atrocities.", false, true))
                                .addLitePalTags(EnumTag.BELIEVE.getLitePalTag())
                                .addLitePalTags(EnumTag.ATROCITIES.getLitePalTag())
                                .addLitePalTags(EnumTag.COMMIT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Each player must accept the cards life deals him or her: but once they are in hand, he or she alone must decide how to play the cards in order to win the game.", false, true))
                                .addLitePalTags(EnumTag.GAME.getLitePalTag())
                                .addLitePalTags(EnumTag.PLAY.getLitePalTag())
                                .addLitePalTags(EnumTag.CARDS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Optimism is the madness of insisting that all is well when we are miserable.", false, true))
                                .addLitePalTags(EnumTag.OPTIMISM.getLitePalTag())
                                .addLitePalTags(EnumTag.MADNESS.getLitePalTag())
                                .addLitePalTags(EnumTag.INSISTING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It is better to risk saving a guilty man than to condemn an innocent one.", false, true))
                                .addLitePalTags(EnumTag.LEGAL.getLitePalTag())
                                .addLitePalTags(EnumTag.BETTER.getLitePalTag())
                                .addLitePalTags(EnumTag.SAVING.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.VALENTINO_ROSSI.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Riding a race bike is an art - a thing that you do because you feel something inside.", false, true))
                                .addLitePalTags(EnumTag.ART.getLitePalTag())
                                .addLitePalTags(EnumTag.FEEL.getLitePalTag())
                                .addLitePalTags(EnumTag.RACE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The great fights with your strongest rivals are always the biggest motivation. When you win easily it's not the same taste.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATION.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.FIGHTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The work that we do during the winter is very important; we have a new bike and it's important to develop it during this time, and we start with this test.", false, true))
                                .addLitePalTags(EnumTag.NEW.getLitePalTag())
                                .addLitePalTags(EnumTag.TEST.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The most important thing is to have a good relationship with the bike... you have to understand what she wants. I think of a motorcycle as a woman, and I know that sounds silly, but it's true.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.THE_MOST_IMPORTANT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My normal life is like being on holiday.", false, true))
                                .addLitePalTags(EnumTag.NORMAL.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.BEING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I am able to ride the bike and think clearly about strategy and tyres. I also have positive thinking. I am very constructively critical.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .addLitePalTags(EnumTag.CRITICAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I race to win. If I am on the bike or in a car it will always be the same.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.SAME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I never race for records. The motivation to try to beat the record is not enough to continue. You have to enjoy it.", false, true))
                                .addLitePalTags(EnumTag.RACE.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .addLitePalTags(EnumTag.RECORDS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Maybe the bike is more dangerous, but the passion for the car for me is second to the bike.", false, true))
                                .addLitePalTags(EnumTag.CAR.getLitePalTag())
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .addLitePalTags(EnumTag.MAYBE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("To be a great motorbike racer, the most important thing is passion for the bike.", false, true))
                                .addLitePalTags(EnumTag.IMPORTANT.getLitePalTag())
                                .addLitePalTags(EnumTag.MOST.getLitePalTag())
                                .addLitePalTags(EnumTag.MOTORBIKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.VICTOR_HUGO.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("How did it happen that their lips came together? How does it happen that birds sing, that snow melts, that the rose unfolds, that the dawn whitens behind the stark shapes of trees on the quivering summit of the hill? A kiss, and all was said.", false, true))
                                .addLitePalTags(EnumTag.VALENTINES_DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.BEHIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is one spectacle grander than the sea, that is the sky; there is one spectacle grander than the sky, that is the interior of the soul.", false, true))
                                .addLitePalTags(EnumTag.SKY.getLitePalTag())
                                .addLitePalTags(EnumTag.SOUL.getLitePalTag())
                                .addLitePalTags(EnumTag.SPECTACLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When dictatorship is a fact, revolution becomes a right.", false, true))
                                .addLitePalTags(EnumTag.REVOLUTION.getLitePalTag())
                                .addLitePalTags(EnumTag.RIGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.FACT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Life is the flower for which love is the honey.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.HONEY.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A mother's arms are made of tenderness and children sleep soundly in them.", false, true))
                                .addLitePalTags(EnumTag.MOTHERS_DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.MOTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.SLEEP.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Concision in style, precision in thought, decision in life.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.DECISION.getLitePalTag())
                                .addLitePalTags(EnumTag.PRECISION.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("He who opens a school door, closes a prison.", false, true))
                                .addLitePalTags(EnumTag.EDUCATION.getLitePalTag())
                                .addLitePalTags(EnumTag.SCHOOL.getLitePalTag())
                                .addLitePalTags(EnumTag.DOOR.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When a woman is talking to you, listen to what she says with her eyes.", false, true))
                                .addLitePalTags(EnumTag.RELATIONSHIP.getLitePalTag())
                                .addLitePalTags(EnumTag.WOMAN.getLitePalTag())
                                .addLitePalTags(EnumTag.SHE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Music expresses that which cannot be said and on which it is impossible to be silent.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
                                .addLitePalTags(EnumTag.SILENT.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Laughter is the sun that drives winter from the human face.", false, true))
                                .addLitePalTags(EnumTag.FACE.getLitePalTag())
                                .addLitePalTags(EnumTag.HUMAN_FACE.getLitePalTag())
                                .addLitePalTags(EnumTag.DRIVES.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.VIKTOR_E_FRANKL.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A man who becomes conscious of the responsibility he bears toward a human being who affectionately waits for him, or to an unfinished work, will never be able to throw away his life. He knows the 'why' for his existence, and will be able to bear almost any 'how.'", false, true))
                                .addLitePalTags(EnumTag.EXISTENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.AWAY.getLitePalTag())
                                .addLitePalTags(EnumTag.ALMOST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If there is a meaning in life at all, then there must be a meaning in suffering. Suffering is an ineradicable part of life, even as fate and death. Without suffering and death, human life cannot be complete.", false, true))
                                .addLitePalTags(EnumTag.DEATH.getLitePalTag())
                                .addLitePalTags(EnumTag.SUFFERING.getLitePalTag())
                                .addLitePalTags(EnumTag.FATE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The last of human freedoms - the ability to chose one's attitude in a given set of circumstances.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVEN.getLitePalTag())
                                .addLitePalTags(EnumTag.SET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Challenging the meaning of life is the truest expression of the state of being human.", false, true))
                                .addLitePalTags(EnumTag.BRAINY.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPRESSION.getLitePalTag())
                                .addLitePalTags(EnumTag.TRUEST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For the meaning of life differs from man to man, from day to day and from hour to hour. What matters, therefore, is not the meaning of life in general but rather the specific meaning of a person's life at a given moment.", false, true))
                                .addLitePalTags(EnumTag.RATHER.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVEN.getLitePalTag())
                                .addLitePalTags(EnumTag.DIFFERS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Everyone has his own specific vocation or mission in life; everyone must carry out a concrete assignment that demands fulfillment. Therein he cannot be replaced, nor can his life be repeated, thus, everyone's task is unique as his specific opportunity to implement it.", false, true))
                                .addLitePalTags(EnumTag.CONCRETE.getLitePalTag())
                                .addLitePalTags(EnumTag.OWN.getLitePalTag())
                                .addLitePalTags(EnumTag.THEREIN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Between stimulus and response there is a space. In that space is our power to choose our response. In our response lies our growth and our freedom.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.RESPONSE.getLitePalTag())
                                .addLitePalTags(EnumTag.STIMULUS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Everything can be taken from a man but one thing: the last of human freedoms - to choose one's attitude in any given set of circumstances, to choose one's own way.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIVEN.getLitePalTag())
                                .addLitePalTags(EnumTag.SET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When we are no longer able to change a situation - we are challenged to change ourselves.", false, true))
                                .addLitePalTags(EnumTag.CHANGE.getLitePalTag())
                                .addLitePalTags(EnumTag.LONGER.getLitePalTag())
                                .addLitePalTags(EnumTag.CHALLENGED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Happiness must happen, and the same holds for success: you have to let it happen by not caring about it.", false, true))
                                .addLitePalTags(EnumTag.CARING.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPEN.getLitePalTag())
                                .addLitePalTags(EnumTag.SAME.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.VIN_SCULLY.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("As long as you live keep smiling because it brightens everybody's day.", false, true))
                                .addLitePalTags(EnumTag.SMILING.getLitePalTag())
                                .addLitePalTags(EnumTag.KEEP_SMILING.getLitePalTag())
                                .addLitePalTags(EnumTag.KEEP.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The roar of the crowd has always been the sweetest music. It's intoxicating.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.BEEN.getLitePalTag())
                                .addLitePalTags(EnumTag.INTOXICATING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's a wonderful feeling being a bridge to the past and unite generations.", false, true))
                                .addLitePalTags(EnumTag.PAST.getLitePalTag())
                                .addLitePalTags(EnumTag.UNITE.getLitePalTag())
                                .addLitePalTags(EnumTag.GENERATIONS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Statistics are used much like a drunk uses a lamppost: for support, not illumination.", false, true))
                                .addLitePalTags(EnumTag.DRUNK.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.ILLUMINATION.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Andre Dawson has a bruised knee and is listed as day-to-day. Aren't we all?", false, true))
                                .addLitePalTags(EnumTag.KNEE.getLitePalTag())
                                .addLitePalTags(EnumTag.ANDRE.getLitePalTag())
                                .addLitePalTags(EnumTag.DAY_TO_DAY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Good is not good when better is expected.", false, true))
                                .addLitePalTags(EnumTag.GOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.BETTER.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPECTED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Almost all of us growing up have played baseball on some level. It has an inside track with people. It has a unifying effect.", false, true))
                                .addLitePalTags(EnumTag.SOME.getLitePalTag())
                                .addLitePalTags(EnumTag.ALMOST_ALL.getLitePalTag())
                                .addLitePalTags(EnumTag.ALMOST.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I guess my thermometer for my baseball fever is still a goose bump.", false, true))
                                .addLitePalTags(EnumTag.GOOSE.getLitePalTag())
                                .addLitePalTags(EnumTag.STILL.getLitePalTag())
                                .addLitePalTags(EnumTag.GUESS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I don't like to be alone, but I do cherish the moments that I'm alone with a good book.", false, true))
                                .addLitePalTags(EnumTag.ALONE.getLitePalTag())
                                .addLitePalTags(EnumTag.MOMENTS.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Don't let the winds blow your dreams away... or steal your faith in God.", false, true))
                                .addLitePalTags(EnumTag.AWAY.getLitePalTag())
                                .addLitePalTags(EnumTag.WINDS.getLitePalTag())
                                .addLitePalTags(EnumTag.STEAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.VINCE_LOMBARDI.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Football is like life - it requires perseverance, self-denial, hard work, sacrifice, dedication and respect for authority.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.SELF_DENIAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Winning is habit. Unfortunately, so is losing.", false, true))
                                .addLitePalTags(EnumTag.SPORTS.getLitePalTag())
                                .addLitePalTags(EnumTag.WINNING.getLitePalTag())
                                .addLitePalTags(EnumTag.HABIT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Practice does not make perfect. Only perfect practice makes perfect.", false, true))
                                .addLitePalTags(EnumTag.EXPERIENCE.getLitePalTag())
                                .addLitePalTags(EnumTag.PRACTICE.getLitePalTag())
                                .addLitePalTags(EnumTag.DOES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The achievements of an organization are the results of the combined effort of each individual.", false, true))
                                .addLitePalTags(EnumTag.INDIVIDUAL.getLitePalTag())
                                .addLitePalTags(EnumTag.ACHIEVEMENTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The measure of who we are is what we do with what we have.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.MEASURE.getLitePalTag())
                                .addLitePalTags(EnumTag.WHO.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Individual commitment to a group effort - that is what makes a team work, a company work, a society work, a civilization work.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.SOCIETY.getLitePalTag())
                                .addLitePalTags(EnumTag.INDIVIDUAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Winners never quit and quitters never win.", false, true))
                                .addLitePalTags(EnumTag.SPORTS.getLitePalTag())
                                .addLitePalTags(EnumTag.WINNERS.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We didn't lose the game; we just ran out of time.", false, true))
                                .addLitePalTags(EnumTag.SPORTS.getLitePalTag())
                                .addLitePalTags(EnumTag.GAME.getLitePalTag())
                                .addLitePalTags(EnumTag.LOSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The price of success is hard work, dedication to the job at hand, and the determination that whether we win or lose, we have applied the best of ourselves to the task at hand.", false, true))
                                .addLitePalTags(EnumTag.SUCCESS.getLitePalTag())
                                .addLitePalTags(EnumTag.WIN_OR_LOSE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Perfection is not attainable, but if we chase perfection we can catch excellence.", false, true))
                                .addLitePalTags(EnumTag.INSPIRATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.EXCELLENCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.VINCENT_VAN_GOGH.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("What would life be if we had no courage to attempt anything?", false, true))
                                .addLitePalTags(EnumTag.COURAGE.getLitePalTag())
                                .addLitePalTags(EnumTag.HAD.getLitePalTag())
                                .addLitePalTags(EnumTag.WOULD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I feel that there is nothing more truly artistic than to love people.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.NOTHING.getLitePalTag())
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you hear a voice within you say 'you cannot paint,' then by all means paint, and that voice will be silenced.", false, true))
                                .addLitePalTags(EnumTag.ART.getLitePalTag())
                                .addLitePalTags(EnumTag.VOICE.getLitePalTag())
                                .addLitePalTags(EnumTag.SILENCED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There is no blue without yellow and without orange.", false, true))
                                .addLitePalTags(EnumTag.BLUE.getLitePalTag())
                                .addLitePalTags(EnumTag.YELLOW.getLitePalTag())
                                .addLitePalTags(EnumTag.ORANGE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I put my heart and my soul into my work, and have lost my mind in the process.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.MIND.getLitePalTag())
                                .addLitePalTags(EnumTag.PROCESS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The fishermen know that the sea is dangerous and the storm terrible, but they have never found these dangers sufficient reason for remaining ashore.", false, true))
                                .addLitePalTags(EnumTag.STORM.getLitePalTag())
                                .addLitePalTags(EnumTag.REASON.getLitePalTag())
                                .addLitePalTags(EnumTag.DANGERS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For my part I know nothing with any certainty, but the sight of the stars makes me dream.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.DREAM.getLitePalTag())
                                .addLitePalTags(EnumTag.PART.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I dream of painting and then I paint my dream.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getLitePalTag())
                                .addLitePalTags(EnumTag.PAINTING.getLitePalTag())
                                .addLitePalTags(EnumTag.DREAM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I often think that the night is more alive and more richly colored than the day.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.ALIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Great things are done by a series of small things brought together.", false, true))
                                .addLitePalTags(EnumTag.GREAT.getLitePalTag())
                                .addLitePalTags(EnumTag.SMALL_THINGS.getLitePalTag())
                                .addLitePalTags(EnumTag.SMALL.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.WALT_DISNEY.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you can dream it, you can do it.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DREAM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We keep moving forward, opening new doors, and doing new things, because we're curious and curiosity keeps leading us down new paths.", false, true))
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.CURIOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.NEW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All our dreams can come true, if we have the courage to pursue them.", false, true))
                                .addLitePalTags(EnumTag.DREAMS.getLitePalTag())
                                .addLitePalTags(EnumTag.TRUE.getLitePalTag())
                                .addLitePalTags(EnumTag.PURSUE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You can design and create, and build the most wonderful place in the world. But it takes people to make the dream a reality.", false, true))
                                .addLitePalTags(EnumTag.DESIGN.getLitePalTag())
                                .addLitePalTags(EnumTag.PEOPLE.getLitePalTag())
                                .addLitePalTags(EnumTag.WONDERFUL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Times and conditions change so rapidly that we must keep our aim constantly focused on the future.", false, true))
                                .addLitePalTags(EnumTag.FUTURE.getLitePalTag())
                                .addLitePalTags(EnumTag.AIM.getLitePalTag())
                                .addLitePalTags(EnumTag.TIMES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The way to get started is to quit talking and begin doing.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.GET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's kind of fun to do the impossible.", false, true))
                                .addLitePalTags(EnumTag.FUN.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPOSSIBLE.getLitePalTag())
                                .addLitePalTags(EnumTag.KIND.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When you're curious, you find lots of interesting things to do.", false, true))
                                .addLitePalTags(EnumTag.IMAGINATION.getLitePalTag())
                                .addLitePalTags(EnumTag.CURIOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.LOTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All the adversity I've had in my life, all my troubles and obstacles, have strengthened me... You may not realize it when it happens, but a kick in the teeth may be the best thing in the world for you.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getLitePalTag())
                                .addLitePalTags(EnumTag.ADVERSITY.getLitePalTag())
                                .addLitePalTags(EnumTag.MY_LIFE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.W_C_FIELDS.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A woman drove me to drink and I didn't even have the decency to thank her.", false, true))
                                .addLitePalTags(EnumTag.WOMAN.getLitePalTag())
                                .addLitePalTags(EnumTag.HER.getLitePalTag())
                                .addLitePalTags(EnumTag.EVEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It ain't what they call you, it's what you answer to.", false, true))
                                .addLitePalTags(EnumTag.YOU.getLitePalTag())
                                .addLitePalTags(EnumTag.ANSWER.getLitePalTag())
                                .addLitePalTags(EnumTag.CALL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Always carry a flagon of whiskey in case of snakebite and furthermore always carry a small snake.", false, true))
                                .addLitePalTags(EnumTag.SMALL.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.FURTHERMORE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I never worry about being driven to drink; I just worry about being driven home.", false, true))
                                .addLitePalTags(EnumTag.WORRY.getLitePalTag())
                                .addLitePalTags(EnumTag.NEW_YEARS.getLitePalTag())
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The best cure for insomnia is to get a lot of sleep.", false, true))
                                .addLitePalTags(EnumTag.SLEEP.getLitePalTag())
                                .addLitePalTags(EnumTag.GET.getLitePalTag())
                                .addLitePalTags(EnumTag.LOT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("No doubt exists that all women are crazy; it's only a question of degree.", false, true))
                                .addLitePalTags(EnumTag.WOMEN.getLitePalTag())
                                .addLitePalTags(EnumTag.QUESTION.getLitePalTag())
                                .addLitePalTags(EnumTag.DEGREE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you can't dazzle them with brilliance, baffle them with bull.", false, true))
                                .addLitePalTags(EnumTag.BULL.getLitePalTag())
                                .addLitePalTags(EnumTag.THEM.getLitePalTag())
                                .addLitePalTags(EnumTag.BRILLIANCE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A rich man is nothing but a poor man with money.", false, true))
                                .addLitePalTags(EnumTag.MONEY.getLitePalTag())
                                .addLitePalTags(EnumTag.POOR.getLitePalTag())
                                .addLitePalTags(EnumTag.NOTHING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Start every day off with a smile and get it over with.", false, true))
                                .addLitePalTags(EnumTag.HUMOR.getLitePalTag())
                                .addLitePalTags(EnumTag.EVERY_DAY.getLitePalTag())
                                .addLitePalTags(EnumTag.OVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I cook with wine, sometimes I even add it to the food.", false, true))
                                .addLitePalTags(EnumTag.FUNNY.getLitePalTag())
                                .addLitePalTags(EnumTag.ADD.getLitePalTag())
                                .addLitePalTags(EnumTag.EVEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.YAEL_NAIM.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In France, I found there is a lot of attention to the little details and to the quality of life.", false, true))
                                .addLitePalTags(EnumTag.FRANCE.getLitePalTag())
                                .addLitePalTags(EnumTag.FOUND.getLitePalTag())
                                .addLitePalTags(EnumTag.LOT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When I'd go to Israel, I felt like a tourist. My social and professional ties had started to dissolve, and it confused me. I didn't know whether I should stay here in Paris or go back to Israel, or even cut off all my ties with Israel so I could really plant roots here. Or maybe go somewhere else altogether.", false, true))
                                .addLitePalTags(EnumTag.MAYBE.getLitePalTag())
                                .addLitePalTags(EnumTag.CUT.getLitePalTag())
                                .addLitePalTags(EnumTag.HERE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When I write in Hebrew, I don't look for sophistication in music; it's just pure emotion that comes out.", false, true))
                                .addLitePalTags(EnumTag.SOPHISTICATION.getLitePalTag())
                                .addLitePalTags(EnumTag.I_WRITE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Hebrew is my first language, so it's really the most personal and the most simple. When I write in Hebrew, I don't look for sophistication in music; it's just pure emotion that comes out.", false, true))
                                .addLitePalTags(EnumTag.SOPHISTICATION.getLitePalTag())
                                .addLitePalTags(EnumTag.I_WRITE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I like to sing covers of songs that are at the extreme ends from what I usually listen to.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.ENDS.getLitePalTag())
                                .addLitePalTags(EnumTag.SONGS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("English is really free for me; there's no limits to the music and the imagination. And French, it's just I live in Paris, and it's really a poetic language where you can really play with words.", false, true))
                                .addLitePalTags(EnumTag.WORDS.getLitePalTag())
                                .addLitePalTags(EnumTag.PLAY.getLitePalTag())
                                .addLitePalTags(EnumTag.POETIC.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My first album was full of ideas and attempts to go in all kinds of directions. I was young. I loved making music, but I didn't have a clear path. I also lacked in confidence.", false, true))
                                .addLitePalTags(EnumTag.YOUNG.getLitePalTag())
                                .addLitePalTags(EnumTag.MAKING.getLitePalTag())
                                .addLitePalTags(EnumTag.ALBUM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My big influences are Joni Mitchell, and a lot of classical and Indian music, as well as Nina Simone and the personal blues and jazz of Billie Holiday. Other influences for me include Bjork, Nick Drake, and Sufjan Stevens.", false, true))
                                .addLitePalTags(EnumTag.JAZZ.getLitePalTag())
                                .addLitePalTags(EnumTag.BIG.getLitePalTag())
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Songs are a way to express what I have felt. A way to understand what happened to me or to other people.", false, true))
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.SONGS.getLitePalTag())
                                .addLitePalTags(EnumTag.FELT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("As always, I wrote songs. Some people cook or play sports. This is what I love to do. Sometimes I can't express myself that well in talk, so I write songs.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.PLAY.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.YAEL_STONE.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Family hang-outs can go very late into the night and involve lots of music.", false, true))
                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .addLitePalTags(EnumTag.LOTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Prison makes an interesting context for so many different characters to come together. You get to see what lines get drawn between people.", false, true))
                                .addLitePalTags(EnumTag.COME.getLitePalTag())
                                .addLitePalTags(EnumTag.DIFFERENT_CHARACTERS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I've definitely had those moments when I think a relationship with somebody is one way, and then it just flips.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.HAD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Australia has a very big history of incarceration. What does that mean to us? What does it mean that we came over to a country that's not necessarily ours and filled it with white prisoners?", false, true))
                                .addLitePalTags(EnumTag.BIG.getLitePalTag())
                                .addLitePalTags(EnumTag.OVER.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's really interesting working in television as opposed to the theater, where you know the arc of the character and you are able to create this whole backstory.", false, true))
                                .addLitePalTags(EnumTag.TELEVISION.getLitePalTag())
                                .addLitePalTags(EnumTag.WHOLE.getLitePalTag())
                                .addLitePalTags(EnumTag.OPPOSED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I never want to be anywhere else than in the rehearsal room. I mean, it's so lame to say, but it makes me supremely happy to work with people and to talk and invent and laugh.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.WANT.getLitePalTag())
                                .addLitePalTags(EnumTag.REHEARSAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In Australia, kids play in American accents.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getLitePalTag())
                                .addLitePalTags(EnumTag.AUSTRALIA.getLitePalTag())
                                .addLitePalTags(EnumTag.ACCENTS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("One thing that is not to be underestimated is American culture's influence on the rest of the world.", false, true))
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .addLitePalTags(EnumTag.REST.getLitePalTag())
                                .addLitePalTags(EnumTag.UNDERESTIMATED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("My working history as an actor is definitely in the theatre; it certainly was in Australia.", false, true))
                                .addLitePalTags(EnumTag.THEATRE.getLitePalTag())
                                .addLitePalTags(EnumTag.ACTOR.getLitePalTag())
                                .addLitePalTags(EnumTag.CERTAINLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.YAHOO_SERIOUS.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In 1905 Albert discovered Relativity, in 1906 he invented Rock and Roll.", false, true))
                                .addLitePalTags(EnumTag.ROCK.getLitePalTag())
                                .addLitePalTags(EnumTag.RELATIVITY.getLitePalTag())
                                .addLitePalTags(EnumTag.DISCOVERED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Find your own specific voice in filmmaking and go for it. Either people will get it or they won't and that's what it's all about.", false, true))
                                .addLitePalTags(EnumTag.VOICE.getLitePalTag())
                                .addLitePalTags(EnumTag.GO_FOR_IT.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The American formula things are out there but they don't have any stories to tell - we have all the stories to tell - but they're all formula.", false, true))
                                .addLitePalTags(EnumTag.TELL.getLitePalTag())
                                .addLitePalTags(EnumTag.THINGS.getLitePalTag())
                                .addLitePalTags(EnumTag.STORIES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's an infinite creative universe to explore so why chase conservative options?", false, true))
                                .addLitePalTags(EnumTag.EXPLORE.getLitePalTag())
                                .addLitePalTags(EnumTag.CONSERVATIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("There are a thousand weird untold stories in the Australian film industry, this has been one of them.", false, true))
                                .addLitePalTags(EnumTag.BEEN.getLitePalTag())
                                .addLitePalTags(EnumTag.UNTOLD.getLitePalTag())
                                .addLitePalTags(EnumTag.STORIES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("All the jokes in my films, the comedy, they're not me, I just try to hold a big mirror up to us.", false, true))
                                .addLitePalTags(EnumTag.MIRROR.getLitePalTag())
                                .addLitePalTags(EnumTag.BIG.getLitePalTag())
                                .addLitePalTags(EnumTag.FILMS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Australians don't have a preconceived notion of what things have to be... we can go on a fantastic journey.", false, true))
                                .addLitePalTags(EnumTag.JOURNEY.getLitePalTag())
                                .addLitePalTags(EnumTag.THINGS.getLitePalTag())
                                .addLitePalTags(EnumTag.NOTION.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's because we are so flooded with American culture that we're startled when we see ourselves up there on the screen.", false, true))
                                .addLitePalTags(EnumTag.AMERICAN.getLitePalTag())
                                .addLitePalTags(EnumTag.SCREEN.getLitePalTag())
                                .addLitePalTags(EnumTag.FLOODED.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We live in a time where government is not a leadership thing, it's more a business that's out there and running riot, so I guess the people have to go out there and say stuff.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getLitePalTag())
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .addLitePalTags(EnumTag.GO.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.YAIR_LAPID.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("One of the things that hold together a human society is the existence of basic politeness among its members.", false, true))
                                .addLitePalTags(EnumTag.ONE_OF_THE_THINGS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I want to live in a country that is not just a place but also an idea, and Jerusalem is the heart of the idea. There may be practical considerations, but a country cannot exist without an ethos, and Jerusalem is an ethos.", false, true))
                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
                                .addLitePalTags(EnumTag.MAY.getLitePalTag())
                                .addLitePalTags(EnumTag.PRACTICAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I don't reject caution, but you also have to be careful about caution because there's a stage when it turns into paralysis.", false, true))
                                .addLitePalTags(EnumTag.BE_CAREFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.CAREFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.ABOUT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If you want to do stuff, you have to be able to handle controversy.", false, true))
                                .addLitePalTags(EnumTag.WANT.getLitePalTag())
                                .addLitePalTags(EnumTag.HANDLE.getLitePalTag())
                                .addLitePalTags(EnumTag.ABLE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("How can Israel say that everyone is equal before the law - that you're equal before the law - when the law defines Judaism as the cultural, national and legislative basis for the state?", false, true))
                                .addLitePalTags(EnumTag.LAW.getLitePalTag())
                                .addLitePalTags(EnumTag.EVERYONE.getLitePalTag())
                                .addLitePalTags(EnumTag.BEFORE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Israel can't be the only country in the Western world not to have freedom of religion.", false, true))
                                .addLitePalTags(EnumTag.FREEDOM.getLitePalTag())
                                .addLitePalTags(EnumTag.WORLD.getLitePalTag())
                                .addLitePalTags(EnumTag.COUNTRY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Arab society features apartheid of women, apartheid of homosexuals, and apartheid of Christians, Jews, and democracy.", false, true))
                                .addLitePalTags(EnumTag.SOCIETY.getLitePalTag())
                                .addLitePalTags(EnumTag.APARTHEID.getLitePalTag())
                                .addLitePalTags(EnumTag.FEATURES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Every Jew is my brother, and I will not succumb to hate speech.", false, true))
                                .addLitePalTags(EnumTag.HATE.getLitePalTag())
                                .addLitePalTags(EnumTag.SPEECH.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Jerusalem will remain under Israeli sovereignty and will not be divided.", false, true))
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.JERUSALEM.getLitePalTag())
                                .addLitePalTags(EnumTag.REMAIN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("At times, we need to stop and rethink everything. Our entire history is made up of people who were sure they knew the truth yet forgot that the truth has an annoying tendency to change on occasion without us noticing it.", false, true))
                                .addLitePalTags(EnumTag.OCCASION.getLitePalTag())
                                .addLitePalTags(EnumTag.TENDENCY.getLitePalTag())
                                .addLitePalTags(EnumTag.ENTIRE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.YOTAM_OTTOLENGHI.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The combination of olive oil, garlic and lemon juice lifts the spirits in winter.", false, true))
                                .addLitePalTags(EnumTag.OIL.getLitePalTag())
                                .addLitePalTags(EnumTag.LEMON.getLitePalTag())
                                .addLitePalTags(EnumTag.GARLIC.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The moment to tell my barber I was gay just never came up.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .addLitePalTags(EnumTag.TELL.getLitePalTag())
                                .addLitePalTags(EnumTag.CAME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A well-made salad must have a certain uniformity; it should make perfect sense for those ingredients to share a bowl.", false, true))
                                .addLitePalTags(EnumTag.PERFECT.getLitePalTag())
                                .addLitePalTags(EnumTag.SALAD.getLitePalTag())
                                .addLitePalTags(EnumTag.UNIFORMITY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I keep returning to the combination of artichoke, broad beans and lemon. The freshness of young beans and the lemon juice 'lifts' the artichoke and balances its hearty nature.", false, true))
                                .addLitePalTags(EnumTag.NATURE.getLitePalTag())
                                .addLitePalTags(EnumTag.YOUNG.getLitePalTag())
                                .addLitePalTags(EnumTag.HEARTY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("As is always the way with pancakes, the first hotcake to come out of the pan will probably be a bit misshapen. Just scoff it, and carry on with the rest.", false, true))
                                .addLitePalTags(EnumTag.REST.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Pasta with melted cheese is the one thing I could eat over and over again.", false, true))
                                .addLitePalTags(EnumTag.PASTA.getLitePalTag())
                                .addLitePalTags(EnumTag.OVER.getLitePalTag())
                                .addLitePalTags(EnumTag.COULD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For those, like me, who can't rely on being given a home smoker this Christmas, you can buildQuotes your own approximation with just a roll of tin foil and a big wok or pan for which you have a lid.", false, true))
                                .addLitePalTags(EnumTag.OWN.getLitePalTag())
                                .addLitePalTags(EnumTag.BIG.getLitePalTag())
                                .addLitePalTags(EnumTag.LID.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The addition of vinaigrette to freshly roasted vegetables gives them a freshness and juiciness they don't normally have; the acidity brings out new shades of flavour, too.", false, true))
                                .addLitePalTags(EnumTag.NEW.getLitePalTag())
                                .addLitePalTags(EnumTag.SHADES.getLitePalTag())
                                .addLitePalTags(EnumTag.THEM.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("For me, the end of childhood came when the number of candles on my birthday cake no longer reflected my age, around 19 or 20. From then on, each candle came to represent an entire decade.", false, true))
                                .addLitePalTags(EnumTag.BIRTHDAY.getLitePalTag())
                                .addLitePalTags(EnumTag.CHILDHOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.DECADE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZIG_ZIGLAR.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("What you get by achieving your goals is not as important as what you become by achieving your goals.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATIONAL.getLitePalTag())
                                .addLitePalTags(EnumTag.IMPORTANT.getLitePalTag())
                                .addLitePalTags(EnumTag.GET.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Positive thinking will let you do everything better than negative thinking will.", false, true))
                                .addLitePalTags(EnumTag.POSITIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.NEGATIVE.getLitePalTag())
                                .addLitePalTags(EnumTag.BETTER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Your attitude, not your aptitude, will determine your altitude.", false, true))
                                .addLitePalTags(EnumTag.ATTITUDE.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .addLitePalTags(EnumTag.ALTITUDE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You were born to win, but to be a winner, you must plan to win, prepare to win, and expect to win.", false, true))
                                .addLitePalTags(EnumTag.WINNER.getLitePalTag())
                                .addLitePalTags(EnumTag.PREPARE.getLitePalTag())
                                .addLitePalTags(EnumTag.EXPECT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("If people like you, they'll listen to you, but if they trust you, they'll do business with you.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getLitePalTag())
                                .addLitePalTags(EnumTag.TRUST.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The foundation stones for a balanced success are honesty, character, integrity, faith, love and loyalty.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.SUCCESS.getLitePalTag())
                                .addLitePalTags(EnumTag.CHARACTER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("With integrity, you have nothing to fear, since you have nothing to hide. With integrity, you will do the right thing, so you will have no guilt.", false, true))
                                .addLitePalTags(EnumTag.GUILT.getLitePalTag())
                                .addLitePalTags(EnumTag.NOTHING.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Try to look at your weakness and convert it into your strength. That's success.", false, true))
                                .addLitePalTags(EnumTag.STRENGTH.getLitePalTag())
                                .addLitePalTags(EnumTag.SUCCESS.getLitePalTag())
                                .addLitePalTags(EnumTag.WEEKNESS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You were designed for accomplishment, engineered for success, and endowed with the seeds of greatness.", false, true))
                                .addLitePalTags(EnumTag.GREATNESS.getLitePalTag())
                                .addLitePalTags(EnumTag.ENGINEERED.getLitePalTag())
                                .addLitePalTags(EnumTag.WERE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("People often say that motivation doesn't last. Well, neither does bathing - that's why we recommend it daily.", false, true))
                                .addLitePalTags(EnumTag.MOTIVATION.getLitePalTag())
                                .addLitePalTags(EnumTag.WHY.getLitePalTag())
                                .addLitePalTags(EnumTag.LAST.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZAC_GOLDSMITH.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("A pound invested in energy efficiency buys seven times more energy solution than a pound invested in nuclear power.", false, true))
                                .addLitePalTags(EnumTag.EFFICIENCY.getLitePalTag())
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .addLitePalTags(EnumTag.BUYS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Yes, Heathrow is the U.K.'s busiest airport, but new runways or a new airport are not the answer. It is far better to focus on improving capacity.", false, true))
                                .addLitePalTags(EnumTag.FOCUS.getLitePalTag())
                                .addLitePalTags(EnumTag.YES.getLitePalTag())
                                .addLitePalTags(EnumTag.NEW.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Green policy is about triggering a shift to a cleaner way of doing things. To be effective, it needs to incentivise the right behaviour, for example through tax breaks, and that needs to be paid for by disincentives on polluting behaviour.", false, true))
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .addLitePalTags(EnumTag.NEEDS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Leonardo DiCaprio is a rare phenomenon. Whereas for so many celebrities an interest in the environment is a fashionable accessory, for DiCaprio it is a thread that runs through everything he does.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .addLitePalTags(EnumTag.CELEBRITIES.getLitePalTag())
                                .addLitePalTags(EnumTag.THREAD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I don't know David Cameron very well. I like him. I think you can judge a book by its cover - whoever said you can't is wrong - that's the whole point of nature giving us intuition, instinct and so on. I think the cover is pretty good.", false, true))
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .addLitePalTags(EnumTag.DAVID_CAMERON.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The 5,000 or so acres of Royal Parks are one of the things that make London special.", false, true))
                                .addLitePalTags(EnumTag.LONDON.getLitePalTag())
                                .addLitePalTags(EnumTag.SPECIAL.getLitePalTag())
                                .addLitePalTags(EnumTag.PARKS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You know I don't really have faith in politicians - this is quite a sleazy business. But there is no law which says that all politicians will turn out to be scumbags.", false, true))
                                .addLitePalTags(EnumTag.BUSINESS.getLitePalTag())
                                .addLitePalTags(EnumTag.LAW.getLitePalTag())
                                .addLitePalTags(EnumTag.WHICH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In North America, more than half of all children travel to school by bus. We need a similar programme in London.", false, true))
                                .addLitePalTags(EnumTag.BUS.getLitePalTag())
                                .addLitePalTags(EnumTag.SIMILAR.getLitePalTag())
                                .addLitePalTags(EnumTag.HALF.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("More than half the world's largest 100 economies are corporations. They have no loyalties to place or citizens.", false, true))
                                .addLitePalTags(EnumTag.ECONOMIES.getLitePalTag())
                                .addLitePalTags(EnumTag.LARGEST.getLitePalTag())
                                .addLitePalTags(EnumTag.HALF.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I think sometimes if you are too interested in day-to-day politics, you lose sight of the long term.", false, true))
                                .addLitePalTags(EnumTag.POLITICS.getLitePalTag())
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZAC_HANSON.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's cool to have critical success because it's always nice for your peers to say, 'Good job.' But who cares about them?", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.CARES.getLitePalTag())
                                .addLitePalTags(EnumTag.CRITICAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The real reason we ended up getting into that type of music was our dad worked for an oil company so we spent a year overseas when we were young kids. Because of that, it was all Spanish TV and radio so we ended up having these '50s and '60s tapes, tapes of that music.", false, true))
                                .addLitePalTags(EnumTag.REASON.getLitePalTag())
                                .addLitePalTags(EnumTag.TAPES.getLitePalTag())
                                .addLitePalTags(EnumTag.TV.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It's pretty much run by everybody. We're very involved in everything that goes on. We always have been.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.PRETTY.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It would be nice to have radio support, not that we've ever had that much trouble with it.", false, true))
                                .addLitePalTags(EnumTag.BE_NICE.getLitePalTag())
                                .addLitePalTags(EnumTag.EVER.getLitePalTag())
                                .addLitePalTags(EnumTag.WOULD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You may be pulling from different influences because of different things that are going on in your life, different people that are around you and more experiences to pull from.", false, true))
                                .addLitePalTags(EnumTag.DIFFERENT_PEOPLE.getLitePalTag())
                                .addLitePalTags(EnumTag.GOING.getLitePalTag())
                                .addLitePalTags(EnumTag.MAY.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZHU_ZHU.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In China, we don't know about the swimming pool game, but we know about Marco Polo.", false, true))
                                .addLitePalTags(EnumTag.SWIMMING.getLitePalTag())
                                .addLitePalTags(EnumTag.GAME.getLitePalTag())
                                .addLitePalTags(EnumTag.CHINA.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Sometimes I'll do a mask if I had a lot of makeup on that day or was out in the sun. I like a hydrogen mask. It's an easy one, and it's supposed to soothe and relax your skin.", false, true))
                                .addLitePalTags(EnumTag.RELAX.getLitePalTag())
                                .addLitePalTags(EnumTag.MAKEUP.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("English is not my first language.", false, true))
                                .addLitePalTags(EnumTag.LANGUAGE.getLitePalTag())
                                .addLitePalTags(EnumTag.FIRST.getLitePalTag())
                                .addLitePalTags(EnumTag.ENGLISH.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I have really long hair, so I don't cut it all that often. Sometimes, when I'm working, I just have the stylist on set trim it for me. I don't dye my hair. When I was a teenager, I dyed my hair five colors at one time. It was all different shades of red going from more orange to more purple. I thought I looked so cool.", false, true))
                                .addLitePalTags(EnumTag.THOUGHT.getLitePalTag())
                                .addLitePalTags(EnumTag.SHADES.getLitePalTag())
                                .addLitePalTags(EnumTag.CUT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I was planning to study more, but it's a struggle with so many opportunities for film and trying to get better through studying. No matter what, I want to be making more movies.", false, true))
                                .addLitePalTags(EnumTag.STUDY.getLitePalTag())
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .addLitePalTags(EnumTag.MAKING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I don't mind doing action or kung fu, but I'm also really happy to do something dramatic. I'd like to show that a Chinese girl doesn't have to do crazy martial arts to get the part.", false, true))
                                .addLitePalTags(EnumTag.HAPPY.getLitePalTag())
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.PART.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I love Jo Malone. I got the Orange Blossom scent as a gift many years ago, and I fell in love with it. It's very light, natural, sweet. It's there but not that obvious.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.GIFT.getLitePalTag())
                                .addLitePalTags(EnumTag.VERY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I like the MAC Face and Body foundation. Sometimes it can't cover all my flaws, but I like it because it looks really natural and it evens out my skin tone.", false, true))
                                .addLitePalTags(EnumTag.NATURAL.getLitePalTag())
                                .addLitePalTags(EnumTag.TONE.getLitePalTag())
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZOE_KAZAN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nothing's going to come to you by sitting around and waiting for it.", false, true))
                                .addLitePalTags(EnumTag.WAITING.getLitePalTag())
                                .addLitePalTags(EnumTag.NOTHING.getLitePalTag())
                                .addLitePalTags(EnumTag.GOING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Writing-wise, I like to have a lot of things on the burners at once, because when I hit a wall, I like to move on to the thing I haven't hit a wall on.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.MOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.LOT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I really love people. I love to meet people. I'm curious about people.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.CURIOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.I_LOVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I have mad luck. I'm super-good at games like backgammon or anything that requires rolling dice.", false, true))
                                .addLitePalTags(EnumTag.LUCK.getLitePalTag())
                                .addLitePalTags(EnumTag.MAD.getLitePalTag())
                                .addLitePalTags(EnumTag.ROLLING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I don't like pretentious films or pretentious people.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.PRETENTIOUS.getLitePalTag())
                                .addLitePalTags(EnumTag.FILMS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("You set up the story, but the characters start talking, and they go places that you didn't expect. You have to follow.", false, true))
                                .addLitePalTags(EnumTag.EXPECT.getLitePalTag())
                                .addLitePalTags(EnumTag.CHARACTERS.getLitePalTag())
                                .addLitePalTags(EnumTag.PLACES.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("And I think the female creative urge is intrinsically biologically linked to our ability to give birth to a child, even if we've never... I've never given birth, but I feel like it's part of our psychology.", false, true))
                                .addLitePalTags(EnumTag.FEEL.getLitePalTag())
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.PART.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("People really do make the assumption that I had some weirdo Hollywood upbringing, but my parents are incredibly down-to-earth people who worked really hard to raise us in a way that was health.", false, true))
                                .addLitePalTags(EnumTag.HEALTH.getLitePalTag())
                                .addLitePalTags(EnumTag.HOLLYWOOD.getLitePalTag())
                                .addLitePalTags(EnumTag.SOME.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("And when I get bored, it's like the worst parts of me come out. I really veer to self-destructive tendencies quickly.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.SELF_DESTRUCTIVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Anytime that I've felt uninspired, I don't force myself to sit down and write. I only do it when I feel the impulse.", false, true))
                                .addLitePalTags(EnumTag.MYSELF.getLitePalTag())
                                .addLitePalTags(EnumTag.FELT.getLitePalTag())
                                .addLitePalTags(EnumTag.ANYTIME.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZOOEY_DESCHANEL.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The Internet's like one big bathroom wall with a lot of people who anonymously can say really mean things. It's fine, I believe in freedom of speech and I think people should think what they want, but I don't care to hear it.", false, true))
                                .addLitePalTags(EnumTag.BELIEVE.getLitePalTag())
                                .addLitePalTags(EnumTag.BIG.getLitePalTag())
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("True love that lasts forever... yes, I do believe in it. My parents have been married for 40 years and my grandparents were married for 70 years. I come from a long line of true loves.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.LASTS.getLitePalTag())
                                .addLitePalTags(EnumTag.BEEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Summer has always been my favorite season. I feel happier.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.HAPPIER.getLitePalTag())
                                .addLitePalTags(EnumTag.BEEN.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I grew up believing my sister was from the planet Neptune and had been sent down to Earth to kill me.", false, true))
                                .addLitePalTags(EnumTag.PLANET.getLitePalTag())
                                .addLitePalTags(EnumTag.BEEN.getLitePalTag())
                                .addLitePalTags(EnumTag.HAD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm into sincerity in music and sincerity in art. If it doesn't feel true, I don't want to do it. Things that are too dramatic scare me. I think that's why I don't always fit into the world of performing arts.", false, true))
                                .addLitePalTags(EnumTag.FEEL.getLitePalTag())
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.SCARE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("From my perspective, probably women are won over by people who are sweet and respectful and courteous and kind and funny. I think those are the things that win women over.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.OVER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm always doing something musically - when I'm working or when I'm off.", false, true))
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.WORKING.getLitePalTag())
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm a person who gets better with practice. Getting older is awesome - because you get more practice.", false, true))
                                .addLitePalTags(EnumTag.PRACTICE.getLitePalTag())
                                .addLitePalTags(EnumTag.MORE.getLitePalTag())
                                .addLitePalTags(EnumTag.GETS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("One thing I love about Christmas music is that it has a tradition of warmth.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.MUSIC.getLitePalTag())
                                .addLitePalTags(EnumTag.I_LOVE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Nothing's better than a picnic.", false, true))
                                .addLitePalTags(EnumTag.BETTER.getLitePalTag())
                                .addLitePalTags(EnumTag.NOTHING.getLitePalTag())
                                .addLitePalTags(EnumTag.THAN.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZULEIKHA_ROBINSON.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The only time a friend has ever helped me in the industry was how I got my first job - that was through Mike Figgis.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .addLitePalTags(EnumTag.INDUSTRY.getLitePalTag())
                                .addLitePalTags(EnumTag.MIKE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("It took a lot of time to find my stride, and it was really humbling.", false, true))
                                .addLitePalTags(EnumTag.LOT.getLitePalTag())
                                .addLitePalTags(EnumTag.TOOK.getLitePalTag())
                                .addLitePalTags(EnumTag.HUMBLING.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I honestly never really watch the Emmys.", false, true))
                                .addLitePalTags(EnumTag.NEVER.getLitePalTag())
                                .addLitePalTags(EnumTag.WATCH.getLitePalTag())
                                .addLitePalTags(EnumTag.HONESTLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I did go through a phase where I played videogames quite often, but I haven't in a few years.", false, true))
                                .addLitePalTags(EnumTag.THROUGH.getLitePalTag())
                                .addLitePalTags(EnumTag.GO.getLitePalTag())
                                .addLitePalTags(EnumTag.PHASE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I like to frequent antiques shops and flea markets like the Rose Bowl in Pasadena.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.PASADENA.getLitePalTag())
                                .addLitePalTags(EnumTag.MARKETS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("When I got the role in 'Homeland,' it really opened something up. Other people respected me more as an actor, doors were opened, and I understood for the first time that it wasn't personal. All that rejection wasn't personal.", false, true))
                                .addLitePalTags(EnumTag.ROLE.getLitePalTag())
                                .addLitePalTags(EnumTag.HOMELAND.getLitePalTag())
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("'Lone Gunmen' was my first job, and I got a little cocky, thinking I'm brilliant and don't have to work that hard because it comes so naturally.", false, true))
                                .addLitePalTags(EnumTag.WORK.getLitePalTag())
                                .addLitePalTags(EnumTag.COCKY.getLitePalTag())
                                .addLitePalTags(EnumTag.BRILLIANT.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I'm mostly vegetarian.", false, true))
                                .addLitePalTags(EnumTag.VEGETARIAN.getLitePalTag())
                                .addLitePalTags(EnumTag.MOSTLY.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Only twice have I really had a hard time leaving a character. The first was my character in 'Rome' and then in 'Homeland.'", false, true))
                                .addLitePalTags(EnumTag.ROME.getLitePalTag())
                                .addLitePalTags(EnumTag.HOMELAND.getLitePalTag())
                                .addLitePalTags(EnumTag.HAD.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I do like to play the darker characters; I don't really know why.", false, true))
                                .addLitePalTags(EnumTag.PLAY.getLitePalTag())
                                .addLitePalTags(EnumTag.CHARACTERS.getLitePalTag())
                                .addLitePalTags(EnumTag.DARKER.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );
        litePalDataBuilders.add(
                new LitePalDataBuilder()
                        .setDataInputListener(dataInputListener)
                        .setLitePalLanguage(EnumLanguage.ENGLISH.getLitePalLanguage())
                        .setLitePalAuthor(EnumAuthor.ZYGMUNT_BAUMAN.getLitePalAuthor())
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("In a liquid modern life there are no permanent bonds, and any that we take up for a time must be tied loosely so that they can be untied again, as quickly and as effortlessly as possible, when circumstances change - as they surely will in our liquid modern society, over and over again.", false, true))
                                .addLitePalTags(EnumTag.SURELY.getLitePalTag())
                                .addLitePalTags(EnumTag.QUICKLY.getLitePalTag())
                                .addLitePalTags(EnumTag.BONDS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("We live in a globalising world. That means that all of us, consciously or not, depend on each other. Whatever we do or refrain from doing affects the lives of people who live in places we'll never visit.", false, true))
                                .addLitePalTags(EnumTag.DOING.getLitePalTag())
                                .addLitePalTags(EnumTag.OTHER.getLitePalTag())
                                .addLitePalTags(EnumTag.MEANS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("This awful concept of underclass is really horrifying. You're not lower class, you are excluded - outside.", false, true))
                                .addLitePalTags(EnumTag.AWFUL.getLitePalTag())
                                .addLitePalTags(EnumTag.CONCEPT.getLitePalTag())
                                .addLitePalTags(EnumTag.LOWER.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("As far as love is concerned, possession, power, fusion and disenchantment are the Four Horsemen of the Apocalypse.", false, true))
                                .addLitePalTags(EnumTag.LOVE.getLitePalTag())
                                .addLitePalTags(EnumTag.CONCERNED.getLitePalTag())
                                .addLitePalTags(EnumTag.POSSESSION.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Relationships, like cars, should undergo regular services to make sure they are still roadworthy.", false, true))
                                .addLitePalTags(EnumTag.RELATIONSHIPS.getLitePalTag())
                                .addLitePalTags(EnumTag.STILL.getLitePalTag())
                                .addLitePalTags(EnumTag.SURE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Like the phoenix, socialism is reborn from every pile of ashes left day in, day out, by burnt-out human dreams and charred hopes.", false, true))
                                .addLitePalTags(EnumTag.LIKE.getLitePalTag())
                                .addLitePalTags(EnumTag.ASHES.getLitePalTag())
                                .addLitePalTags(EnumTag.PILE.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("Why do I write books? Why do I think? Why should I be passionate? Because things could be different, they could be made better.", false, true))
                                .addLitePalTags(EnumTag.THINK.getLitePalTag())
                                .addLitePalTags(EnumTag.PASSIONATE.getLitePalTag())
                                .addLitePalTags(EnumTag.I_THINK.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The task for sociology is to come to the help of the individual. We have to be in service of freedom. It is something we have lost sight of.", false, true))
                                .addLitePalTags(EnumTag.HELP.getLitePalTag())
                                .addLitePalTags(EnumTag.TASK.getLitePalTag())
                                .addLitePalTags(EnumTag.INDIVIDUAL.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("The carrying power of a bridge is not the average strength of the pillars, but the strength of the weakest pillar. I have always believed that you do not measure the health of a society by GNP but by the condition of its worst off.", false, true))
                                .addLitePalTags(EnumTag.ALWAYS.getLitePalTag())
                                .addLitePalTags(EnumTag.AVERAGE.getLitePalTag())
                                .addLitePalTags(EnumTag.PILLARS.getLitePalTag())
                                .buildQuotes()
                        )
                        .addLitePalQuotes(new LitePalDataBuilder.LitePalQuoteBuilder()
                                .setLitePalQuote(new LitePalQuote("I was leftwing, I am leftwing, and I will die leftwing.", false, true))
                                .addLitePalTags(EnumTag.I_AM.getLitePalTag())
                                .addLitePalTags(EnumTag.DIE.getLitePalTag())
                                .addLitePalTags(EnumTag.WILL.getLitePalTag())
                                .buildQuotes()
                        )
                        .buildAuthor()
        );

        /************************
         * New added quotes end *
         ************************/

        DataLitePalDataBuilder dataLitePalDataBuilder = new DataLitePalDataBuilder(litePalDataBuilders);
        SessionManager.setStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER, DataLitePalDataBuilder.convertFromObjectToString(dataLitePalDataBuilder));

        return litePalDataBuilders;
    }

    public static ArrayList<LitePalDataBuilder> getAllQuotes() {
        ArrayList<LitePalDataBuilder> litePalDataBuilders = new ArrayList<>();
        if (!AllSettingsManager.isNullOrEmpty(SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER))) {
            DataLitePalDataBuilder dataLitePalDataBuilder = DataLitePalDataBuilder.convertFromStringToObject(SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER), DataLitePalDataBuilder.class);
            litePalDataBuilders = dataLitePalDataBuilder.getLitePalDataBuilders();
        }
        return litePalDataBuilders;
    }

//    public static ArrayList<LitePalDataBuilder> getAllQuoteAdvertises() {
//        ArrayList<LitePalDataBuilder> advertises = new ArrayList<LitePalDataBuilder>();
//        advertises.add(new LitePalDataBuilder(new LitePalLanguage(), new LitePalAuthor(), new ArrayList<LitePalDataBuilder.LitePalQuoteBuilder>(),false));
//        advertises.add(new LitePalDataBuilder("Add 2", false, false, null, null));
//        advertises.add(new LitePalDataBuilder("Add 3", false, false, null, null));
//        advertises.add(new LitePalDataBuilder("Add 4", false, false, null, null));
//        advertises.add(new LitePalDataBuilder("Add 5", false, false, null, null));
//        return advertises;
//    }

    /**********************
     * Methods for Author *
     **********************/
    public static LitePalDataBuilder.LitePalQuoteBuilder updateQuote(LitePalDataBuilder litePalDataBuilder, LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder) {
        //Update data into database
        int id = litePalQuoteBuilder.getLitePalQuote().update(litePalQuoteBuilder.getLitePalQuote().getId());
        //Search the updated data from database
        LitePalQuote litePalQuoteUpdated = LitePalQuote.find(LitePalQuote.class, litePalQuoteBuilder.getLitePalQuote().getId());
        //Update data into adapter view
        if ((id == 1) && (litePalQuoteUpdated != null) && (litePalQuoteUpdated.isFavourite() == litePalQuoteBuilder.getLitePalQuote().isFavourite())) {
            Log.d(TAG, "Updated quote(success response): " + litePalQuoteUpdated.toString());
            ArrayList<LitePalDataBuilder> litePalDataBuilders = getAllQuotes();
            for (LitePalDataBuilder dataBuilder : litePalDataBuilders) {
                if (dataBuilder.getLitePalAuthor().getAuthorName().equalsIgnoreCase(litePalDataBuilder.getLitePalAuthor().getAuthorName())) {
                    Log.d(TAG, "Updated quote: " + "found author");
                    int quotePosition = getQuotePosition(dataBuilder.getLitePalQuoteBuilders(), litePalQuoteBuilder);
                    Log.d(TAG, "Updated quote(id session): " + quotePosition);
                    if (quotePosition != -1) {
                        dataBuilder.getLitePalQuoteBuilders().remove(quotePosition);
                        litePalQuoteBuilder.setLitePalQuote(litePalQuoteUpdated);
                        dataBuilder.getLitePalQuoteBuilders().add(quotePosition, litePalQuoteBuilder);
                        Log.d(TAG, "Updated quote: " + dataBuilder.getLitePalQuoteBuilders().get(quotePosition).toString());

                        //Set updated value into session
                        DataLitePalDataBuilder dataLitePalDataBuilder = new DataLitePalDataBuilder(litePalDataBuilders);
                        SessionManager.setStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER, DataLitePalDataBuilder.convertFromObjectToString(dataLitePalDataBuilder));
                        //Log.d(TAG, "Updated quote(All session): " + SessionManager.getStringSetting(getGlobalContext(), SESSION_DATA_DATA_BUILDER));
                        //Set update to the quote of the day item
                        QuoteOfTheDay quoteOfTheDay = QuoteOfTheDay.convertFromStringToObject(SessionManager.getStringSetting(getGlobalContext(), SESSION_QUOTE_OF_THE_DAY), QuoteOfTheDay.class);
                        if (quoteOfTheDay != null && quoteOfTheDay.getLitePalQuoteBuilder().getLitePalQuote().getQuoteDescription().equalsIgnoreCase(litePalQuoteUpdated.getQuoteDescription())) {
                            quoteOfTheDay.setLitePalDataBuilder(dataBuilder);
                            quoteOfTheDay.setLitePalQuoteBuilder(litePalQuoteBuilder);
                            SessionManager.setStringSetting(getGlobalContext(), SESSION_QUOTE_OF_THE_DAY, QuoteOfTheDay.convertFromObjectToString(quoteOfTheDay));
                        }

                        return litePalQuoteBuilder;
                    }
                }
            }
        }
        return null;
    }

    public static int getQuotePosition(ArrayList<LitePalDataBuilder.LitePalQuoteBuilder> litePalQuoteBuilders, LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder) {
        for (int i = 0; i < litePalQuoteBuilders.size(); i++) {
            if (litePalQuoteBuilders.get(i).getLitePalQuote().getQuoteDescription().equalsIgnoreCase(litePalQuoteBuilder.getLitePalQuote().getQuoteDescription())) {
                return i;
            }
        }
        return -1;
    }

    public static LitePalDataBuilder getAuthorData(int dataPosition) {
        ArrayList<LitePalDataBuilder> litePalDataBuilders = getAllQuotes();
        if (dataPosition < litePalDataBuilders.size()) {
            return litePalDataBuilders.get(dataPosition);
        }
        return null;
    }

    public static ArrayList<GlazyCard> getAllGlazyCards(ArrayList<LitePalDataBuilder> litePalDataBuilders) {

        ArrayList<GlazyCard> glazyCards = new ArrayList<GlazyCard>();
        GlazyCard glazyCard;
        LitePalDataBuilder quote;
        GlazyImageView.ImageCutType lastTransitionType = GlazyImageView.ImageCutType.LINE_POSITIVE;
        for (int i = 0; i < litePalDataBuilders.size(); i++) {

            quote = litePalDataBuilders.get(i);
            glazyCard = new GlazyCard()
                    .withTitle(quote.isLitePalData() ? quote.getLitePalAuthor().getAuthorName() : "Advertise")
                    .withSubTitle(quote.isLitePalData() ? quote.getLitePalAuthor().getOccupation() : "")
                    .withOccupation(quote.isLitePalData() ? quote.getLitePalAuthor().getOccupation() : "")
                    .withNationality(quote.isLitePalData() ? quote.getLitePalAuthor().getNationality() : "")
                    .withBirthDate(quote.isLitePalData() ? quote.getLitePalAuthor().getBirthDate() : "")
                    .withDeathDate(quote.isLitePalData() ? quote.getLitePalAuthor().getDeathDate() : "")
                    .withDescription(quote.isLitePalData() ? (quote.getLitePalQuoteBuilders().size() > 0 ? quote.getLitePalQuoteBuilders().get(0).getLitePalQuote().getQuoteDescription() : "") : "")
                    .withImageRes((quote.getLitePalAuthor().getProfileImage() != -1) ? quote.getLitePalAuthor().getProfileImage() : R.drawable.avatar_male)
                    .withImageCutType(lastTransitionType)
                    .withImageCutHeightDP(50);
            glazyCards.add(glazyCard);

            if (lastTransitionType == GlazyImageView.ImageCutType.LINE_POSITIVE) {
                lastTransitionType = GlazyImageView.ImageCutType.ARC;
            } else if (lastTransitionType == GlazyImageView.ImageCutType.ARC) {
                lastTransitionType = GlazyImageView.ImageCutType.WAVE;
            } else if (lastTransitionType == GlazyImageView.ImageCutType.WAVE) {
                lastTransitionType = GlazyImageView.ImageCutType.LINE_POSITIVE;
            }
        }

        return glazyCards;
    }

    /*************************
     * Methods for Favourite *
     *************************/
    public static ArrayList<LitePalDataBuilder> getAllFavouriteQuotes() {
        ArrayList<LitePalDataBuilder> litePalDataBuilders = getAllQuotes();
        ArrayList<LitePalDataBuilder> favouriteDataBuilders = new ArrayList<>();

        for (LitePalDataBuilder litePalDataBuilder : litePalDataBuilders) {
            LitePalDataBuilder tempLitePalDataBuilder = litePalDataBuilder;
            ArrayList<LitePalDataBuilder.LitePalQuoteBuilder> tempLitePalQuoteBuilders = new ArrayList<>();
            for (LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder : litePalDataBuilder.getLitePalQuoteBuilders()) {
                if (litePalQuoteBuilder.getLitePalQuote().isFavourite()) {
                    tempLitePalQuoteBuilders.add(litePalQuoteBuilder);
                }
            }
            if (tempLitePalQuoteBuilders.size() > 0) {
                tempLitePalDataBuilder.setLitePalQuoteBuilders(tempLitePalQuoteBuilders);
                favouriteDataBuilders.add(tempLitePalDataBuilder);
            }
        }

        return favouriteDataBuilders;
    }

    /*******************
     * Methods for Tag *
     *******************/
//    public static ArrayList<LitePalTag> insetTags(ArrayList<LitePalTag> litePalTags) {
//        ArrayList<LitePalTag> mLitePalTags = new ArrayList<>();
//        for (int i = 0; i < litePalTags.size(); i++) {
//            mLitePalTags.add(insetTag(litePalTags.get(i)));
//        }
//        return mLitePalTags;
//    }
    public static LitePalTag insetTag(LitePalTag litePalTag, DataInputListener dataInputListener) {
        LitePalTag mSavedTag = getTag(litePalTag.getTagName());
        if (mSavedTag != null) {
            Log.d(TAG, "insetTag(existing): " + mSavedTag.toString());
            if (dataInputListener != null) {
                dataInputListener.InputListener(mSavedTag);
            }
            return mSavedTag;
        } else {
            if (litePalTag.save()) {
                LitePalTag savedTag = getTag(litePalTag.getTagName());
                if (savedTag != null) {
                    Log.d(TAG, "insetTag(new): " + savedTag.toString());
                    if (dataInputListener != null) {
                        dataInputListener.InputListener(savedTag);
                    }
                    return savedTag;
                }
            }
        }
        return null;
    }

    public static LitePalTag getTag(String tagName) {
        List<LitePalTag> savedTags = DataSupport.where("tagName = ?", tagName).find(LitePalTag.class);
        if (savedTags != null) {
            if (savedTags.size() == 1) {
                Log.d(TAG, "getTag: " + savedTags.get(0).toString());
                return savedTags.get(0);
            }
        }
        return null;
    }

    /**********************
     * Methods for Author *
     **********************/
    public static LitePalAuthor insetAuthor(LitePalAuthor litePalAuthor, DataInputListener dataInputListener) {
//        LitePalAuthor savedAuthor = getAuthor(litePalAuthor.getAuthorName());
//        if (savedAuthor != null) {
//            Log.d(TAG, "insetAuthor(existing): " + savedAuthor.toString());
//            if(InputListener !=null){
//                InputListener.InputListener(savedAuthor);
//            }
//            return savedAuthor;
//        } else {
        if (litePalAuthor.save()) {
            LitePalAuthor mSavedAuthor = getAuthor(litePalAuthor.getAuthorName());
            if (mSavedAuthor != null) {
                Log.d(TAG, "insetAuthor(new): " + mSavedAuthor.toString());
                if (dataInputListener != null) {
                    dataInputListener.InputListener(mSavedAuthor);
                }
                return mSavedAuthor;
            }
        }
//        }
        return null;
    }

    public static LitePalAuthor getAuthor(String authorName) {
        List<LitePalAuthor> savedAuthors = DataSupport.where("authorName = ?", authorName).find(LitePalAuthor.class);
        if (savedAuthors != null) {
            if (savedAuthors.size() == 1) {
                Log.d(TAG, "getAuthor: " + savedAuthors.get(0).toString());
                return savedAuthors.get(0);
            }
        }
        return null;
    }

    /************************
     * Methods for Language *
     ************************/
    public static LitePalLanguage insetLanguage(LitePalLanguage litePalLanguage, DataInputListener dataInputListener) {
        LitePalLanguage savedLanguage = getLanguage(litePalLanguage.getLanguageName());
        if (savedLanguage != null) {
            Log.d(TAG, "insetLanguage(Existing): " + savedLanguage.toString());
            if (dataInputListener != null) {
                dataInputListener.InputListener(savedLanguage);
            }
            return savedLanguage;
        } else {
            if (litePalLanguage.save()) {
                LitePalLanguage mSavedLanguage = getLanguage(litePalLanguage.getLanguageName());
                if (mSavedLanguage != null) {
                    Log.d(TAG, "insetLanguage(new): " + litePalLanguage.toString());
                    if (dataInputListener != null) {
                        dataInputListener.InputListener(mSavedLanguage);
                    }
                    return mSavedLanguage;
                }
            }
        }
        return null;
    }

    public static LitePalLanguage getLanguage(String languageName) {
        List<LitePalLanguage> savedLanguage = DataSupport.where("languageName = ?", languageName).find(LitePalLanguage.class);
        if (savedLanguage != null && savedLanguage.size() == 1) {
            Log.d(TAG, "getLanguage: " + savedLanguage.get(0).toString());
            return savedLanguage.get(0);
        }
        return null;
    }

    /*********************
     * Methods for Quote *
     *********************/
    public static LitePalQuote insertQuote(LitePalQuote litePalQuote, DataInputListener dataInputListener) {
//        LitePalQuote savedQuote = getQuote(litePalQuote.getQuoteDescription());
//        if (savedQuote != null) {
//            Log.d(TAG, "insetQuote(existing): " + savedQuote.toString());
//            return savedQuote;
//        } else {
        if (litePalQuote.save()) {
            LitePalQuote mSavedQuote = getQuote(litePalQuote.getQuoteDescription());
            if (mSavedQuote != null) {
                Log.d(TAG, "insetQuote(new): " + mSavedQuote.toString());
                if (dataInputListener != null) {
                    dataInputListener.InputListener(mSavedQuote);
                }
                return mSavedQuote;
            }
//            return litePalQuote;
//            }
        }
        return null;
    }

    public static LitePalQuote getQuote(String quoteDescription) {
        List<LitePalQuote> savedQuotes = DataSupport.where("quoteDescription = ?", quoteDescription).find(LitePalQuote.class);
        if (savedQuotes != null) {
            if (savedQuotes.size() == 1) {
                Log.d(TAG, "getQuote(existing): " + savedQuotes.get(0).toString());
                return savedQuotes.get(0);
            }
        }
        return null;
    }

    /********************************************
     * Methods for Quote, Language, Author, Tag *
     ********************************************/
    public static void insertQuoteLanguageAuthorTag(LitePalDataBuilder litePalDataBuilder, DataInputListener dataInputListener) {
        for (int i = 0; i < litePalDataBuilder.getLitePalQuoteBuilders().size(); i++) {
            LitePalDataBuilder.LitePalQuoteBuilder litePalQuoteBuilder = litePalDataBuilder.getLitePalQuoteBuilders().get(i);

            Log.d(TAG, "insertQuoteLanguageAuthorTag(quote)(inserting): " + litePalQuoteBuilder.getLitePalQuote().toString());
            for (int j = 0; j < litePalQuoteBuilder.getLitePalTags().size(); j++) {
                LitePalQuoteLanguageAuthorTag litePalQuoteLanguageAuthorTag = new LitePalQuoteLanguageAuthorTag(litePalQuoteBuilder.getLitePalQuote().getId(), litePalDataBuilder.getLitePalLanguage().getId(), litePalDataBuilder.getLitePalAuthor().getId(), litePalQuoteBuilder.getLitePalTags().get(j).getId());

//                LitePalQuoteLanguageAuthorTag mSavedData = getQuoteLanguageAuthorTag(litePalQuoteLanguageAuthorTag.getMd5());
//                if (mSavedData == null) {
                Log.d(TAG, "insertQuoteLanguageAuthorTag(new): " + litePalQuoteLanguageAuthorTag.toString());
                if (litePalQuoteLanguageAuthorTag.save()) {
//                        LitePalQuoteLanguageAuthorTag mSavedData = getQuoteLanguageAuthorTag(litePalQuoteLanguageAuthorTag.getMd5());

                    if (dataInputListener != null) {
                        dataInputListener.InputListener(litePalQuoteLanguageAuthorTag);
                    }
                }

//                }
            }
        }
    }

    public static LitePalQuoteLanguageAuthorTag getQuoteLanguageAuthorTag(String md5) {
        List<LitePalQuoteLanguageAuthorTag> savedQuotes = DataSupport.where("md5 = ?", md5).find(LitePalQuoteLanguageAuthorTag.class);
        if (savedQuotes != null) {
            if (savedQuotes.size() == 1) {
                Log.d(TAG, "getQuoteLanguageAuthorTag(existing): " + savedQuotes.get(0).toString());
                return savedQuotes.get(0);
            }
        }
        return null;
    }
}